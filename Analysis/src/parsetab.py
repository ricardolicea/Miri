
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTDECR ACTDECRVALOR ACTINCR ACTINCRVALOR AND ASSGN BOOL BOOL COLON COMMA CYCLE DECLARE DIVIDE DO DOT ELSE END EQ FLOAT FLOATNUMB FOR FUNCTION GRTR GRTREQ ID IF INT INTEGER LEFTBRACK LEFTBRACK LEFTKEY LEFTPAR LESS LESSEQ MAIN MINUS MULTP NOTEQ NUMBER OR PROGRAM QUOTE READ RETURN RIGHTBRACK RIGHTKEY RIGHTPAR SEMICOLON SPACE STRING SUM TYPE VOID WHILE WRITE newlineprogram : goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLONgoToMainQuad : altaPrograma : program2 : declare program3program2 : emptydeclare : DECLARE declareRecursivo declare : emptydeclareRecursivo : type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivodeclare2 : array dim1 : array : dim1 LEFTBRACK exp getTam RIGHTBRACK arraygetTam : declare3 : COMMA  ID altaVarGlobal declare3 program3 : funct program3funct : FUNCTION type ID altaModulo LEFTPAR funct2  RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEYendProc : guardaSalto : endproc : functReturn : RETURN NUMBER generaRet SEMICOLONfunctReturn : RETURN ID generaRet SEMICOLONgeneraRet : functReturn : emptyaltaModulo : funct2 : type ID altaVarLocal funct3funct3 : COMMA type ID  altaVarLocal funct3funct2 : emptyfunct3 : emptyprogram3 : emptyaltaVarGlobal : declareRecursivo : emptydeclare3 : emptyarray : emptytype : type2type2 : INTtype2 : FLOATtype2 : STRINGtype2 : BOOLtype2 : VOIDcuerpo : MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEYllenaMain : altaModuloMain : est : conditional est est : declareLocal estest : cycles estest : input estest : output estest : assignment estest : llamadaAFunct estest : emptyllamadaAFunct :  ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad  generaCuadFunct RIGHTPARcuadERA : cuadParam : gosubCuad : llamadaAFunct : emptyllamadaAFunct2 : exp cuadParam llamadaAFunct3llamadaAFunct3 : COMMA llamadaAFunct2llamadaAFunct3 : emptyllamadaAFunct2 : emptydeclareLocal : DECLARE declareRecursivoLocal declareRecursivoLocal : type ID  altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocalassignmentDecl : ASSGN meteAssign exp generaCuadmeteAssign : number : INTEGER meteNumnumber : FLOAT meteNumnumber : emptyassignmentDecl : emptydeclare2Local : array declare3Local : COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local declareRecursivoLocal : emptydeclareLocal : emptydeclare2Local : emptydeclare3Local : emptyaltaVarLocal : assignment : ID ASSGN  meteVar exp generaCuad SEMICOLONassignment : ID ASSGN meteVar llamadaAFunct SEMICOLONgeneraCuadFunct : meteVar : assignment : emptyconditional : IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY  conditionalElse gotoFCuad : gotoCuad : conditionalElse : gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto llenaGoto : conditionalElse : emptyconditional2 : exp conditional2conditional2 : emptycycles : whilecycles : emptycycles : do-whiledo-while : DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad gotoVCuad : meteSalto : while :  WHILE LEFTPAR while2 RIGHTPAR  gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF llenaCuadF : while2 : exp while2 : emptyexp : ID meteExp exp2exp : LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuadmetePar : sacaPar : meteExp : generaCuad : exp : number exp2exp : arreglo exp2exp : BOOL exp2arreglo : ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 arreglo2 : LEFTBRACK exp cuadVer2 RIGHTBRACKarreglo2 : emptycuadVer : cuadVer2 : arreglo : emptymeteNum : exp : emptyexp2 : LESS meteOper expexp2 : GRTR meteOper expexp2 : EQ meteOper expexp2 : NOTEQ meteOper expexp2 : AND meteOper expexp2 : OR meteOper expexp2 : SUM meteOper expmeteOper : exp2 : MINUS meteOper expexp2 : MULTP meteOper expexp2 : DIVIDE meteOper expexp2 : emptyoutput : WRITE LEFTPAR output2  RIGHTPAR SEMICOLONgeneraWriteCuad : meteID : output2 : ID meteID generaWriteCuad output2output2 : QUOTE ID QUOTE output2output2 : emptyinput : READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLONgeneraReadCuad : empty :circulo : LEFTPAR INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON cuadro : LEFTPAR INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLONtriangulo : LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLONlinea : LEFTPAR INTEGER COMMA STRING COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLONrectangulo : LEFTPAR INTEGER COMMA INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON'
    
_lr_action_items = {'ASSGN':([28,33,75,155,188,251,259,],[-29,36,116,-73,36,-73,36,]),'FLOAT':([8,22,36,41,46,54,57,76,82,83,84,85,87,88,89,90,91,92,96,99,103,110,116,121,125,126,127,128,129,130,131,132,133,134,153,154,173,207,223,235,252,],[16,16,-62,53,16,-99,53,16,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,53,53,16,53,-77,53,53,53,53,53,53,53,53,53,53,53,53,53,16,53,53,53,16,]),'RETURN':([66,68,70,71,72,73,76,78,79,80,81,109,112,113,114,118,120,122,123,124,141,171,193,198,201,220,236,238,250,252,257,258,260,261,262,264,266,272,273,],[-134,-89,-134,-134,-49,-134,-134,-134,-87,-134,-134,-42,-48,-45,-47,-59,-69,-44,-46,-43,-17,-134,211,-126,-75,-74,-132,-50,-94,-134,-91,-93,-60,-134,-90,-79,-84,-83,-82,]),'DO':([35,40,47,66,68,70,71,72,73,76,78,79,80,81,118,120,141,143,171,198,201,217,220,236,238,243,250,252,257,258,260,261,262,264,266,270,272,273,],[-40,-41,64,64,-89,64,64,-54,64,-134,64,-87,64,64,-59,-69,-17,64,64,-126,-75,64,-74,-132,-50,64,-94,-134,-91,-93,-60,-134,-90,-79,-84,64,-83,-82,]),'READ':([35,40,47,66,68,70,71,72,73,76,78,79,80,81,118,120,141,143,171,198,201,217,220,236,238,243,250,252,257,258,260,261,262,264,266,270,272,273,],[-40,-41,65,65,-89,65,65,-54,65,-134,65,-87,65,65,-59,-69,-17,65,65,-126,-75,65,-74,-132,-50,65,-94,-134,-91,-93,-60,-134,-90,-79,-84,65,-83,-82,]),'VOID':([8,22,46,76,103,173,252,],[15,15,15,15,15,15,15,]),'NUMBER':([211,],[231,]),'WHILE':([35,40,47,66,68,70,71,72,73,76,78,79,80,81,118,120,141,143,171,195,198,201,217,220,236,238,243,250,252,257,258,260,261,262,264,266,270,272,273,],[-40,-41,67,67,-89,67,67,-54,67,-134,67,-87,67,67,-59,-69,-17,67,67,215,-126,-75,67,-74,-132,-50,67,-94,-134,-91,-93,-60,-134,-90,-79,-84,67,-83,-82,]),'PROGRAM':([0,2,],[-2,3,]),'RIGHTKEY':([35,40,47,66,68,69,70,71,72,73,76,78,79,80,81,109,111,112,113,114,118,120,122,123,124,141,143,171,175,193,198,201,212,213,217,220,233,236,237,238,243,250,252,253,255,256,257,258,260,261,262,264,266,270,271,272,273,],[-40,-41,-134,-134,-89,-16,-134,-134,-49,-134,-134,-134,-87,-134,-134,-42,148,-48,-45,-47,-59,-69,-44,-46,-43,-17,-134,-134,195,-134,-126,-75,-18,-22,-134,-74,247,-132,250,-50,-134,-94,-134,261,-19,-20,-91,-93,-60,-134,-90,-79,-84,-134,272,-83,-82,]),'MINUS':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,88,88,-112,-65,-101,-112,-99,88,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,88,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,88,-134,-106,-108,-134,-134,-107,]),'DIVIDE':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,83,83,-112,-65,-101,-112,-99,83,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,83,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,83,-134,-106,-108,-134,-134,-107,]),'MULTP':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,90,90,-112,-65,-101,-112,-99,90,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,90,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,90,-134,-106,-108,-134,-134,-107,]),'SEMICOLON':([4,5,26,28,33,36,37,38,41,43,44,45,48,49,50,51,52,53,55,56,58,60,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,104,116,125,126,127,128,129,130,131,132,133,134,136,140,153,155,157,158,159,160,161,162,163,164,165,166,168,169,170,178,181,182,183,184,188,190,191,192,202,205,208,209,210,216,225,226,227,230,231,232,238,241,242,245,246,251,254,259,263,267,269,],[-3,6,31,-29,-134,-62,-134,-66,-134,-134,-9,-32,-134,-134,-112,-65,-101,-112,-134,-102,103,-31,-121,-121,-121,-121,-103,-121,-121,-121,-121,-121,-121,-125,-104,-63,-134,-64,-105,-61,-29,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-97,-134,-134,-73,-118,-124,-114,-117,-120,-122,-115,-123,-116,-119,-100,-134,-13,198,201,-54,-101,-102,-134,-134,-134,-11,220,-134,-106,-108,-102,236,-134,-67,-32,-98,-21,-21,-50,-72,252,255,256,-73,-107,-134,-134,-134,-68,]),'QUOTE':([115,151,179,180,199,200,],[150,-128,199,-127,150,150,]),'LESS':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,84,84,-112,-65,-101,-112,-99,84,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,84,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,84,-134,-106,-108,-134,-134,-107,]),'RIGHTPAR':([27,46,48,49,50,51,52,53,54,55,61,63,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,106,110,115,121,125,126,127,128,129,130,131,132,133,134,136,137,142,144,145,146,147,149,151,152,154,156,157,158,159,160,161,162,163,164,165,166,168,172,174,176,180,185,186,187,189,190,191,196,199,200,203,204,208,209,210,214,218,219,221,222,223,224,230,234,235,239,248,249,254,],[32,-134,-134,-134,-112,-65,-101,-112,-99,-134,105,-26,-121,-121,-121,-121,-103,-121,-121,-121,-121,-121,-121,-125,-104,-63,-134,-64,-134,-105,-73,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-97,168,-134,-128,-65,177,-95,178,-128,-131,-134,-102,-118,-124,-114,-117,-120,-122,-115,-123,-116,-119,-100,-24,-27,-133,-127,-53,-58,-52,206,-134,-134,216,-134,-134,-76,-134,-106,-108,-102,-73,-130,-129,238,-55,-134,-57,-98,-134,-134,-56,-25,257,-107,]),'NOTEQ':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,85,85,-112,-65,-101,-112,-99,85,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,85,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,85,-134,-106,-108,-134,-134,-107,]),'COMMA':([28,33,36,37,38,41,43,44,45,48,49,50,51,52,53,55,56,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,104,106,125,126,127,128,129,130,131,132,133,134,136,140,142,154,155,157,158,159,160,161,162,163,164,165,166,168,169,186,187,188,190,191,192,204,205,208,209,210,214,223,225,226,227,230,234,251,254,259,263,267,],[-29,-134,-62,-134,-66,-134,59,-9,-32,-134,-134,-112,-65,-101,-112,-134,-102,-121,-121,-121,-121,-103,-121,-121,-121,-121,-121,-121,-125,-104,-63,-134,-64,-105,-61,-29,-73,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-97,59,173,-134,-73,-118,-124,-114,-117,-120,-122,-115,-123,-116,-119,-100,-134,-65,-52,-134,-134,-134,-11,223,-134,-106,-108,-102,-73,-134,240,-67,-32,-98,173,-73,-107,-134,-134,240,]),'INTEGER':([36,41,54,57,82,83,84,85,87,88,89,90,91,92,96,99,110,116,121,125,126,127,128,129,130,131,132,133,134,153,154,207,223,235,],[-62,50,-99,50,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,50,50,50,-77,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'IF':([35,40,47,66,68,70,71,72,73,76,78,79,80,81,118,120,141,143,171,198,201,217,220,236,238,243,250,252,257,258,260,261,262,264,266,270,272,273,],[-40,-41,77,77,-89,77,77,-54,77,-134,77,-87,77,77,-59,-69,-17,77,77,-126,-75,77,-74,-132,-50,77,-94,-134,-91,-93,-60,-134,-90,-79,-84,77,-83,-82,]),'SUM':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,87,87,-112,-65,-101,-112,-99,87,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,87,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,87,-134,-106,-108,-134,-134,-107,]),'$end':([1,31,],[0,-1,]),'FUNCTION':([6,8,9,10,18,20,23,103,139,247,],[-134,-134,22,-7,-6,-30,22,-134,-8,-15,]),'RIGHTBRACK':([48,49,50,51,52,53,55,57,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,102,125,126,127,128,129,130,131,132,133,134,135,136,138,157,158,159,160,161,162,163,164,165,166,167,168,190,191,207,208,209,210,229,230,244,254,],[-134,-134,-112,-65,-101,-112,-134,-134,-121,-121,-121,-121,-103,-121,-121,-121,-121,-121,-121,-125,-104,-63,-134,-134,-64,-105,-12,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-109,-97,169,-118,-124,-114,-117,-120,-122,-115,-123,-116,-119,190,-100,-134,-134,-134,-106,-108,-102,-110,-98,254,-107,]),'END':([11,148,],[26,-39,]),'STRING':([8,22,46,76,103,173,252,],[13,13,13,13,13,13,13,]),'ELSE':([261,265,],[-81,268,]),'WRITE':([35,40,47,66,68,70,71,72,73,76,78,79,80,81,118,120,141,143,171,198,201,217,220,236,238,243,250,252,257,258,260,261,262,264,266,270,272,273,],[-40,-41,74,74,-89,74,74,-54,74,-134,74,-87,74,74,-59,-69,-17,74,74,-126,-75,74,-74,-132,-50,74,-94,-134,-91,-93,-60,-134,-90,-79,-84,74,-83,-82,]),'GRTR':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,89,89,-112,-65,-101,-112,-99,89,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,89,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,89,-134,-106,-108,-134,-134,-107,]),'ID':([3,13,14,15,16,17,19,21,29,35,36,40,41,47,54,57,59,62,66,68,70,71,72,73,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,96,99,108,110,115,116,118,119,120,121,125,126,127,128,129,130,131,132,133,134,141,143,150,151,153,154,171,180,194,198,199,200,201,207,211,217,220,223,235,236,238,240,243,250,252,257,258,260,261,262,264,266,270,272,273,],[4,-36,-34,-38,-35,-37,28,-33,34,-40,-62,-41,52,75,-99,52,104,106,75,-89,75,75,-54,75,-134,75,-87,75,75,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,52,52,144,52,151,-77,-59,155,-69,52,52,52,52,52,52,52,52,52,52,52,-17,75,179,-128,183,52,75,-127,214,-126,151,151,-75,52,232,75,-74,52,52,-132,-50,251,75,-94,-134,-91,-93,-60,-134,-90,-79,-84,75,-83,-82,]),'EQ':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,91,91,-112,-65,-101,-112,-99,91,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,91,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,91,-134,-106,-108,-134,-134,-107,]),'DECLARE':([6,35,40,47,66,68,70,71,72,73,76,78,79,80,81,118,120,141,143,171,198,201,217,220,236,238,243,250,252,257,258,260,261,262,264,266,270,272,273,],[8,-40,-41,76,76,-89,76,76,-54,76,-134,76,-87,76,76,-59,-69,-17,76,76,-126,-75,76,-74,-132,-50,76,-94,-134,-91,-93,-60,-134,-90,-79,-84,76,-83,-82,]),'LEFTKEY':([32,64,105,107,177,197,206,228,268,],[35,-92,141,143,-80,217,-80,243,270,]),'AND':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,82,82,-112,-65,-101,-112,-99,82,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,82,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,82,-134,-106,-108,-134,-134,-107,]),'INT':([8,22,46,76,103,173,252,],[14,14,14,14,14,14,14,]),'LEFTBRACK':([28,33,36,37,38,41,42,48,49,50,51,52,53,55,56,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,101,125,126,127,128,129,130,131,132,133,134,136,155,157,158,159,160,161,162,163,164,165,166,168,169,183,188,190,191,205,208,209,210,230,251,254,259,263,],[-29,-134,-62,-10,-66,-134,57,-134,-134,-112,-65,96,-112,-134,-102,-121,-121,-121,-121,-103,-121,-121,-121,-121,-121,-121,-125,-104,-63,-134,-64,-105,-61,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-97,-73,-118,-124,-114,-117,-120,-122,-115,-123,-116,-119,-100,-10,96,-134,207,-134,-10,-106,-108,-102,-98,-73,-107,-134,-10,]),'LEFTPAR':([12,34,36,39,41,54,57,65,67,74,75,77,82,83,84,85,87,88,89,90,91,92,96,99,110,116,117,121,125,126,127,128,129,130,131,132,133,134,153,154,183,207,215,223,235,],[27,-23,-62,46,54,-99,54,108,110,115,-51,121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,54,54,54,-77,154,54,54,54,54,54,54,54,54,54,54,54,54,54,-51,54,235,54,54,]),'BOOL':([8,22,36,41,46,54,57,76,82,83,84,85,87,88,89,90,91,92,96,99,103,110,116,121,125,126,127,128,129,130,131,132,133,134,153,154,173,207,223,235,252,],[17,17,-62,55,17,-99,55,17,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,55,55,17,55,-77,55,55,55,55,55,55,55,55,55,55,55,55,55,17,55,55,55,17,]),'MAIN':([6,7,8,9,10,18,20,23,24,25,30,103,139,247,],[-134,12,-134,-134,-5,-6,-30,-134,-4,-28,-14,-134,-8,-15,]),'OR':([36,41,48,49,50,51,52,53,54,55,57,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,110,116,121,125,126,127,128,129,130,131,132,133,134,145,153,154,168,182,183,186,190,191,207,208,209,223,235,254,],[-62,-134,92,92,-112,-65,-101,-112,-99,92,-134,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-63,-134,92,-64,-134,-134,-77,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-65,-134,-134,-100,-65,-101,-65,-134,92,-134,-106,-108,-134,-134,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'meteOper':([82,83,84,85,87,88,89,90,91,92,],[125,126,127,128,129,130,131,132,133,134,]),'cuadVer':([135,],[167,]),'sacaPar':([168,],[191,]),'funct':([9,23,],[23,23,]),'output2':([115,199,200,],[149,218,219,]),'cuadERA':([75,183,],[117,117,]),'conditional':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'endProc':([69,],[111,]),'number':([41,57,96,99,110,121,125,126,127,128,129,130,131,132,133,134,153,154,207,223,235,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'arreglo':([41,57,96,99,110,121,125,126,127,128,129,130,131,132,133,134,153,154,207,223,235,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'dim1':([37,169,205,263,],[42,42,42,42,]),'llenaGoto':([272,],[273,]),'declareRecursivoLocal':([76,252,],[118,260,]),'array':([37,169,205,263,],[44,192,226,226,]),'functReturn':([193,],[212,]),'altaVarGlobal':([28,104,],[33,140,]),'type2':([8,22,46,76,103,173,252,],[21,21,21,21,21,21,21,]),'meteExp':([52,183,],[97,97,]),'est':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[69,109,112,113,114,122,123,124,175,193,237,253,271,]),'conditionalElse':([261,],[264,]),'program2':([6,],[7,]),'program3':([9,23,],[24,30,]),'exp2':([48,49,55,97,191,],[86,94,100,136,210,]),'llamadaAFunct':([47,66,70,71,73,78,80,81,143,153,171,217,243,270,],[70,70,70,70,70,70,70,70,70,181,70,70,70,70,]),'do-while':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'generaReadCuad':([176,],[196,]),'guardaSalto':([141,],[171,]),'llamadaAFunct3':([204,],[222,]),'funct2':([46,],[61,]),'program':([0,],[1,]),'meteSalto':([64,],[107,]),'gosubCuad':([185,],[203,]),'llamadaAFunct2':([154,223,],[185,239,]),'input':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[71,71,71,71,71,71,71,71,71,71,71,71,71,]),'llenaCuadF':([250,],[258,]),'type':([8,22,46,76,103,173,252,],[19,29,62,119,19,194,119,]),'empty':([6,8,9,23,33,37,41,43,46,47,48,49,55,57,66,70,71,73,76,78,80,81,96,97,99,103,110,115,121,125,126,127,128,129,130,131,132,133,134,140,142,143,153,154,169,171,188,190,191,193,199,200,204,205,207,217,223,225,234,235,243,252,259,261,263,267,270,],[10,20,25,25,38,45,51,60,63,72,93,93,93,51,72,72,72,72,120,72,72,72,51,93,51,20,145,152,51,51,51,51,51,51,51,51,51,51,51,60,174,72,182,186,45,72,38,209,93,213,152,152,224,227,51,72,186,241,174,145,72,120,38,266,227,241,72,]),'arreglo2':([190,],[208,]),'gotoVCuad':([257,],[262,]),'llenaMain':([35,],[40,]),'declare2Local':([205,263,],[225,267,]),'assignment':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[73,73,73,73,73,73,73,73,73,73,73,73,73,]),'metePar':([54,],[99,]),'generaCuadFunct':([203,],[221,]),'assignmentDecl':([33,188,259,],[37,205,263,]),'generaCuad':([56,156,184,210,],[101,189,202,230,]),'cuerpo':([7,],[11,]),'generaWriteCuad':([180,],[200,]),'altaVarLocal':([106,155,214,251,],[142,188,234,259,]),'cuadParam':([187,],[204,]),'declare2':([37,],[43,]),'declare3':([43,140,],[58,170,]),'gotoCuad':([261,],[265,]),'meteNum':([50,53,],[95,98,]),'gotoFCuad':([177,206,],[197,228,]),'declare3Local':([225,267,],[242,269,]),'getTam':([102,],[138,]),'declareLocal':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[81,81,81,81,81,81,81,81,81,81,81,81,81,]),'while2':([110,235,],[146,249,]),'funct3':([142,234,],[172,248,]),'goToMainQuad':([0,],[2,]),'generaRet':([231,232,],[245,246,]),'cuadVer2':([229,],[244,]),'endproc':([212,],[233,]),'altaModuloMain':([40,],[47,]),'altaModulo':([34,],[39,]),'meteVar':([116,],[153,]),'while':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[79,79,79,79,79,79,79,79,79,79,79,79,79,]),'altaPrograma':([4,],[5,]),'declareRecursivo':([8,103,],[18,139,]),'exp':([41,57,96,99,110,121,125,126,127,128,129,130,131,132,133,134,153,154,207,223,235,],[56,102,135,137,147,156,157,158,159,160,161,162,163,164,165,166,184,187,229,187,147,]),'meteID':([144,151,],[176,180,]),'output':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[80,80,80,80,80,80,80,80,80,80,80,80,80,]),'meteAssign':([36,],[41,]),'cycles':([47,66,70,71,73,78,80,81,143,171,217,243,270,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'declare':([6,],[9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON','program',9,'p_program','parser.py',57),
  ('goToMainQuad -> <empty>','goToMainQuad',0,'p_goToMainQuad','parser.py',60),
  ('altaPrograma -> <empty>','altaPrograma',0,'p_altaPrograma','parser.py',72),
  ('program2 -> declare program3','program2',2,'p_program2','parser.py',82),
  ('program2 -> empty','program2',1,'p_program2Empty','parser.py',85),
  ('declare -> DECLARE declareRecursivo','declare',2,'p_declare','parser.py',88),
  ('declare -> empty','declare',1,'p_declareEmpty','parser.py',92),
  ('declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo','declareRecursivo',8,'p_declareRecursivo','parser.py',95),
  ('declare2 -> array','declare2',1,'p_declare2','parser.py',99),
  ('dim1 -> <empty>','dim1',0,'p_dim1','parser.py',102),
  ('array -> dim1 LEFTBRACK exp getTam RIGHTBRACK array','array',6,'p_array','parser.py',111),
  ('getTam -> <empty>','getTam',0,'p_getTam','parser.py',114),
  ('declare3 -> COMMA ID altaVarGlobal declare3','declare3',4,'p_declare3','parser.py',164),
  ('program3 -> funct program3','program3',2,'p_program3','parser.py',168),
  ('funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY','funct',13,'p_funct','parser.py',171),
  ('endProc -> <empty>','endProc',0,'p_endProc','parser.py',175),
  ('guardaSalto -> <empty>','guardaSalto',0,'p_guardaSalto','parser.py',179),
  ('endproc -> <empty>','endproc',0,'p_endproc','parser.py',183),
  ('functReturn -> RETURN NUMBER generaRet SEMICOLON','functReturn',4,'p_functReturn','parser.py',186),
  ('functReturn -> RETURN ID generaRet SEMICOLON','functReturn',4,'p_functReturnID','parser.py',190),
  ('generaRet -> <empty>','generaRet',0,'p_generaRet','parser.py',194),
  ('functReturn -> empty','functReturn',1,'p_functReturnEmpty','parser.py',198),
  ('altaModulo -> <empty>','altaModulo',0,'p_altaModulo','parser.py',201),
  ('funct2 -> type ID altaVarLocal funct3','funct2',4,'p_funct2','parser.py',214),
  ('funct3 -> COMMA type ID altaVarLocal funct3','funct3',5,'p_funct3','parser.py',218),
  ('funct2 -> empty','funct2',1,'p_funct2Empty','parser.py',222),
  ('funct3 -> empty','funct3',1,'p_funct3Empty','parser.py',225),
  ('program3 -> empty','program3',1,'p_program3Empty','parser.py',228),
  ('altaVarGlobal -> <empty>','altaVarGlobal',0,'p_altaVarGlobal','parser.py',231),
  ('declareRecursivo -> empty','declareRecursivo',1,'p_declareResursivoEmpty','parser.py',242),
  ('declare3 -> empty','declare3',1,'p_declare3Empty','parser.py',245),
  ('array -> empty','array',1,'p_arrayEmpty','parser.py',249),
  ('type -> type2','type',1,'p_type','parser.py',252),
  ('type2 -> INT','type2',1,'p_type2','parser.py',255),
  ('type2 -> FLOAT','type2',1,'p_type2Float','parser.py',261),
  ('type2 -> STRING','type2',1,'p_type2String','parser.py',267),
  ('type2 -> BOOL','type2',1,'p_type2Bool','parser.py',273),
  ('type2 -> VOID','type2',1,'p_type2Void','parser.py',279),
  ('cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY','cuerpo',9,'p_cuerpo','parser.py',285),
  ('llenaMain -> <empty>','llenaMain',0,'p_llenaMain','parser.py',289),
  ('altaModuloMain -> <empty>','altaModuloMain',0,'p_altaModuloMain','parser.py',295),
  ('est -> conditional est','est',2,'p_est','parser.py',305),
  ('est -> declareLocal est','est',2,'p_estVars','parser.py',308),
  ('est -> cycles est','est',2,'p_estCycle','parser.py',311),
  ('est -> input est','est',2,'p_estRead','parser.py',314),
  ('est -> output est','est',2,'p_estWrite','parser.py',317),
  ('est -> assignment est','est',2,'p_estAassignment','parser.py',320),
  ('est -> llamadaAFunct est','est',2,'p_estFunct','parser.py',323),
  ('est -> empty','est',1,'p_estEmpty','parser.py',327),
  ('llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR','llamadaAFunct',7,'p_llamadaAFunct','parser.py',330),
  ('cuadERA -> <empty>','cuadERA',0,'p_cuadERA','parser.py',333),
  ('cuadParam -> <empty>','cuadParam',0,'p_cuadParam','parser.py',337),
  ('gosubCuad -> <empty>','gosubCuad',0,'p_gosubCuad','parser.py',341),
  ('llamadaAFunct -> empty','llamadaAFunct',1,'p_llamadaAFunctEmpty','parser.py',345),
  ('llamadaAFunct2 -> exp cuadParam llamadaAFunct3','llamadaAFunct2',3,'p_llamadaAFunct2','parser.py',348),
  ('llamadaAFunct3 -> COMMA llamadaAFunct2','llamadaAFunct3',2,'p_llamadaAFunct3','parser.py',352),
  ('llamadaAFunct3 -> empty','llamadaAFunct3',1,'p_llamadaAFunct3Empty','parser.py',356),
  ('llamadaAFunct2 -> empty','llamadaAFunct2',1,'p_llamadaAFunct2Empty','parser.py',359),
  ('declareLocal -> DECLARE declareRecursivoLocal','declareLocal',2,'p_declareLocal','parser.py',362),
  ('declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal','declareRecursivoLocal',8,'p_declareRecursivoLocal','parser.py',366),
  ('assignmentDecl -> ASSGN meteAssign exp generaCuad','assignmentDecl',4,'p_assignmentDeclare','parser.py',370),
  ('meteAssign -> <empty>','meteAssign',0,'p_meteAssign','parser.py',373),
  ('number -> INTEGER meteNum','number',2,'p_number','parser.py',377),
  ('number -> FLOAT meteNum','number',2,'p_numberFloat','parser.py',381),
  ('number -> empty','number',1,'p_numberEmpty','parser.py',384),
  ('assignmentDecl -> empty','assignmentDecl',1,'p_assignmentDeclareEmpty','parser.py',388),
  ('declare2Local -> array','declare2Local',1,'p_declare2Local','parser.py',391),
  ('declare3Local -> COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local','declare3Local',6,'p_declare3Local','parser.py',394),
  ('declareRecursivoLocal -> empty','declareRecursivoLocal',1,'p_declareResursivoEmptyLocal','parser.py',397),
  ('declareLocal -> empty','declareLocal',1,'p_declareEmptyLocal','parser.py',400),
  ('declare2Local -> empty','declare2Local',1,'p_declar2EmptyLocal','parser.py',403),
  ('declare3Local -> empty','declare3Local',1,'p_declare3EmptyLocal','parser.py',406),
  ('altaVarLocal -> <empty>','altaVarLocal',0,'p_altaVarLocal','parser.py',409),
  ('assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON','assignment',6,'p_assignment','parser.py',426),
  ('assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON','assignment',5,'p_assignmentFUNCT','parser.py',431),
  ('generaCuadFunct -> <empty>','generaCuadFunct',0,'p_generaCuadFunct','parser.py',436),
  ('meteVar -> <empty>','meteVar',0,'p_meteVar','parser.py',440),
  ('assignment -> empty','assignment',1,'p_assignmentEmpty','parser.py',462),
  ('conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse','conditional',10,'p_conditional','parser.py',465),
  ('gotoFCuad -> <empty>','gotoFCuad',0,'p_gotoFCuad','parser.py',470),
  ('gotoCuad -> <empty>','gotoCuad',0,'p_goToCuad','parser.py',474),
  ('conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto','conditionalElse',6,'p_conditionalElse','parser.py',478),
  ('llenaGoto -> <empty>','llenaGoto',0,'p_llenaGoto','parser.py',482),
  ('conditionalElse -> empty','conditionalElse',1,'p_conditionalElseEmpty','parser.py',486),
  ('conditional2 -> exp conditional2','conditional2',2,'p_conditional2','parser.py',489),
  ('conditional2 -> empty','conditional2',1,'p_conditional2Empty','parser.py',492),
  ('cycles -> while','cycles',1,'p_cycles','parser.py',495),
  ('cycles -> empty','cycles',1,'p_cyclesEmpty','parser.py',498),
  ('cycles -> do-while','cycles',1,'p_cyclesDoWhile','parser.py',504),
  ('do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad','do-while',10,'p_doWhile','parser.py',507),
  ('gotoVCuad -> <empty>','gotoVCuad',0,'p_gotoVCuad','parser.py',510),
  ('meteSalto -> <empty>','meteSalto',0,'p_meteSalto','parser.py',514),
  ('while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF','while',9,'p_whileClass','parser.py',518),
  ('llenaCuadF -> <empty>','llenaCuadF',0,'p_llenaCuadF','parser.py',521),
  ('while2 -> exp','while2',1,'p_while2','parser.py',525),
  ('while2 -> empty','while2',1,'p_while2Empty','parser.py',528),
  ('exp -> ID meteExp exp2','exp',3,'p_exp','parser.py',531),
  ('exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad','exp',7,'p_expPar','parser.py',535),
  ('metePar -> <empty>','metePar',0,'p_metePar','parser.py',538),
  ('sacaPar -> <empty>','sacaPar',0,'p_sacaPar','parser.py',542),
  ('meteExp -> <empty>','meteExp',0,'p_meteExp','parser.py',546),
  ('generaCuad -> <empty>','generaCuad',0,'p_generaCuad','parser.py',569),
  ('exp -> number exp2','exp',2,'p_expNUMERO','parser.py',573),
  ('exp -> arreglo exp2','exp',2,'p_expArreglo','parser.py',576),
  ('exp -> BOOL exp2','exp',2,'p_expBool','parser.py',579),
  ('arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2','arreglo',6,'p_arreglo','parser.py',582),
  ('arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK','arreglo2',4,'p_arreglo2','parser.py',585),
  ('arreglo2 -> empty','arreglo2',1,'p_arreglo2Empty','parser.py',588),
  ('cuadVer -> <empty>','cuadVer',0,'p_cuadVer','parser.py',591),
  ('cuadVer2 -> <empty>','cuadVer2',0,'p_cuadVer2','parser.py',601),
  ('arreglo -> empty','arreglo',1,'p_arregloEmpty','parser.py',610),
  ('meteNum -> <empty>','meteNum',0,'p_meteNum','parser.py',613),
  ('exp -> empty','exp',1,'p_expVACIA','parser.py',620),
  ('exp2 -> LESS meteOper exp','exp2',3,'p_exp2','parser.py',623),
  ('exp2 -> GRTR meteOper exp','exp2',3,'p_expr2Grtr','parser.py',627),
  ('exp2 -> EQ meteOper exp','exp2',3,'p_exp2Equal','parser.py',631),
  ('exp2 -> NOTEQ meteOper exp','exp2',3,'p_exp2NotEq','parser.py',635),
  ('exp2 -> AND meteOper exp','exp2',3,'p_exp2And','parser.py',639),
  ('exp2 -> OR meteOper exp','exp2',3,'p_exp2OR','parser.py',643),
  ('exp2 -> SUM meteOper exp','exp2',3,'p_exp2SUM','parser.py',648),
  ('meteOper -> <empty>','meteOper',0,'p_meteOper','parser.py',654),
  ('exp2 -> MINUS meteOper exp','exp2',3,'p_exp2MINUS','parser.py',658),
  ('exp2 -> MULTP meteOper exp','exp2',3,'p_exp2MULTP','parser.py',662),
  ('exp2 -> DIVIDE meteOper exp','exp2',3,'p_exp2DIVIDE','parser.py',666),
  ('exp2 -> empty','exp2',1,'p_exp2Empty','parser.py',670),
  ('output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON','output',5,'p_output','parser.py',675),
  ('generaWriteCuad -> <empty>','generaWriteCuad',0,'p_generaWriteCuad','parser.py',679),
  ('meteID -> <empty>','meteID',0,'p_meteID','parser.py',684),
  ('output2 -> ID meteID generaWriteCuad output2','output2',4,'p_output2','parser.py',688),
  ('output2 -> QUOTE ID QUOTE output2','output2',4,'p_output2Quotes','parser.py',692),
  ('output2 -> empty','output2',1,'p_output2Empty','parser.py',695),
  ('input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON','input',7,'p_input','parser.py',699),
  ('generaReadCuad -> <empty>','generaReadCuad',0,'p_generaReadCuad','parser.py',703),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',707),
  ('circulo -> LEFTPAR INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON','circulo',12,'p_circle','parser.py',712),
  ('cuadro -> LEFTPAR INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON','cuadro',12,'p_square','parser.py',719),
  ('triangulo -> LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON','triangulo',18,'p_triangle','parser.py',722),
  ('linea -> LEFTPAR INTEGER COMMA STRING COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON','linea',14,'p_line','parser.py',725),
  ('rectangulo -> LEFTPAR INTEGER COMMA INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON','rectangulo',16,'p_rectangle','parser.py',728),
]
