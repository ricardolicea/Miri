Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACTINCR
    ACTDECR
    DOT
    ACTINCRVALOR
    ACTDECRVALOR
    LESSEQ
    COLON
    GRTREQ
    CYCLE
    FOR
    SPACE
    newline
    FLOATNUMB
    TYPE

Grammar

Rule 0     S' -> program
Rule 1     program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON
Rule 2     goToMainQuad -> <empty>
Rule 3     altaPrograma -> <empty>
Rule 4     program2 -> declare program3
Rule 5     program2 -> empty
Rule 6     declare -> DECLARE declareRecursivo
Rule 7     declare -> empty
Rule 8     declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
Rule 9     declare2 -> array
Rule 10    declare3 -> COMMA ID altaVarGlobal declare3
Rule 11    program3 -> funct program3
Rule 12    funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY
Rule 13    guardaSalto -> <empty>
Rule 14    functReturn -> RETURN NUMBER generaRet SEMICOLON
Rule 15    functReturn -> RETURN ID generaRet SEMICOLON
Rule 16    generaRet -> <empty>
Rule 17    functReturn -> empty
Rule 18    altaModulo -> <empty>
Rule 19    funct2 -> type ID altaVarLocal funct3
Rule 20    funct3 -> COMMA type ID altaVarLocal funct3
Rule 21    funct2 -> empty
Rule 22    funct3 -> empty
Rule 23    program3 -> empty
Rule 24    altaVarGlobal -> <empty>
Rule 25    declareRecursivo -> empty
Rule 26    declare3 -> empty
Rule 27    array -> LEFTBRACK exp RIGHTBRACK array
Rule 28    array -> empty
Rule 29    type -> type2
Rule 30    type2 -> INT
Rule 31    type2 -> FLOAT
Rule 32    type2 -> STRING
Rule 33    type2 -> BOOL
Rule 34    type2 -> VOID
Rule 35    cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY
Rule 36    llenaMain -> <empty>
Rule 37    altaModuloMain -> <empty>
Rule 38    est -> conditional est
Rule 39    est -> declareLocal est
Rule 40    est -> cycles est
Rule 41    est -> input est
Rule 42    est -> output est
Rule 43    est -> assignment est
Rule 44    est -> llamadaAFunct est
Rule 45    est -> empty
Rule 46    llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
Rule 47    cuadERA -> <empty>
Rule 48    cuadParam -> <empty>
Rule 49    gosubCuad -> <empty>
Rule 50    llamadaAFunct -> empty
Rule 51    llamadaAFunct2 -> exp llamadaAFunct3
Rule 52    llamadaAFunct3 -> COMMA llamadaAFunct2
Rule 53    llamadaAFunct3 -> empty
Rule 54    llamadaAFunct2 -> empty
Rule 55    declareLocal -> DECLARE declareRecursivoLocal
Rule 56    declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
Rule 57    assignmentDecl -> ASSGN exp
Rule 58    number -> INTEGER meteNum
Rule 59    number -> FLOAT meteNum
Rule 60    number -> empty
Rule 61    assignmentDecl -> empty
Rule 62    declare2Local -> array
Rule 63    declare3Local -> COMMA ID altaVarLocal assignmentDecl declare3Local
Rule 64    declareRecursivoLocal -> empty
Rule 65    declareLocal -> empty
Rule 66    declare2Local -> empty
Rule 67    declare3Local -> empty
Rule 68    altaVarLocal -> <empty>
Rule 69    assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON
Rule 70    assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON
Rule 71    meteVar -> <empty>
Rule 72    assignment -> empty
Rule 73    conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
Rule 74    gotoFCuad -> <empty>
Rule 75    gotoCuad -> <empty>
Rule 76    conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto
Rule 77    llenaGoto -> <empty>
Rule 78    conditionalElse -> empty
Rule 79    conditional2 -> exp conditional2
Rule 80    conditional2 -> empty
Rule 81    cycles -> while
Rule 82    cycles -> empty
Rule 83    cycles -> do-while
Rule 84    do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
Rule 85    gotoVCuad -> <empty>
Rule 86    meteSalto -> <empty>
Rule 87    while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
Rule 88    llenaCuadF -> <empty>
Rule 89    while2 -> exp while2
Rule 90    while2 -> empty
Rule 91    exp -> ID meteExp exp2
Rule 92    exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
Rule 93    metePar -> <empty>
Rule 94    sacaPar -> <empty>
Rule 95    meteExp -> <empty>
Rule 96    generaCuad -> <empty>
Rule 97    exp -> number exp2
Rule 98    meteNum -> <empty>
Rule 99    exp -> empty
Rule 100   exp2 -> LESS meteOper exp
Rule 101   exp2 -> GRTR meteOper exp
Rule 102   exp2 -> EQ meteOper exp
Rule 103   exp2 -> NOTEQ meteOper exp
Rule 104   exp2 -> AND meteOper exp
Rule 105   exp2 -> OR meteOper exp
Rule 106   exp2 -> SUM meteOper exp
Rule 107   meteOper -> <empty>
Rule 108   exp2 -> MINUS meteOper exp
Rule 109   exp2 -> MULTP meteOper exp
Rule 110   exp2 -> DIVIDE meteOper exp
Rule 111   exp2 -> empty
Rule 112   output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
Rule 113   output2 -> ID output2
Rule 114   output2 -> QUOTE ID QUOTE output2
Rule 115   output2 -> empty
Rule 116   input -> READ LEFTPAR ID RIGHTPAR SEMICOLON
Rule 117   empty -> <empty>
Rule 118   circulo -> LEFTPAR INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON
Rule 119   cuadro -> LEFTPAR INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON
Rule 120   triangulo -> LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON
Rule 121   linea -> LEFTPAR INTEGER COMMA STRING COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON
Rule 122   rectangulo -> LEFTPAR INTEGER COMMA INTEGER COMMA STRING COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER RIGHTPAR SEMICOLON

Terminals, with rules where they appear

ACTDECR              : 
ACTDECRVALOR         : 
ACTINCR              : 
ACTINCRVALOR         : 
AND                  : 104
ASSGN                : 57 69 70
BOOL                 : 33 118 119 120 122
COLON                : 
COMMA                : 10 20 52 63 118 118 118 118 119 119 119 119 120 120 120 120 120 120 120 121 121 121 121 121 122 122 122 122 122 122
CYCLE                : 
DECLARE              : 6 55
DIVIDE               : 110
DO                   : 84
DOT                  : 
ELSE                 : 76
END                  : 1
EQ                   : 102
FLOAT                : 31 59
FLOATNUMB            : 
FOR                  : 
FUNCTION             : 12
GRTR                 : 101
GRTREQ               : 
ID                   : 1 8 10 12 15 19 20 46 56 63 69 70 91 113 114 116
IF                   : 73
INT                  : 30
INTEGER              : 58 118 118 118 119 119 119 120 120 120 120 120 120 121 121 121 121 121 122 122 122 122 122
LEFTBRACK            : 27
LEFTKEY              : 12 35 73 76 84 87
LEFTPAR              : 12 35 46 73 84 87 92 112 116 118 119 120 121 122
LESS                 : 100
LESSEQ               : 
MAIN                 : 35
MINUS                : 108
MULTP                : 109
NOTEQ                : 103
NUMBER               : 14
OR                   : 105
PROGRAM              : 1
QUOTE                : 114 114
READ                 : 116
RETURN               : 14 15
RIGHTBRACK           : 27
RIGHTKEY             : 12 35 73 76 84 87
RIGHTPAR             : 12 35 46 73 84 87 92 112 116 118 119 120 121 122
SEMICOLON            : 1 1 8 14 15 56 69 70 112 116 118 119 120 121 122
SPACE                : 
STRING               : 32 118 119 120 121 122
SUM                  : 106
TYPE                 : 
VOID                 : 34
WHILE                : 84 87
WRITE                : 112
error                : 
newline              : 

Nonterminals, with rules where they appear

altaModulo           : 12
altaModuloMain       : 35
altaPrograma         : 1
altaVarGlobal        : 8 10
altaVarLocal         : 19 20 56 63
array                : 9 27 62
assignment           : 43
assignmentDecl       : 8 56 63
circulo              : 
conditional          : 38
conditional2         : 73 79
conditionalElse      : 73
cuadERA              : 46
cuadParam            : 46
cuadro               : 
cuerpo               : 1
cycles               : 40
declare              : 4
declare2             : 8
declare2Local        : 56
declare3             : 8 10
declare3Local        : 56 63
declareLocal         : 39
declareRecursivo     : 6 8
declareRecursivoLocal : 55 56
do-while             : 83
empty                : 5 7 17 21 22 23 25 26 28 45 50 53 54 60 61 64 65 66 67 72 78 80 82 90 99 111 115
est                  : 12 35 38 39 40 41 42 43 44 73 76 84 87
exp                  : 27 51 57 69 79 89 92 100 101 102 103 104 105 106 108 109 110
exp2                 : 91 92 97
funct                : 11
funct2               : 12
funct3               : 19 20
functReturn          : 12
generaCuad           : 69 92
generaRet            : 14 15
goToMainQuad         : 1
gosubCuad            : 46
gotoCuad             : 73
gotoFCuad            : 73 87
gotoVCuad            : 84
guardaSalto          : 12
input                : 41
linea                : 
llamadaAFunct        : 44 70
llamadaAFunct2       : 46 52
llamadaAFunct3       : 51
llenaCuadF           : 87
llenaGoto            : 76
llenaMain            : 35
meteExp              : 91
meteNum              : 58 59
meteOper             : 100 101 102 103 104 105 106 108 109 110
metePar              : 92
meteSalto            : 84
meteVar              : 69 70
number               : 97
output               : 42
output2              : 112 113 114
program              : 0
program2             : 1
program3             : 4 11
rectangulo           : 
sacaPar              : 92
triangulo            : 
type                 : 8 12 19 20 56
type2                : 29
while                : 81
while2               : 84 87 89

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON
    (2) goToMainQuad -> .

    PROGRAM         reduce using rule 2 (goToMainQuad -> .)

    program                        shift and go to state 1
    goToMainQuad                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> goToMainQuad . PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON

    PROGRAM         shift and go to state 3


state 3

    (1) program -> goToMainQuad PROGRAM . ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON

    ID              shift and go to state 4


state 4

    (1) program -> goToMainQuad PROGRAM ID . altaPrograma SEMICOLON program2 cuerpo END SEMICOLON
    (3) altaPrograma -> .

    SEMICOLON       reduce using rule 3 (altaPrograma -> .)

    altaPrograma                   shift and go to state 5

state 5

    (1) program -> goToMainQuad PROGRAM ID altaPrograma . SEMICOLON program2 cuerpo END SEMICOLON

    SEMICOLON       shift and go to state 6


state 6

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON . program2 cuerpo END SEMICOLON
    (4) program2 -> . declare program3
    (5) program2 -> . empty
    (6) declare -> . DECLARE declareRecursivo
    (7) declare -> . empty
    (117) empty -> .

    DECLARE         shift and go to state 8
<<<<<<< HEAD
    MAIN            reduce using rule 117 (empty -> .)
    FUNCTION        reduce using rule 117 (empty -> .)
=======
    MAIN            reduce using rule 112 (empty -> .)
    FUNCTION        reduce using rule 112 (empty -> .)
>>>>>>> MiguelNueva

    program2                       shift and go to state 7
    declare                        shift and go to state 9
    empty                          shift and go to state 10

state 7

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 . cuerpo END SEMICOLON
<<<<<<< HEAD
    (35) cuerpo -> . MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY
=======
    (33) cuerpo -> . MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY
>>>>>>> MiguelNueva

    MAIN            shift and go to state 12

    cuerpo                         shift and go to state 11

state 8

    (6) declare -> DECLARE . declareRecursivo
    (8) declareRecursivo -> . type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
<<<<<<< HEAD
    (25) declareRecursivo -> . empty
    (29) type -> . type2
    (117) empty -> .
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    FUNCTION        reduce using rule 117 (empty -> .)
    MAIN            reduce using rule 117 (empty -> .)
=======
    (23) declareRecursivo -> . empty
    (27) type -> . type2
    (112) empty -> .
    (28) type2 -> . INT
    (29) type2 -> . FLOAT
    (30) type2 -> . STRING
    (31) type2 -> . BOOL
    (32) type2 -> . VOID

    FUNCTION        reduce using rule 112 (empty -> .)
    MAIN            reduce using rule 112 (empty -> .)
>>>>>>> MiguelNueva
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivo               shift and go to state 18
    type                           shift and go to state 19
    empty                          shift and go to state 20
    type2                          shift and go to state 21

state 9

    (4) program2 -> declare . program3
    (11) program3 -> . funct program3
    (23) program3 -> . empty
    (12) funct -> . FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY
    (117) empty -> .

    FUNCTION        shift and go to state 22
<<<<<<< HEAD
    MAIN            reduce using rule 117 (empty -> .)
=======
    MAIN            reduce using rule 112 (empty -> .)
>>>>>>> MiguelNueva

    funct                          shift and go to state 23
    program3                       shift and go to state 24
    empty                          shift and go to state 25

state 10

    (5) program2 -> empty .
    (7) declare -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 5 (program2 -> empty .)
    MAIN            reduce using rule 5 (program2 -> empty .)
    FUNCTION        reduce using rule 7 (declare -> empty .)

  ! MAIN            [ reduce using rule 7 (declare -> empty .) ]


state 11
<<<<<<< HEAD
=======

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo . END SEMICOLON

    END             shift and go to state 26


state 12

    (33) cuerpo -> MAIN . LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY

    LEFTPAR         shift and go to state 27


state 13
>>>>>>> MiguelNueva

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo . END SEMICOLON

    END             shift and go to state 26


state 14

    (35) cuerpo -> MAIN . LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY

    LEFTPAR         shift and go to state 27


state 15

    (32) type2 -> STRING .

    ID              reduce using rule 32 (type2 -> STRING .)


state 16

    (30) type2 -> INT .

    ID              reduce using rule 30 (type2 -> INT .)


state 17

    (34) type2 -> VOID .

    ID              reduce using rule 34 (type2 -> VOID .)


state 18

    (31) type2 -> FLOAT .

    ID              reduce using rule 31 (type2 -> FLOAT .)


state 19

    (33) type2 -> BOOL .

<<<<<<< HEAD
    ID              reduce using rule 33 (type2 -> BOOL .)
=======
    ID              shift and go to state 28
>>>>>>> MiguelNueva


state 20

    (6) declare -> DECLARE declareRecursivo .

    FUNCTION        reduce using rule 6 (declare -> DECLARE declareRecursivo .)
    MAIN            reduce using rule 6 (declare -> DECLARE declareRecursivo .)


state 21

    (8) declareRecursivo -> type . ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo

    ID              shift and go to state 28


state 22

    (25) declareRecursivo -> empty .

<<<<<<< HEAD
    FUNCTION        reduce using rule 25 (declareRecursivo -> empty .)
    MAIN            reduce using rule 25 (declareRecursivo -> empty .)

=======
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    type                           shift and go to state 29
    type2                          shift and go to state 21
>>>>>>> MiguelNueva

state 23

    (29) type -> type2 .

<<<<<<< HEAD
    ID              reduce using rule 29 (type -> type2 .)

=======
    FUNCTION        shift and go to state 22
    MAIN            reduce using rule 112 (empty -> .)

    program3                       shift and go to state 30
    funct                          shift and go to state 23
    empty                          shift and go to state 25
>>>>>>> MiguelNueva

state 24

    (12) funct -> FUNCTION . type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY
    (29) type -> . type2
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    type                           shift and go to state 29
    type2                          shift and go to state 21

state 25

    (11) program3 -> funct . program3
    (11) program3 -> . funct program3
    (23) program3 -> . empty
    (12) funct -> . FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY
    (117) empty -> .

    FUNCTION        shift and go to state 22
    MAIN            reduce using rule 117 (empty -> .)

    program3                       shift and go to state 30
    funct                          shift and go to state 23
    empty                          shift and go to state 25

state 26

<<<<<<< HEAD
    (4) program2 -> declare program3 .

    MAIN            reduce using rule 4 (program2 -> declare program3 .)
=======
    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END . SEMICOLON

    SEMICOLON       shift and go to state 31
>>>>>>> MiguelNueva


state 27

<<<<<<< HEAD
    (23) program3 -> empty .

    MAIN            reduce using rule 23 (program3 -> empty .)
=======
    (33) cuerpo -> MAIN LEFTPAR . RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY

    RIGHTPAR        shift and go to state 32
>>>>>>> MiguelNueva


state 28

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END . SEMICOLON

    SEMICOLON       shift and go to state 31

<<<<<<< HEAD
=======
    altaVarGlobal                  shift and go to state 33
>>>>>>> MiguelNueva

state 29

    (35) cuerpo -> MAIN LEFTPAR . RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY

<<<<<<< HEAD
    RIGHTPAR        shift and go to state 32
=======
    ID              shift and go to state 34
>>>>>>> MiguelNueva


state 30

    (8) declareRecursivo -> type ID . altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (24) altaVarGlobal -> .

    ASSGN           reduce using rule 24 (altaVarGlobal -> .)
    LEFTBRACK       reduce using rule 24 (altaVarGlobal -> .)
    COMMA           reduce using rule 24 (altaVarGlobal -> .)
    SEMICOLON       reduce using rule 24 (altaVarGlobal -> .)

    altaVarGlobal                  shift and go to state 33

state 31

<<<<<<< HEAD
    (12) funct -> FUNCTION type . ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY

    ID              shift and go to state 34
=======
    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON .

    $end            reduce using rule 1 (program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON .)
>>>>>>> MiguelNueva


state 32

<<<<<<< HEAD
    (11) program3 -> funct program3 .

    MAIN            reduce using rule 11 (program3 -> funct program3 .)
=======
    (33) cuerpo -> MAIN LEFTPAR RIGHTPAR . LEFTKEY llenaMain altaModuloMain est RIGHTKEY

    LEFTKEY         shift and go to state 35
>>>>>>> MiguelNueva


state 33

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON .

<<<<<<< HEAD
    $end            reduce using rule 1 (program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON .)

=======
    ASSGN           shift and go to state 36
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    assignmentDecl                 shift and go to state 37
    empty                          shift and go to state 38
>>>>>>> MiguelNueva

state 34

    (35) cuerpo -> MAIN LEFTPAR RIGHTPAR . LEFTKEY llenaMain altaModuloMain est RIGHTKEY

    LEFTKEY         shift and go to state 35

<<<<<<< HEAD

state 33

    (8) declareRecursivo -> type ID altaVarGlobal . assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (57) assignmentDecl -> . ASSGN exp
    (61) assignmentDecl -> . empty
    (117) empty -> .

    ASSGN           shift and go to state 36
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

    assignmentDecl                 shift and go to state 37
    empty                          shift and go to state 38

state 34

    (12) funct -> FUNCTION type ID . altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY
    (18) altaModulo -> .

    LEFTPAR         reduce using rule 18 (altaModulo -> .)

    altaModulo                     shift and go to state 39
=======
    altaModulo                     shift and go to state 39

state 35

    (33) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY . llenaMain altaModuloMain est RIGHTKEY
    (34) llenaMain -> .

    IF              reduce using rule 34 (llenaMain -> .)
    DECLARE         reduce using rule 34 (llenaMain -> .)
    READ            reduce using rule 34 (llenaMain -> .)
    WRITE           reduce using rule 34 (llenaMain -> .)
    ID              reduce using rule 34 (llenaMain -> .)
    WHILE           reduce using rule 34 (llenaMain -> .)
    DO              reduce using rule 34 (llenaMain -> .)
    RIGHTKEY        reduce using rule 34 (llenaMain -> .)

    llenaMain                      shift and go to state 40
>>>>>>> MiguelNueva

state 36

<<<<<<< HEAD
    (35) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY . llenaMain altaModuloMain est RIGHTKEY
    (36) llenaMain -> .

    IF              reduce using rule 36 (llenaMain -> .)
    DECLARE         reduce using rule 36 (llenaMain -> .)
    READ            reduce using rule 36 (llenaMain -> .)
    WRITE           reduce using rule 36 (llenaMain -> .)
    ID              reduce using rule 36 (llenaMain -> .)
    WHILE           reduce using rule 36 (llenaMain -> .)
    DO              reduce using rule 36 (llenaMain -> .)
    RIGHTKEY        reduce using rule 36 (llenaMain -> .)
=======
    (52) assignmentDecl -> ASSGN . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

    number                         shift and go to state 41
    exp                            shift and go to state 44
    empty                          shift and go to state 47

state 37
>>>>>>> MiguelNueva

    llenaMain                      shift and go to state 40

<<<<<<< HEAD
state 36

    (57) assignmentDecl -> ASSGN . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

    number                         shift and go to state 41
    exp                            shift and go to state 44
    empty                          shift and go to state 47
=======
    LEFTBRACK       shift and go to state 48
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    declare2                       shift and go to state 49
    array                          shift and go to state 50
    empty                          shift and go to state 51
>>>>>>> MiguelNueva

state 38

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl . declare2 declare3 SEMICOLON declareRecursivo
    (9) declare2 -> . array
    (27) array -> . LEFTBRACK exp RIGHTBRACK array
    (28) array -> . empty
    (117) empty -> .

    LEFTBRACK       shift and go to state 48
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

    declare2                       shift and go to state 49
    array                          shift and go to state 50
    empty                          shift and go to state 51

state 39

    (61) assignmentDecl -> empty .

<<<<<<< HEAD
    LEFTBRACK       reduce using rule 61 (assignmentDecl -> empty .)
    COMMA           reduce using rule 61 (assignmentDecl -> empty .)
    SEMICOLON       reduce using rule 61 (assignmentDecl -> empty .)
=======
    LEFTPAR         shift and go to state 52
>>>>>>> MiguelNueva


state 40

<<<<<<< HEAD
    (12) funct -> FUNCTION type ID altaModulo . LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY

    LEFTPAR         shift and go to state 52

=======
    (33) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain . altaModuloMain est RIGHTKEY
    (35) altaModuloMain -> .

    IF              reduce using rule 35 (altaModuloMain -> .)
    DECLARE         reduce using rule 35 (altaModuloMain -> .)
    READ            reduce using rule 35 (altaModuloMain -> .)
    WRITE           reduce using rule 35 (altaModuloMain -> .)
    ID              reduce using rule 35 (altaModuloMain -> .)
    WHILE           reduce using rule 35 (altaModuloMain -> .)
    DO              reduce using rule 35 (altaModuloMain -> .)
    RIGHTKEY        reduce using rule 35 (altaModuloMain -> .)

    altaModuloMain                 shift and go to state 53
>>>>>>> MiguelNueva

state 41

    (35) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain . altaModuloMain est RIGHTKEY
    (37) altaModuloMain -> .

    IF              reduce using rule 37 (altaModuloMain -> .)
    DECLARE         reduce using rule 37 (altaModuloMain -> .)
    READ            reduce using rule 37 (altaModuloMain -> .)
    WRITE           reduce using rule 37 (altaModuloMain -> .)
    ID              reduce using rule 37 (altaModuloMain -> .)
    WHILE           reduce using rule 37 (altaModuloMain -> .)
    DO              reduce using rule 37 (altaModuloMain -> .)
    RIGHTKEY        reduce using rule 37 (altaModuloMain -> .)

    altaModuloMain                 shift and go to state 53

state 41

    (97) exp -> number . exp2
    (100) exp2 -> . LESS meteOper exp
    (101) exp2 -> . GRTR meteOper exp
    (102) exp2 -> . EQ meteOper exp
    (103) exp2 -> . NOTEQ meteOper exp
    (104) exp2 -> . AND meteOper exp
    (105) exp2 -> . OR meteOper exp
    (106) exp2 -> . SUM meteOper exp
    (108) exp2 -> . MINUS meteOper exp
    (109) exp2 -> . MULTP meteOper exp
    (110) exp2 -> . DIVIDE meteOper exp
    (111) exp2 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GRTR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LESS            shift and go to state 56
    GRTR            shift and go to state 61
    EQ              shift and go to state 63
    NOTEQ           shift and go to state 57
    AND             shift and go to state 54
    OR              shift and go to state 64
    SUM             shift and go to state 59
    MINUS           shift and go to state 60
    MULTP           shift and go to state 62
    DIVIDE          shift and go to state 55
<<<<<<< HEAD
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    LEFTPAR         reduce using rule 117 (empty -> .)
    INTEGER         reduce using rule 117 (empty -> .)
    FLOAT           reduce using rule 117 (empty -> .)

  ! LESS            [ reduce using rule 117 (empty -> .) ]
  ! GRTR            [ reduce using rule 117 (empty -> .) ]
  ! EQ              [ reduce using rule 117 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 117 (empty -> .) ]
  ! AND             [ reduce using rule 117 (empty -> .) ]
  ! OR              [ reduce using rule 117 (empty -> .) ]
  ! SUM             [ reduce using rule 117 (empty -> .) ]
  ! MINUS           [ reduce using rule 117 (empty -> .) ]
  ! MULTP           [ reduce using rule 117 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 117 (empty -> .) ]

    exp2                           shift and go to state 58
    empty                          shift and go to state 65
=======
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    LEFTPAR         reduce using rule 112 (empty -> .)
    INTEGER         reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)

  ! LESS            [ reduce using rule 112 (empty -> .) ]
  ! GRTR            [ reduce using rule 112 (empty -> .) ]
  ! EQ              [ reduce using rule 112 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 112 (empty -> .) ]
  ! AND             [ reduce using rule 112 (empty -> .) ]
  ! OR              [ reduce using rule 112 (empty -> .) ]
  ! SUM             [ reduce using rule 112 (empty -> .) ]
  ! MINUS           [ reduce using rule 112 (empty -> .) ]
  ! MULTP           [ reduce using rule 112 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 112 (empty -> .) ]

    exp2                           shift and go to state 58
    empty                          shift and go to state 65

state 42

    (54) number -> FLOAT . meteNum
    (93) meteNum -> .

    LESS            reduce using rule 93 (meteNum -> .)
    GRTR            reduce using rule 93 (meteNum -> .)
    EQ              reduce using rule 93 (meteNum -> .)
    NOTEQ           reduce using rule 93 (meteNum -> .)
    AND             reduce using rule 93 (meteNum -> .)
    OR              reduce using rule 93 (meteNum -> .)
    SUM             reduce using rule 93 (meteNum -> .)
    MINUS           reduce using rule 93 (meteNum -> .)
    MULTP           reduce using rule 93 (meteNum -> .)
    DIVIDE          reduce using rule 93 (meteNum -> .)
    LEFTBRACK       reduce using rule 93 (meteNum -> .)
    COMMA           reduce using rule 93 (meteNum -> .)
    SEMICOLON       reduce using rule 93 (meteNum -> .)
    RIGHTBRACK      reduce using rule 93 (meteNum -> .)
    RIGHTPAR        reduce using rule 93 (meteNum -> .)
    ID              reduce using rule 93 (meteNum -> .)
    LEFTPAR         reduce using rule 93 (meteNum -> .)
    INTEGER         reduce using rule 93 (meteNum -> .)
    FLOAT           reduce using rule 93 (meteNum -> .)

    meteNum                        shift and go to state 66
>>>>>>> MiguelNueva

state 43

<<<<<<< HEAD
    (59) number -> FLOAT . meteNum
    (98) meteNum -> .

    LESS            reduce using rule 98 (meteNum -> .)
    GRTR            reduce using rule 98 (meteNum -> .)
    EQ              reduce using rule 98 (meteNum -> .)
    NOTEQ           reduce using rule 98 (meteNum -> .)
    AND             reduce using rule 98 (meteNum -> .)
    OR              reduce using rule 98 (meteNum -> .)
    SUM             reduce using rule 98 (meteNum -> .)
    MINUS           reduce using rule 98 (meteNum -> .)
    MULTP           reduce using rule 98 (meteNum -> .)
    DIVIDE          reduce using rule 98 (meteNum -> .)
    LEFTBRACK       reduce using rule 98 (meteNum -> .)
    COMMA           reduce using rule 98 (meteNum -> .)
    SEMICOLON       reduce using rule 98 (meteNum -> .)
    RIGHTBRACK      reduce using rule 98 (meteNum -> .)
    RIGHTPAR        reduce using rule 98 (meteNum -> .)
    ID              reduce using rule 98 (meteNum -> .)
    LEFTPAR         reduce using rule 98 (meteNum -> .)
    INTEGER         reduce using rule 98 (meteNum -> .)
    FLOAT           reduce using rule 98 (meteNum -> .)

    meteNum                        shift and go to state 66
=======
    (87) exp -> LEFTPAR . metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (88) metePar -> .

    ID              reduce using rule 88 (metePar -> .)
    LEFTPAR         reduce using rule 88 (metePar -> .)
    INTEGER         reduce using rule 88 (metePar -> .)
    FLOAT           reduce using rule 88 (metePar -> .)
    RIGHTPAR        reduce using rule 88 (metePar -> .)
    LESS            reduce using rule 88 (metePar -> .)
    GRTR            reduce using rule 88 (metePar -> .)
    EQ              reduce using rule 88 (metePar -> .)
    NOTEQ           reduce using rule 88 (metePar -> .)
    AND             reduce using rule 88 (metePar -> .)
    OR              reduce using rule 88 (metePar -> .)
    SUM             reduce using rule 88 (metePar -> .)
    MINUS           reduce using rule 88 (metePar -> .)
    MULTP           reduce using rule 88 (metePar -> .)
    DIVIDE          reduce using rule 88 (metePar -> .)

    metePar                        shift and go to state 67
>>>>>>> MiguelNueva

state 44

    (92) exp -> LEFTPAR . metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (93) metePar -> .

    ID              reduce using rule 93 (metePar -> .)
    LEFTPAR         reduce using rule 93 (metePar -> .)
    INTEGER         reduce using rule 93 (metePar -> .)
    FLOAT           reduce using rule 93 (metePar -> .)
    RIGHTPAR        reduce using rule 93 (metePar -> .)
    LESS            reduce using rule 93 (metePar -> .)
    GRTR            reduce using rule 93 (metePar -> .)
    EQ              reduce using rule 93 (metePar -> .)
    NOTEQ           reduce using rule 93 (metePar -> .)
    AND             reduce using rule 93 (metePar -> .)
    OR              reduce using rule 93 (metePar -> .)
    SUM             reduce using rule 93 (metePar -> .)
    MINUS           reduce using rule 93 (metePar -> .)
    MULTP           reduce using rule 93 (metePar -> .)
    DIVIDE          reduce using rule 93 (metePar -> .)

    metePar                        shift and go to state 67

state 44

    (57) assignmentDecl -> ASSGN exp .

<<<<<<< HEAD
    LEFTBRACK       reduce using rule 57 (assignmentDecl -> ASSGN exp .)
    COMMA           reduce using rule 57 (assignmentDecl -> ASSGN exp .)
    SEMICOLON       reduce using rule 57 (assignmentDecl -> ASSGN exp .)

=======
state 45

    (53) number -> INTEGER . meteNum
    (93) meteNum -> .

    LESS            reduce using rule 93 (meteNum -> .)
    GRTR            reduce using rule 93 (meteNum -> .)
    EQ              reduce using rule 93 (meteNum -> .)
    NOTEQ           reduce using rule 93 (meteNum -> .)
    AND             reduce using rule 93 (meteNum -> .)
    OR              reduce using rule 93 (meteNum -> .)
    SUM             reduce using rule 93 (meteNum -> .)
    MINUS           reduce using rule 93 (meteNum -> .)
    MULTP           reduce using rule 93 (meteNum -> .)
    DIVIDE          reduce using rule 93 (meteNum -> .)
    LEFTBRACK       reduce using rule 93 (meteNum -> .)
    COMMA           reduce using rule 93 (meteNum -> .)
    SEMICOLON       reduce using rule 93 (meteNum -> .)
    RIGHTBRACK      reduce using rule 93 (meteNum -> .)
    RIGHTPAR        reduce using rule 93 (meteNum -> .)
    ID              reduce using rule 93 (meteNum -> .)
    LEFTPAR         reduce using rule 93 (meteNum -> .)
    INTEGER         reduce using rule 93 (meteNum -> .)
    FLOAT           reduce using rule 93 (meteNum -> .)

    meteNum                        shift and go to state 68
>>>>>>> MiguelNueva

state 46

<<<<<<< HEAD
    (58) number -> INTEGER . meteNum
    (98) meteNum -> .

    LESS            reduce using rule 98 (meteNum -> .)
    GRTR            reduce using rule 98 (meteNum -> .)
    EQ              reduce using rule 98 (meteNum -> .)
    NOTEQ           reduce using rule 98 (meteNum -> .)
    AND             reduce using rule 98 (meteNum -> .)
    OR              reduce using rule 98 (meteNum -> .)
    SUM             reduce using rule 98 (meteNum -> .)
    MINUS           reduce using rule 98 (meteNum -> .)
    MULTP           reduce using rule 98 (meteNum -> .)
    DIVIDE          reduce using rule 98 (meteNum -> .)
    LEFTBRACK       reduce using rule 98 (meteNum -> .)
    COMMA           reduce using rule 98 (meteNum -> .)
    SEMICOLON       reduce using rule 98 (meteNum -> .)
    RIGHTBRACK      reduce using rule 98 (meteNum -> .)
    RIGHTPAR        reduce using rule 98 (meteNum -> .)
    ID              reduce using rule 98 (meteNum -> .)
    LEFTPAR         reduce using rule 98 (meteNum -> .)
    INTEGER         reduce using rule 98 (meteNum -> .)
    FLOAT           reduce using rule 98 (meteNum -> .)

    meteNum                        shift and go to state 68
=======
    (86) exp -> ID . meteExp exp2
    (90) meteExp -> .

    LESS            reduce using rule 90 (meteExp -> .)
    GRTR            reduce using rule 90 (meteExp -> .)
    EQ              reduce using rule 90 (meteExp -> .)
    NOTEQ           reduce using rule 90 (meteExp -> .)
    AND             reduce using rule 90 (meteExp -> .)
    OR              reduce using rule 90 (meteExp -> .)
    SUM             reduce using rule 90 (meteExp -> .)
    MINUS           reduce using rule 90 (meteExp -> .)
    MULTP           reduce using rule 90 (meteExp -> .)
    DIVIDE          reduce using rule 90 (meteExp -> .)
    LEFTBRACK       reduce using rule 90 (meteExp -> .)
    COMMA           reduce using rule 90 (meteExp -> .)
    SEMICOLON       reduce using rule 90 (meteExp -> .)
    RIGHTBRACK      reduce using rule 90 (meteExp -> .)
    RIGHTPAR        reduce using rule 90 (meteExp -> .)
    ID              reduce using rule 90 (meteExp -> .)
    LEFTPAR         reduce using rule 90 (meteExp -> .)
    INTEGER         reduce using rule 90 (meteExp -> .)
    FLOAT           reduce using rule 90 (meteExp -> .)

    meteExp                        shift and go to state 69
>>>>>>> MiguelNueva

state 47

    (91) exp -> ID . meteExp exp2
    (95) meteExp -> .

    LESS            reduce using rule 95 (meteExp -> .)
    GRTR            reduce using rule 95 (meteExp -> .)
    EQ              reduce using rule 95 (meteExp -> .)
    NOTEQ           reduce using rule 95 (meteExp -> .)
    AND             reduce using rule 95 (meteExp -> .)
    OR              reduce using rule 95 (meteExp -> .)
    SUM             reduce using rule 95 (meteExp -> .)
    MINUS           reduce using rule 95 (meteExp -> .)
    MULTP           reduce using rule 95 (meteExp -> .)
    DIVIDE          reduce using rule 95 (meteExp -> .)
    LEFTBRACK       reduce using rule 95 (meteExp -> .)
    COMMA           reduce using rule 95 (meteExp -> .)
    SEMICOLON       reduce using rule 95 (meteExp -> .)
    RIGHTBRACK      reduce using rule 95 (meteExp -> .)
    RIGHTPAR        reduce using rule 95 (meteExp -> .)
    ID              reduce using rule 95 (meteExp -> .)
    LEFTPAR         reduce using rule 95 (meteExp -> .)
    INTEGER         reduce using rule 95 (meteExp -> .)
    FLOAT           reduce using rule 95 (meteExp -> .)

    meteExp                        shift and go to state 69

state 48

<<<<<<< HEAD
    (99) exp -> empty .
    (60) number -> empty .

  ! reduce/reduce conflict for LESS resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for LEFTBRACK resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for RIGHTBRACK resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 60 (number -> empty .)
    LESS            reduce using rule 60 (number -> empty .)
    GRTR            reduce using rule 60 (number -> empty .)
    EQ              reduce using rule 60 (number -> empty .)
    NOTEQ           reduce using rule 60 (number -> empty .)
    AND             reduce using rule 60 (number -> empty .)
    OR              reduce using rule 60 (number -> empty .)
    SUM             reduce using rule 60 (number -> empty .)
    MINUS           reduce using rule 60 (number -> empty .)
    MULTP           reduce using rule 60 (number -> empty .)
    DIVIDE          reduce using rule 60 (number -> empty .)
    LEFTBRACK       reduce using rule 60 (number -> empty .)
    COMMA           reduce using rule 60 (number -> empty .)
    SEMICOLON       reduce using rule 60 (number -> empty .)
    RIGHTBRACK      reduce using rule 60 (number -> empty .)
    RIGHTPAR        reduce using rule 60 (number -> empty .)
    ID              reduce using rule 60 (number -> empty .)
    LEFTPAR         reduce using rule 60 (number -> empty .)
    INTEGER         reduce using rule 60 (number -> empty .)
    FLOAT           reduce using rule 60 (number -> empty .)

  ! LEFTBRACK       [ reduce using rule 99 (exp -> empty .) ]
  ! COMMA           [ reduce using rule 99 (exp -> empty .) ]
  ! SEMICOLON       [ reduce using rule 99 (exp -> empty .) ]
  ! RIGHTBRACK      [ reduce using rule 99 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 99 (exp -> empty .) ]
  ! ID              [ reduce using rule 99 (exp -> empty .) ]
  ! LEFTPAR         [ reduce using rule 99 (exp -> empty .) ]
  ! INTEGER         [ reduce using rule 99 (exp -> empty .) ]
  ! FLOAT           [ reduce using rule 99 (exp -> empty .) ]
  ! LESS            [ reduce using rule 99 (exp -> empty .) ]
  ! GRTR            [ reduce using rule 99 (exp -> empty .) ]
  ! EQ              [ reduce using rule 99 (exp -> empty .) ]
  ! NOTEQ           [ reduce using rule 99 (exp -> empty .) ]
  ! AND             [ reduce using rule 99 (exp -> empty .) ]
  ! OR              [ reduce using rule 99 (exp -> empty .) ]
  ! SUM             [ reduce using rule 99 (exp -> empty .) ]
  ! MINUS           [ reduce using rule 99 (exp -> empty .) ]
  ! MULTP           [ reduce using rule 99 (exp -> empty .) ]
  ! DIVIDE          [ reduce using rule 99 (exp -> empty .) ]

=======
    (25) array -> LEFTBRACK . exp RIGHTBRACK array
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

    number                         shift and go to state 41
    exp                            shift and go to state 70
    empty                          shift and go to state 47
>>>>>>> MiguelNueva

state 49

    (27) array -> LEFTBRACK . exp RIGHTBRACK array
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

    number                         shift and go to state 41
    exp                            shift and go to state 70
    empty                          shift and go to state 47

state 49

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 . declare3 SEMICOLON declareRecursivo
    (10) declare3 -> . COMMA ID altaVarGlobal declare3
    (26) declare3 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 72
<<<<<<< HEAD
    SEMICOLON       reduce using rule 117 (empty -> .)
=======
    SEMICOLON       reduce using rule 112 (empty -> .)
>>>>>>> MiguelNueva

    declare3                       shift and go to state 71
    empty                          shift and go to state 73

state 50

    (9) declare2 -> array .

    COMMA           reduce using rule 9 (declare2 -> array .)
    SEMICOLON       reduce using rule 9 (declare2 -> array .)


state 51
<<<<<<< HEAD

    (28) array -> empty .

    COMMA           reduce using rule 28 (array -> empty .)
    SEMICOLON       reduce using rule 28 (array -> empty .)


state 52

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR . funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY
    (19) funct2 -> . type ID altaVarLocal funct3
    (21) funct2 -> . empty
    (29) type -> . type2
    (117) empty -> .
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    RIGHTPAR        reduce using rule 117 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    funct2                         shift and go to state 74
    type                           shift and go to state 75
    empty                          shift and go to state 76
    type2                          shift and go to state 21
=======

    (26) array -> empty .

    COMMA           reduce using rule 26 (array -> empty .)
    SEMICOLON       reduce using rule 26 (array -> empty .)


state 52

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR . funct2 RIGHTPAR LEFTKEY est functReturn RIGHTKEY
    (17) funct2 -> . type ID altaVarLocal funct3
    (19) funct2 -> . empty
    (27) type -> . type2
    (112) empty -> .
    (28) type2 -> . INT
    (29) type2 -> . FLOAT
    (30) type2 -> . STRING
    (31) type2 -> . BOOL
    (32) type2 -> . VOID

    RIGHTPAR        reduce using rule 112 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    funct2                         shift and go to state 74
    type                           shift and go to state 75
    empty                          shift and go to state 76
    type2                          shift and go to state 21

state 53

    (33) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain . est RIGHTKEY
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 82
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
>>>>>>> MiguelNueva

state 54

<<<<<<< HEAD
    (35) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain . est RIGHTKEY
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 82
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
=======
    (99) exp2 -> AND . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 95
>>>>>>> MiguelNueva

state 55

<<<<<<< HEAD
    (104) exp2 -> AND . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 95
=======
    (105) exp2 -> DIVIDE . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 96
>>>>>>> MiguelNueva

state 56

<<<<<<< HEAD
    (110) exp2 -> DIVIDE . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 96
=======
    (95) exp2 -> LESS . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 97
>>>>>>> MiguelNueva

state 57

<<<<<<< HEAD
    (100) exp2 -> LESS . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 97
=======
    (98) exp2 -> NOTEQ . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 98
>>>>>>> MiguelNueva

state 58

    (103) exp2 -> NOTEQ . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 98

state 59

<<<<<<< HEAD
    (97) exp -> number exp2 .

    LEFTBRACK       reduce using rule 97 (exp -> number exp2 .)
    COMMA           reduce using rule 97 (exp -> number exp2 .)
    SEMICOLON       reduce using rule 97 (exp -> number exp2 .)
    RIGHTBRACK      reduce using rule 97 (exp -> number exp2 .)
    RIGHTPAR        reduce using rule 97 (exp -> number exp2 .)
    ID              reduce using rule 97 (exp -> number exp2 .)
    LEFTPAR         reduce using rule 97 (exp -> number exp2 .)
    INTEGER         reduce using rule 97 (exp -> number exp2 .)
    FLOAT           reduce using rule 97 (exp -> number exp2 .)
    LESS            reduce using rule 97 (exp -> number exp2 .)
    GRTR            reduce using rule 97 (exp -> number exp2 .)
    EQ              reduce using rule 97 (exp -> number exp2 .)
    NOTEQ           reduce using rule 97 (exp -> number exp2 .)
    AND             reduce using rule 97 (exp -> number exp2 .)
    OR              reduce using rule 97 (exp -> number exp2 .)
    SUM             reduce using rule 97 (exp -> number exp2 .)
    MINUS           reduce using rule 97 (exp -> number exp2 .)
    MULTP           reduce using rule 97 (exp -> number exp2 .)
    DIVIDE          reduce using rule 97 (exp -> number exp2 .)

=======
    (101) exp2 -> SUM . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 99
>>>>>>> MiguelNueva

state 60

<<<<<<< HEAD
    (106) exp2 -> SUM . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 99
=======
    (103) exp2 -> MINUS . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 100
>>>>>>> MiguelNueva

state 61

<<<<<<< HEAD
    (108) exp2 -> MINUS . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 100
=======
    (96) exp2 -> GRTR . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 101
>>>>>>> MiguelNueva

state 62

<<<<<<< HEAD
    (101) exp2 -> GRTR . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 101
=======
    (104) exp2 -> MULTP . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 102
>>>>>>> MiguelNueva

state 63

<<<<<<< HEAD
    (109) exp2 -> MULTP . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 102
=======
    (97) exp2 -> EQ . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 103
>>>>>>> MiguelNueva

state 64

<<<<<<< HEAD
    (102) exp2 -> EQ . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 103
=======
    (100) exp2 -> OR . meteOper exp
    (102) meteOper -> .

    ID              reduce using rule 102 (meteOper -> .)
    LEFTPAR         reduce using rule 102 (meteOper -> .)
    INTEGER         reduce using rule 102 (meteOper -> .)
    FLOAT           reduce using rule 102 (meteOper -> .)
    LESS            reduce using rule 102 (meteOper -> .)
    GRTR            reduce using rule 102 (meteOper -> .)
    EQ              reduce using rule 102 (meteOper -> .)
    NOTEQ           reduce using rule 102 (meteOper -> .)
    AND             reduce using rule 102 (meteOper -> .)
    OR              reduce using rule 102 (meteOper -> .)
    SUM             reduce using rule 102 (meteOper -> .)
    MINUS           reduce using rule 102 (meteOper -> .)
    MULTP           reduce using rule 102 (meteOper -> .)
    DIVIDE          reduce using rule 102 (meteOper -> .)
    LEFTBRACK       reduce using rule 102 (meteOper -> .)
    COMMA           reduce using rule 102 (meteOper -> .)
    SEMICOLON       reduce using rule 102 (meteOper -> .)
    RIGHTBRACK      reduce using rule 102 (meteOper -> .)
    RIGHTPAR        reduce using rule 102 (meteOper -> .)

    meteOper                       shift and go to state 104
>>>>>>> MiguelNueva

state 65

    (105) exp2 -> OR . meteOper exp
    (107) meteOper -> .

    ID              reduce using rule 107 (meteOper -> .)
    LEFTPAR         reduce using rule 107 (meteOper -> .)
    INTEGER         reduce using rule 107 (meteOper -> .)
    FLOAT           reduce using rule 107 (meteOper -> .)
    LESS            reduce using rule 107 (meteOper -> .)
    GRTR            reduce using rule 107 (meteOper -> .)
    EQ              reduce using rule 107 (meteOper -> .)
    NOTEQ           reduce using rule 107 (meteOper -> .)
    AND             reduce using rule 107 (meteOper -> .)
    OR              reduce using rule 107 (meteOper -> .)
    SUM             reduce using rule 107 (meteOper -> .)
    MINUS           reduce using rule 107 (meteOper -> .)
    MULTP           reduce using rule 107 (meteOper -> .)
    DIVIDE          reduce using rule 107 (meteOper -> .)
    LEFTBRACK       reduce using rule 107 (meteOper -> .)
    COMMA           reduce using rule 107 (meteOper -> .)
    SEMICOLON       reduce using rule 107 (meteOper -> .)
    RIGHTBRACK      reduce using rule 107 (meteOper -> .)
    RIGHTPAR        reduce using rule 107 (meteOper -> .)

    meteOper                       shift and go to state 104

state 66

<<<<<<< HEAD
    (111) exp2 -> empty .

    LEFTBRACK       reduce using rule 111 (exp2 -> empty .)
    COMMA           reduce using rule 111 (exp2 -> empty .)
    SEMICOLON       reduce using rule 111 (exp2 -> empty .)
    RIGHTBRACK      reduce using rule 111 (exp2 -> empty .)
    RIGHTPAR        reduce using rule 111 (exp2 -> empty .)
    ID              reduce using rule 111 (exp2 -> empty .)
    LEFTPAR         reduce using rule 111 (exp2 -> empty .)
    INTEGER         reduce using rule 111 (exp2 -> empty .)
    FLOAT           reduce using rule 111 (exp2 -> empty .)
    LESS            reduce using rule 111 (exp2 -> empty .)
    GRTR            reduce using rule 111 (exp2 -> empty .)
    EQ              reduce using rule 111 (exp2 -> empty .)
    NOTEQ           reduce using rule 111 (exp2 -> empty .)
    AND             reduce using rule 111 (exp2 -> empty .)
    OR              reduce using rule 111 (exp2 -> empty .)
    SUM             reduce using rule 111 (exp2 -> empty .)
    MINUS           reduce using rule 111 (exp2 -> empty .)
    MULTP           reduce using rule 111 (exp2 -> empty .)
    DIVIDE          reduce using rule 111 (exp2 -> empty .)
=======
    (54) number -> FLOAT meteNum .

    LESS            reduce using rule 54 (number -> FLOAT meteNum .)
    GRTR            reduce using rule 54 (number -> FLOAT meteNum .)
    EQ              reduce using rule 54 (number -> FLOAT meteNum .)
    NOTEQ           reduce using rule 54 (number -> FLOAT meteNum .)
    AND             reduce using rule 54 (number -> FLOAT meteNum .)
    OR              reduce using rule 54 (number -> FLOAT meteNum .)
    SUM             reduce using rule 54 (number -> FLOAT meteNum .)
    MINUS           reduce using rule 54 (number -> FLOAT meteNum .)
    MULTP           reduce using rule 54 (number -> FLOAT meteNum .)
    DIVIDE          reduce using rule 54 (number -> FLOAT meteNum .)
    LEFTBRACK       reduce using rule 54 (number -> FLOAT meteNum .)
    COMMA           reduce using rule 54 (number -> FLOAT meteNum .)
    SEMICOLON       reduce using rule 54 (number -> FLOAT meteNum .)
    RIGHTBRACK      reduce using rule 54 (number -> FLOAT meteNum .)
    RIGHTPAR        reduce using rule 54 (number -> FLOAT meteNum .)
    ID              reduce using rule 54 (number -> FLOAT meteNum .)
    LEFTPAR         reduce using rule 54 (number -> FLOAT meteNum .)
    INTEGER         reduce using rule 54 (number -> FLOAT meteNum .)
    FLOAT           reduce using rule 54 (number -> FLOAT meteNum .)
>>>>>>> MiguelNueva


state 67

<<<<<<< HEAD
    (59) number -> FLOAT meteNum .

    LESS            reduce using rule 59 (number -> FLOAT meteNum .)
    GRTR            reduce using rule 59 (number -> FLOAT meteNum .)
    EQ              reduce using rule 59 (number -> FLOAT meteNum .)
    NOTEQ           reduce using rule 59 (number -> FLOAT meteNum .)
    AND             reduce using rule 59 (number -> FLOAT meteNum .)
    OR              reduce using rule 59 (number -> FLOAT meteNum .)
    SUM             reduce using rule 59 (number -> FLOAT meteNum .)
    MINUS           reduce using rule 59 (number -> FLOAT meteNum .)
    MULTP           reduce using rule 59 (number -> FLOAT meteNum .)
    DIVIDE          reduce using rule 59 (number -> FLOAT meteNum .)
    LEFTBRACK       reduce using rule 59 (number -> FLOAT meteNum .)
    COMMA           reduce using rule 59 (number -> FLOAT meteNum .)
    SEMICOLON       reduce using rule 59 (number -> FLOAT meteNum .)
    RIGHTBRACK      reduce using rule 59 (number -> FLOAT meteNum .)
    RIGHTPAR        reduce using rule 59 (number -> FLOAT meteNum .)
    ID              reduce using rule 59 (number -> FLOAT meteNum .)
    LEFTPAR         reduce using rule 59 (number -> FLOAT meteNum .)
    INTEGER         reduce using rule 59 (number -> FLOAT meteNum .)
    FLOAT           reduce using rule 59 (number -> FLOAT meteNum .)


state 67
=======
    (87) exp -> LEFTPAR metePar . exp RIGHTPAR sacaPar exp2 generaCuad
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

    number                         shift and go to state 41
    exp                            shift and go to state 105
    empty                          shift and go to state 47

state 68

    (53) number -> INTEGER meteNum .

    LESS            reduce using rule 53 (number -> INTEGER meteNum .)
    GRTR            reduce using rule 53 (number -> INTEGER meteNum .)
    EQ              reduce using rule 53 (number -> INTEGER meteNum .)
    NOTEQ           reduce using rule 53 (number -> INTEGER meteNum .)
    AND             reduce using rule 53 (number -> INTEGER meteNum .)
    OR              reduce using rule 53 (number -> INTEGER meteNum .)
    SUM             reduce using rule 53 (number -> INTEGER meteNum .)
    MINUS           reduce using rule 53 (number -> INTEGER meteNum .)
    MULTP           reduce using rule 53 (number -> INTEGER meteNum .)
    DIVIDE          reduce using rule 53 (number -> INTEGER meteNum .)
    LEFTBRACK       reduce using rule 53 (number -> INTEGER meteNum .)
    COMMA           reduce using rule 53 (number -> INTEGER meteNum .)
    SEMICOLON       reduce using rule 53 (number -> INTEGER meteNum .)
    RIGHTBRACK      reduce using rule 53 (number -> INTEGER meteNum .)
    RIGHTPAR        reduce using rule 53 (number -> INTEGER meteNum .)
    ID              reduce using rule 53 (number -> INTEGER meteNum .)
    LEFTPAR         reduce using rule 53 (number -> INTEGER meteNum .)
    INTEGER         reduce using rule 53 (number -> INTEGER meteNum .)
    FLOAT           reduce using rule 53 (number -> INTEGER meteNum .)
>>>>>>> MiguelNueva

    (92) exp -> LEFTPAR metePar . exp RIGHTPAR sacaPar exp2 generaCuad
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

    number                         shift and go to state 41
    exp                            shift and go to state 105
    empty                          shift and go to state 47

state 69

    (58) number -> INTEGER meteNum .

    LESS            reduce using rule 58 (number -> INTEGER meteNum .)
    GRTR            reduce using rule 58 (number -> INTEGER meteNum .)
    EQ              reduce using rule 58 (number -> INTEGER meteNum .)
    NOTEQ           reduce using rule 58 (number -> INTEGER meteNum .)
    AND             reduce using rule 58 (number -> INTEGER meteNum .)
    OR              reduce using rule 58 (number -> INTEGER meteNum .)
    SUM             reduce using rule 58 (number -> INTEGER meteNum .)
    MINUS           reduce using rule 58 (number -> INTEGER meteNum .)
    MULTP           reduce using rule 58 (number -> INTEGER meteNum .)
    DIVIDE          reduce using rule 58 (number -> INTEGER meteNum .)
    LEFTBRACK       reduce using rule 58 (number -> INTEGER meteNum .)
    COMMA           reduce using rule 58 (number -> INTEGER meteNum .)
    SEMICOLON       reduce using rule 58 (number -> INTEGER meteNum .)
    RIGHTBRACK      reduce using rule 58 (number -> INTEGER meteNum .)
    RIGHTPAR        reduce using rule 58 (number -> INTEGER meteNum .)
    ID              reduce using rule 58 (number -> INTEGER meteNum .)
    LEFTPAR         reduce using rule 58 (number -> INTEGER meteNum .)
    INTEGER         reduce using rule 58 (number -> INTEGER meteNum .)
    FLOAT           reduce using rule 58 (number -> INTEGER meteNum .)


state 69

    (91) exp -> ID meteExp . exp2
    (100) exp2 -> . LESS meteOper exp
    (101) exp2 -> . GRTR meteOper exp
    (102) exp2 -> . EQ meteOper exp
    (103) exp2 -> . NOTEQ meteOper exp
    (104) exp2 -> . AND meteOper exp
    (105) exp2 -> . OR meteOper exp
    (106) exp2 -> . SUM meteOper exp
    (108) exp2 -> . MINUS meteOper exp
    (109) exp2 -> . MULTP meteOper exp
    (110) exp2 -> . DIVIDE meteOper exp
    (111) exp2 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GRTR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LESS            shift and go to state 56
    GRTR            shift and go to state 61
    EQ              shift and go to state 63
    NOTEQ           shift and go to state 57
    AND             shift and go to state 54
    OR              shift and go to state 64
    SUM             shift and go to state 59
    MINUS           shift and go to state 60
    MULTP           shift and go to state 62
    DIVIDE          shift and go to state 55
<<<<<<< HEAD
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    LEFTPAR         reduce using rule 117 (empty -> .)
    INTEGER         reduce using rule 117 (empty -> .)
    FLOAT           reduce using rule 117 (empty -> .)

  ! LESS            [ reduce using rule 117 (empty -> .) ]
  ! GRTR            [ reduce using rule 117 (empty -> .) ]
  ! EQ              [ reduce using rule 117 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 117 (empty -> .) ]
  ! AND             [ reduce using rule 117 (empty -> .) ]
  ! OR              [ reduce using rule 117 (empty -> .) ]
  ! SUM             [ reduce using rule 117 (empty -> .) ]
  ! MINUS           [ reduce using rule 117 (empty -> .) ]
  ! MULTP           [ reduce using rule 117 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 117 (empty -> .) ]

    exp2                           shift and go to state 106
    empty                          shift and go to state 65
=======
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    LEFTPAR         reduce using rule 112 (empty -> .)
    INTEGER         reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)

  ! LESS            [ reduce using rule 112 (empty -> .) ]
  ! GRTR            [ reduce using rule 112 (empty -> .) ]
  ! EQ              [ reduce using rule 112 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 112 (empty -> .) ]
  ! AND             [ reduce using rule 112 (empty -> .) ]
  ! OR              [ reduce using rule 112 (empty -> .) ]
  ! SUM             [ reduce using rule 112 (empty -> .) ]
  ! MINUS           [ reduce using rule 112 (empty -> .) ]
  ! MULTP           [ reduce using rule 112 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 112 (empty -> .) ]

    exp2                           shift and go to state 106
    empty                          shift and go to state 65

state 70

    (25) array -> LEFTBRACK exp . RIGHTBRACK array

    RIGHTBRACK      shift and go to state 107

>>>>>>> MiguelNueva

state 71

    (27) array -> LEFTBRACK exp . RIGHTBRACK array

<<<<<<< HEAD
    RIGHTBRACK      shift and go to state 107
=======
    SEMICOLON       shift and go to state 108
>>>>>>> MiguelNueva


state 72

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 . SEMICOLON declareRecursivo

<<<<<<< HEAD
    SEMICOLON       shift and go to state 108
=======
    ID              shift and go to state 109
>>>>>>> MiguelNueva


state 73

    (10) declare3 -> COMMA . ID altaVarGlobal declare3

    ID              shift and go to state 109


state 74

    (26) declare3 -> empty .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 26 (declare3 -> empty .)
=======
    RIGHTPAR        shift and go to state 110
>>>>>>> MiguelNueva


state 75

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 . RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY

<<<<<<< HEAD
    RIGHTPAR        shift and go to state 110
=======
    ID              shift and go to state 111
>>>>>>> MiguelNueva


state 76

    (19) funct2 -> type . ID altaVarLocal funct3

    ID              shift and go to state 111


state 77

<<<<<<< HEAD
    (21) funct2 -> empty .

    RIGHTPAR        reduce using rule 21 (funct2 -> empty .)

=======
    (79) do-while -> DO . meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
    (81) meteSalto -> .

    LEFTKEY         reduce using rule 81 (meteSalto -> .)

    meteSalto                      shift and go to state 112

state 78

    (111) input -> READ . LEFTPAR ID RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 113


state 79

    (36) est -> conditional . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 114
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
>>>>>>> MiguelNueva

state 80

<<<<<<< HEAD
    (84) do-while -> DO . meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
    (86) meteSalto -> .

    LEFTKEY         reduce using rule 86 (meteSalto -> .)

    meteSalto                      shift and go to state 112
=======
    (82) while -> WHILE . LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF

    LEFTPAR         shift and go to state 115


state 81
>>>>>>> MiguelNueva

    (78) cycles -> do-while .

<<<<<<< HEAD
    (116) input -> READ . LEFTPAR ID RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 113

=======
    IF              reduce using rule 78 (cycles -> do-while .)
    DECLARE         reduce using rule 78 (cycles -> do-while .)
    READ            reduce using rule 78 (cycles -> do-while .)
    WRITE           reduce using rule 78 (cycles -> do-while .)
    ID              reduce using rule 78 (cycles -> do-while .)
    WHILE           reduce using rule 78 (cycles -> do-while .)
    DO              reduce using rule 78 (cycles -> do-while .)
    RIGHTKEY        reduce using rule 78 (cycles -> do-while .)
    RETURN          reduce using rule 78 (cycles -> do-while .)


state 82

    (33) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est . RIGHTKEY

    RIGHTKEY        shift and go to state 116
>>>>>>> MiguelNueva


<<<<<<< HEAD
    (38) est -> conditional . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
=======
state 83

    (42) est -> llamadaAFunct . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
>>>>>>> MiguelNueva

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
<<<<<<< HEAD
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 114
=======
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 117
>>>>>>> MiguelNueva
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94

state 84

<<<<<<< HEAD
    (87) while -> WHILE . LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF

    LEFTPAR         shift and go to state 115

=======
    (39) est -> input . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 118
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
>>>>>>> MiguelNueva

state 85

<<<<<<< HEAD
    (83) cycles -> do-while .

    IF              reduce using rule 83 (cycles -> do-while .)
    DECLARE         reduce using rule 83 (cycles -> do-while .)
    READ            reduce using rule 83 (cycles -> do-while .)
    WRITE           reduce using rule 83 (cycles -> do-while .)
    ID              reduce using rule 83 (cycles -> do-while .)
    WHILE           reduce using rule 83 (cycles -> do-while .)
    DO              reduce using rule 83 (cycles -> do-while .)
    RIGHTKEY        reduce using rule 83 (cycles -> do-while .)
    RETURN          reduce using rule 83 (cycles -> do-while .)

=======
    (41) est -> assignment . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 119
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
>>>>>>> MiguelNueva

state 86

<<<<<<< HEAD
    (35) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est . RIGHTKEY

    RIGHTKEY        shift and go to state 116

=======
    (107) output -> WRITE . LEFTPAR output2 RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 120


state 87
>>>>>>> MiguelNueva

    (64) assignment -> ID . ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> ID . ASSGN meteVar llamadaAFunct SEMICOLON
    (44) llamadaAFunct -> ID . LEFTPAR llamadaAFunct2 RIGHTPAR

<<<<<<< HEAD
    (44) est -> llamadaAFunct . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 117
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
=======
    ASSGN           shift and go to state 121
    LEFTPAR         shift and go to state 122


state 88

    (50) declareLocal -> DECLARE . declareRecursivoLocal
    (51) declareRecursivoLocal -> . type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (59) declareRecursivoLocal -> . empty
    (27) type -> . type2
    (112) empty -> .
    (28) type2 -> . INT
    (29) type2 -> . FLOAT
    (30) type2 -> . STRING
    (31) type2 -> . BOOL
    (32) type2 -> . VOID

    IF              reduce using rule 112 (empty -> .)
    DECLARE         reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    DO              reduce using rule 112 (empty -> .)
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivoLocal          shift and go to state 123
    type2                          shift and go to state 21
    type                           shift and go to state 124
    empty                          shift and go to state 125

state 89
>>>>>>> MiguelNueva

    (68) conditional -> IF . LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse

<<<<<<< HEAD
    (41) est -> input . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
=======
    LEFTPAR         shift and go to state 126


state 90

    (38) est -> cycles . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
>>>>>>> MiguelNueva

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
<<<<<<< HEAD
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 118
=======
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 127
>>>>>>> MiguelNueva
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94

state 91

<<<<<<< HEAD
    (43) est -> assignment . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

=======
    (76) cycles -> while .

    IF              reduce using rule 76 (cycles -> while .)
    DECLARE         reduce using rule 76 (cycles -> while .)
    READ            reduce using rule 76 (cycles -> while .)
    WRITE           reduce using rule 76 (cycles -> while .)
    ID              reduce using rule 76 (cycles -> while .)
    WHILE           reduce using rule 76 (cycles -> while .)
    DO              reduce using rule 76 (cycles -> while .)
    RIGHTKEY        reduce using rule 76 (cycles -> while .)
    RETURN          reduce using rule 76 (cycles -> while .)


state 92

    (43) est -> empty .
    (60) declareLocal -> empty .
    (77) cycles -> empty .
    (67) assignment -> empty .
    (45) llamadaAFunct -> empty .

  ! reduce/reduce conflict for RIGHTKEY resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 60 (declareLocal -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 45 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 43 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 43 (est -> empty .)
    RIGHTKEY        reduce using rule 43 (est -> empty .)
    RETURN          reduce using rule 43 (est -> empty .)
    IF              reduce using rule 45 (llamadaAFunct -> empty .)
    DECLARE         reduce using rule 45 (llamadaAFunct -> empty .)
    READ            reduce using rule 45 (llamadaAFunct -> empty .)
    WRITE           reduce using rule 45 (llamadaAFunct -> empty .)
    ID              reduce using rule 45 (llamadaAFunct -> empty .)
    WHILE           reduce using rule 45 (llamadaAFunct -> empty .)
    DO              reduce using rule 45 (llamadaAFunct -> empty .)

  ! IF              [ reduce using rule 60 (declareLocal -> empty .) ]
  ! DECLARE         [ reduce using rule 60 (declareLocal -> empty .) ]
  ! READ            [ reduce using rule 60 (declareLocal -> empty .) ]
  ! WRITE           [ reduce using rule 60 (declareLocal -> empty .) ]
  ! ID              [ reduce using rule 60 (declareLocal -> empty .) ]
  ! WHILE           [ reduce using rule 60 (declareLocal -> empty .) ]
  ! DO              [ reduce using rule 60 (declareLocal -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 60 (declareLocal -> empty .) ]
  ! RETURN          [ reduce using rule 60 (declareLocal -> empty .) ]
  ! IF              [ reduce using rule 77 (cycles -> empty .) ]
  ! DECLARE         [ reduce using rule 77 (cycles -> empty .) ]
  ! READ            [ reduce using rule 77 (cycles -> empty .) ]
  ! WRITE           [ reduce using rule 77 (cycles -> empty .) ]
  ! ID              [ reduce using rule 77 (cycles -> empty .) ]
  ! WHILE           [ reduce using rule 77 (cycles -> empty .) ]
  ! DO              [ reduce using rule 77 (cycles -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 77 (cycles -> empty .) ]
  ! RETURN          [ reduce using rule 77 (cycles -> empty .) ]
  ! IF              [ reduce using rule 67 (assignment -> empty .) ]
  ! DECLARE         [ reduce using rule 67 (assignment -> empty .) ]
  ! READ            [ reduce using rule 67 (assignment -> empty .) ]
  ! WRITE           [ reduce using rule 67 (assignment -> empty .) ]
  ! ID              [ reduce using rule 67 (assignment -> empty .) ]
  ! WHILE           [ reduce using rule 67 (assignment -> empty .) ]
  ! DO              [ reduce using rule 67 (assignment -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 67 (assignment -> empty .) ]
  ! RETURN          [ reduce using rule 67 (assignment -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 45 (llamadaAFunct -> empty .) ]
  ! RETURN          [ reduce using rule 45 (llamadaAFunct -> empty .) ]


state 93

    (40) est -> output . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

>>>>>>> MiguelNueva
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
<<<<<<< HEAD
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 119
=======
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 128
>>>>>>> MiguelNueva
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
<<<<<<< HEAD
=======

state 94

    (37) est -> declareLocal . est
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 129
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    declareLocal                   shift and go to state 94
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    cycles                         shift and go to state 90

state 95

    (99) exp2 -> AND meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 130
    empty                          shift and go to state 47
>>>>>>> MiguelNueva

state 96

<<<<<<< HEAD
    (112) output -> WRITE . LEFTPAR output2 RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 120

=======
    (105) exp2 -> DIVIDE meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 131
    empty                          shift and go to state 47
>>>>>>> MiguelNueva

state 97

<<<<<<< HEAD
    (69) assignment -> ID . ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> ID . ASSGN meteVar llamadaAFunct SEMICOLON
    (46) llamadaAFunct -> ID . cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (47) cuadERA -> .

    ASSGN           shift and go to state 121
    LEFTPAR         reduce using rule 47 (cuadERA -> .)

    cuadERA                        shift and go to state 122
=======
    (95) exp2 -> LESS meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
>>>>>>> MiguelNueva

    number                         shift and go to state 41
    exp                            shift and go to state 132
    empty                          shift and go to state 47

<<<<<<< HEAD
    (55) declareLocal -> DECLARE . declareRecursivoLocal
    (56) declareRecursivoLocal -> . type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (64) declareRecursivoLocal -> . empty
    (29) type -> . type2
    (117) empty -> .
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    IF              reduce using rule 117 (empty -> .)
    DECLARE         reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WRITE           reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    DO              reduce using rule 117 (empty -> .)
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivoLocal          shift and go to state 123
    type2                          shift and go to state 21
    type                           shift and go to state 124
    empty                          shift and go to state 125

state 89

    (73) conditional -> IF . LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse

    LEFTPAR         shift and go to state 126

=======
state 98

    (98) exp2 -> NOTEQ meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 133
    empty                          shift and go to state 47
>>>>>>> MiguelNueva

state 99

<<<<<<< HEAD
    (40) est -> cycles . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 127
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
=======
    (101) exp2 -> SUM meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
>>>>>>> MiguelNueva

    number                         shift and go to state 41
    exp                            shift and go to state 134
    empty                          shift and go to state 47

<<<<<<< HEAD
    (81) cycles -> while .

    IF              reduce using rule 81 (cycles -> while .)
    DECLARE         reduce using rule 81 (cycles -> while .)
    READ            reduce using rule 81 (cycles -> while .)
    WRITE           reduce using rule 81 (cycles -> while .)
    ID              reduce using rule 81 (cycles -> while .)
    WHILE           reduce using rule 81 (cycles -> while .)
    DO              reduce using rule 81 (cycles -> while .)
    RIGHTKEY        reduce using rule 81 (cycles -> while .)
    RETURN          reduce using rule 81 (cycles -> while .)

=======
state 100

    (103) exp2 -> MINUS meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)
>>>>>>> MiguelNueva

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

<<<<<<< HEAD
    (45) est -> empty .
    (65) declareLocal -> empty .
    (82) cycles -> empty .
    (72) assignment -> empty .
    (50) llamadaAFunct -> empty .

  ! reduce/reduce conflict for RIGHTKEY resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 65 (declareLocal -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 45 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (est -> empty .)
    RIGHTKEY        reduce using rule 45 (est -> empty .)
    RETURN          reduce using rule 45 (est -> empty .)
    IF              reduce using rule 50 (llamadaAFunct -> empty .)
    DECLARE         reduce using rule 50 (llamadaAFunct -> empty .)
    READ            reduce using rule 50 (llamadaAFunct -> empty .)
    WRITE           reduce using rule 50 (llamadaAFunct -> empty .)
    ID              reduce using rule 50 (llamadaAFunct -> empty .)
    WHILE           reduce using rule 50 (llamadaAFunct -> empty .)
    DO              reduce using rule 50 (llamadaAFunct -> empty .)

  ! IF              [ reduce using rule 65 (declareLocal -> empty .) ]
  ! DECLARE         [ reduce using rule 65 (declareLocal -> empty .) ]
  ! READ            [ reduce using rule 65 (declareLocal -> empty .) ]
  ! WRITE           [ reduce using rule 65 (declareLocal -> empty .) ]
  ! ID              [ reduce using rule 65 (declareLocal -> empty .) ]
  ! WHILE           [ reduce using rule 65 (declareLocal -> empty .) ]
  ! DO              [ reduce using rule 65 (declareLocal -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 65 (declareLocal -> empty .) ]
  ! RETURN          [ reduce using rule 65 (declareLocal -> empty .) ]
  ! IF              [ reduce using rule 82 (cycles -> empty .) ]
  ! DECLARE         [ reduce using rule 82 (cycles -> empty .) ]
  ! READ            [ reduce using rule 82 (cycles -> empty .) ]
  ! WRITE           [ reduce using rule 82 (cycles -> empty .) ]
  ! ID              [ reduce using rule 82 (cycles -> empty .) ]
  ! WHILE           [ reduce using rule 82 (cycles -> empty .) ]
  ! DO              [ reduce using rule 82 (cycles -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 82 (cycles -> empty .) ]
  ! RETURN          [ reduce using rule 82 (cycles -> empty .) ]
  ! IF              [ reduce using rule 72 (assignment -> empty .) ]
  ! DECLARE         [ reduce using rule 72 (assignment -> empty .) ]
  ! READ            [ reduce using rule 72 (assignment -> empty .) ]
  ! WRITE           [ reduce using rule 72 (assignment -> empty .) ]
  ! ID              [ reduce using rule 72 (assignment -> empty .) ]
  ! WHILE           [ reduce using rule 72 (assignment -> empty .) ]
  ! DO              [ reduce using rule 72 (assignment -> empty .) ]
  ! RETURN          [ reduce using rule 72 (assignment -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 72 (assignment -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 50 (llamadaAFunct -> empty .) ]
  ! RETURN          [ reduce using rule 50 (llamadaAFunct -> empty .) ]
=======
    number                         shift and go to state 41
    exp                            shift and go to state 135
    empty                          shift and go to state 47

state 101
>>>>>>> MiguelNueva

    (96) exp2 -> GRTR meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

<<<<<<< HEAD
    (42) est -> output . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 128
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
=======
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 136
    empty                          shift and go to state 47

state 102
>>>>>>> MiguelNueva

    (104) exp2 -> MULTP meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

<<<<<<< HEAD
    (39) est -> declareLocal . est
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 129
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    declareLocal                   shift and go to state 94
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    cycles                         shift and go to state 90
=======
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 137
    empty                          shift and go to state 47
>>>>>>> MiguelNueva

state 103

<<<<<<< HEAD
    (104) exp2 -> AND meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 130
    empty                          shift and go to state 47
=======
    (97) exp2 -> EQ meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]
>>>>>>> MiguelNueva

    number                         shift and go to state 41
    exp                            shift and go to state 138
    empty                          shift and go to state 47

<<<<<<< HEAD
    (110) exp2 -> DIVIDE meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 131
    empty                          shift and go to state 47

state 97

    (100) exp2 -> LESS meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 132
    empty                          shift and go to state 47

state 98

    (103) exp2 -> NOTEQ meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 133
    empty                          shift and go to state 47

state 99

    (106) exp2 -> SUM meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 134
    empty                          shift and go to state 47

state 100

    (108) exp2 -> MINUS meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 135
    empty                          shift and go to state 47

state 101

    (101) exp2 -> GRTR meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 136
    empty                          shift and go to state 47

state 102

    (109) exp2 -> MULTP meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .
=======
state 104

    (100) exp2 -> OR meteOper . exp
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .
>>>>>>> MiguelNueva

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
<<<<<<< HEAD
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 137
=======
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 139
>>>>>>> MiguelNueva
    empty                          shift and go to state 47

state 105

<<<<<<< HEAD
    (102) exp2 -> EQ meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .
=======
    (87) exp -> LEFTPAR metePar exp . RIGHTPAR sacaPar exp2 generaCuad

    RIGHTPAR        shift and go to state 140
>>>>>>> MiguelNueva

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 138
    empty                          shift and go to state 47

state 106

<<<<<<< HEAD
    (105) exp2 -> OR meteOper . exp
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .
=======
    (86) exp -> ID meteExp exp2 .

    LEFTBRACK       reduce using rule 86 (exp -> ID meteExp exp2 .)
    COMMA           reduce using rule 86 (exp -> ID meteExp exp2 .)
    SEMICOLON       reduce using rule 86 (exp -> ID meteExp exp2 .)
    RIGHTBRACK      reduce using rule 86 (exp -> ID meteExp exp2 .)
    RIGHTPAR        reduce using rule 86 (exp -> ID meteExp exp2 .)
    ID              reduce using rule 86 (exp -> ID meteExp exp2 .)
    LEFTPAR         reduce using rule 86 (exp -> ID meteExp exp2 .)
    INTEGER         reduce using rule 86 (exp -> ID meteExp exp2 .)
    FLOAT           reduce using rule 86 (exp -> ID meteExp exp2 .)
    LESS            reduce using rule 86 (exp -> ID meteExp exp2 .)
    GRTR            reduce using rule 86 (exp -> ID meteExp exp2 .)
    EQ              reduce using rule 86 (exp -> ID meteExp exp2 .)
    NOTEQ           reduce using rule 86 (exp -> ID meteExp exp2 .)
    AND             reduce using rule 86 (exp -> ID meteExp exp2 .)
    OR              reduce using rule 86 (exp -> ID meteExp exp2 .)
    SUM             reduce using rule 86 (exp -> ID meteExp exp2 .)
    MINUS           reduce using rule 86 (exp -> ID meteExp exp2 .)
    MULTP           reduce using rule 86 (exp -> ID meteExp exp2 .)
    DIVIDE          reduce using rule 86 (exp -> ID meteExp exp2 .)
>>>>>>> MiguelNueva

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    exp                            shift and go to state 139
    empty                          shift and go to state 47

state 107

<<<<<<< HEAD
    (92) exp -> LEFTPAR metePar exp . RIGHTPAR sacaPar exp2 generaCuad

    RIGHTPAR        shift and go to state 140


state 106

    (91) exp -> ID meteExp exp2 .

    LEFTBRACK       reduce using rule 91 (exp -> ID meteExp exp2 .)
    COMMA           reduce using rule 91 (exp -> ID meteExp exp2 .)
    SEMICOLON       reduce using rule 91 (exp -> ID meteExp exp2 .)
    RIGHTBRACK      reduce using rule 91 (exp -> ID meteExp exp2 .)
    RIGHTPAR        reduce using rule 91 (exp -> ID meteExp exp2 .)
    ID              reduce using rule 91 (exp -> ID meteExp exp2 .)
    LEFTPAR         reduce using rule 91 (exp -> ID meteExp exp2 .)
    INTEGER         reduce using rule 91 (exp -> ID meteExp exp2 .)
    FLOAT           reduce using rule 91 (exp -> ID meteExp exp2 .)
    LESS            reduce using rule 91 (exp -> ID meteExp exp2 .)
    GRTR            reduce using rule 91 (exp -> ID meteExp exp2 .)
    EQ              reduce using rule 91 (exp -> ID meteExp exp2 .)
    NOTEQ           reduce using rule 91 (exp -> ID meteExp exp2 .)
    AND             reduce using rule 91 (exp -> ID meteExp exp2 .)
    OR              reduce using rule 91 (exp -> ID meteExp exp2 .)
    SUM             reduce using rule 91 (exp -> ID meteExp exp2 .)
    MINUS           reduce using rule 91 (exp -> ID meteExp exp2 .)
    MULTP           reduce using rule 91 (exp -> ID meteExp exp2 .)
    DIVIDE          reduce using rule 91 (exp -> ID meteExp exp2 .)


state 107

    (27) array -> LEFTBRACK exp RIGHTBRACK . array
    (27) array -> . LEFTBRACK exp RIGHTBRACK array
    (28) array -> . empty
    (117) empty -> .

    LEFTBRACK       shift and go to state 48
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

    array                          shift and go to state 141
    empty                          shift and go to state 51

state 108

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON . declareRecursivo
    (8) declareRecursivo -> . type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (25) declareRecursivo -> . empty
    (29) type -> . type2
    (117) empty -> .
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    FUNCTION        reduce using rule 117 (empty -> .)
    MAIN            reduce using rule 117 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivo               shift and go to state 142
    type                           shift and go to state 19
    empty                          shift and go to state 20
    type2                          shift and go to state 21

state 109

    (10) declare3 -> COMMA ID . altaVarGlobal declare3
    (24) altaVarGlobal -> .

    COMMA           reduce using rule 24 (altaVarGlobal -> .)
    SEMICOLON       reduce using rule 24 (altaVarGlobal -> .)

    altaVarGlobal                  shift and go to state 143

state 110

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR . LEFTKEY guardaSalto est functReturn RIGHTKEY

    LEFTKEY         shift and go to state 144


state 111

    (19) funct2 -> type ID . altaVarLocal funct3
    (68) altaVarLocal -> .

    COMMA           reduce using rule 68 (altaVarLocal -> .)
    RIGHTPAR        reduce using rule 68 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 145

state 112

    (84) do-while -> DO meteSalto . LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

    LEFTKEY         shift and go to state 146


state 113

    (116) input -> READ LEFTPAR . ID RIGHTPAR SEMICOLON

    ID              shift and go to state 147


state 114

    (38) est -> conditional est .

    RIGHTKEY        reduce using rule 38 (est -> conditional est .)
    RETURN          reduce using rule 38 (est -> conditional est .)


state 115

    (87) while -> WHILE LEFTPAR . while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (89) while2 -> . exp while2
    (90) while2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    while2                         shift and go to state 148
    exp                            shift and go to state 149
    empty                          shift and go to state 150

state 116

    (35) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY .

    END             reduce using rule 35 (cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est RIGHTKEY .)


state 117

    (44) est -> llamadaAFunct est .

    RIGHTKEY        reduce using rule 44 (est -> llamadaAFunct est .)
    RETURN          reduce using rule 44 (est -> llamadaAFunct est .)


state 118

    (41) est -> input est .

    RIGHTKEY        reduce using rule 41 (est -> input est .)
    RETURN          reduce using rule 41 (est -> input est .)


state 119

    (43) est -> assignment est .

    RIGHTKEY        reduce using rule 43 (est -> assignment est .)
    RETURN          reduce using rule 43 (est -> assignment est .)


state 120

    (112) output -> WRITE LEFTPAR . output2 RIGHTPAR SEMICOLON
    (113) output2 -> . ID output2
    (114) output2 -> . QUOTE ID QUOTE output2
    (115) output2 -> . empty
    (117) empty -> .

    ID              shift and go to state 153
    QUOTE           shift and go to state 152
    RIGHTPAR        reduce using rule 117 (empty -> .)

    output2                        shift and go to state 151
    empty                          shift and go to state 154

state 121

    (69) assignment -> ID ASSGN . meteVar exp generaCuad SEMICOLON
    (70) assignment -> ID ASSGN . meteVar llamadaAFunct SEMICOLON
    (71) meteVar -> .

    ID              reduce using rule 71 (meteVar -> .)
    LEFTPAR         reduce using rule 71 (meteVar -> .)
    INTEGER         reduce using rule 71 (meteVar -> .)
    FLOAT           reduce using rule 71 (meteVar -> .)
    SEMICOLON       reduce using rule 71 (meteVar -> .)
    LESS            reduce using rule 71 (meteVar -> .)
    GRTR            reduce using rule 71 (meteVar -> .)
    EQ              reduce using rule 71 (meteVar -> .)
    NOTEQ           reduce using rule 71 (meteVar -> .)
    AND             reduce using rule 71 (meteVar -> .)
    OR              reduce using rule 71 (meteVar -> .)
    SUM             reduce using rule 71 (meteVar -> .)
    MINUS           reduce using rule 71 (meteVar -> .)
    MULTP           reduce using rule 71 (meteVar -> .)
    DIVIDE          reduce using rule 71 (meteVar -> .)

    meteVar                        shift and go to state 155

state 122

    (46) llamadaAFunct -> ID cuadERA . LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR

    LEFTPAR         shift and go to state 156


state 123

    (55) declareLocal -> DECLARE declareRecursivoLocal .

    IF              reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    DECLARE         reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    READ            reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    WRITE           reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    ID              reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    WHILE           reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    DO              reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    RIGHTKEY        reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
    RETURN          reduce using rule 55 (declareLocal -> DECLARE declareRecursivoLocal .)
=======
    (25) array -> LEFTBRACK exp RIGHTBRACK . array
    (25) array -> . LEFTBRACK exp RIGHTBRACK array
    (26) array -> . empty
    (112) empty -> .
>>>>>>> MiguelNueva

    LEFTBRACK       shift and go to state 48
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    array                          shift and go to state 141
    empty                          shift and go to state 51

<<<<<<< HEAD
    (56) declareRecursivoLocal -> type . ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal

    ID              shift and go to state 157
=======
state 108

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON . declareRecursivo
    (8) declareRecursivo -> . type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (23) declareRecursivo -> . empty
    (27) type -> . type2
    (112) empty -> .
    (28) type2 -> . INT
    (29) type2 -> . FLOAT
    (30) type2 -> . STRING
    (31) type2 -> . BOOL
    (32) type2 -> . VOID
>>>>>>> MiguelNueva

    FUNCTION        reduce using rule 112 (empty -> .)
    MAIN            reduce using rule 112 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivo               shift and go to state 142
    type                           shift and go to state 19
    empty                          shift and go to state 20
    type2                          shift and go to state 21

<<<<<<< HEAD
    (64) declareRecursivoLocal -> empty .

    IF              reduce using rule 64 (declareRecursivoLocal -> empty .)
    DECLARE         reduce using rule 64 (declareRecursivoLocal -> empty .)
    READ            reduce using rule 64 (declareRecursivoLocal -> empty .)
    WRITE           reduce using rule 64 (declareRecursivoLocal -> empty .)
    ID              reduce using rule 64 (declareRecursivoLocal -> empty .)
    WHILE           reduce using rule 64 (declareRecursivoLocal -> empty .)
    DO              reduce using rule 64 (declareRecursivoLocal -> empty .)
    RIGHTKEY        reduce using rule 64 (declareRecursivoLocal -> empty .)
    RETURN          reduce using rule 64 (declareRecursivoLocal -> empty .)

=======
state 109

    (10) declare3 -> COMMA ID . altaVarGlobal declare3
    (22) altaVarGlobal -> .

    COMMA           reduce using rule 22 (altaVarGlobal -> .)
    SEMICOLON       reduce using rule 22 (altaVarGlobal -> .)
>>>>>>> MiguelNueva

    altaVarGlobal                  shift and go to state 143

<<<<<<< HEAD
    (73) conditional -> IF LEFTPAR . conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (79) conditional2 -> . exp conditional2
    (80) conditional2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    exp                            shift and go to state 160
    number                         shift and go to state 41
    empty                          shift and go to state 158
    conditional2                   shift and go to state 159
=======
state 110

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR . LEFTKEY est functReturn RIGHTKEY

    LEFTKEY         shift and go to state 144

>>>>>>> MiguelNueva

state 111

<<<<<<< HEAD
    (40) est -> cycles est .

    RIGHTKEY        reduce using rule 40 (est -> cycles est .)
    RETURN          reduce using rule 40 (est -> cycles est .)

=======
    (17) funct2 -> type ID . altaVarLocal funct3
    (63) altaVarLocal -> .

    COMMA           reduce using rule 63 (altaVarLocal -> .)
    RIGHTPAR        reduce using rule 63 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 145
>>>>>>> MiguelNueva

state 112

    (42) est -> output est .

<<<<<<< HEAD
    RIGHTKEY        reduce using rule 42 (est -> output est .)
    RETURN          reduce using rule 42 (est -> output est .)
=======
    LEFTKEY         shift and go to state 146
>>>>>>> MiguelNueva


state 113

    (39) est -> declareLocal est .

<<<<<<< HEAD
    RIGHTKEY        reduce using rule 39 (est -> declareLocal est .)
    RETURN          reduce using rule 39 (est -> declareLocal est .)
=======
    ID              shift and go to state 147
>>>>>>> MiguelNueva


state 114

<<<<<<< HEAD
    (104) exp2 -> AND meteOper exp .

    LEFTBRACK       reduce using rule 104 (exp2 -> AND meteOper exp .)
    COMMA           reduce using rule 104 (exp2 -> AND meteOper exp .)
    SEMICOLON       reduce using rule 104 (exp2 -> AND meteOper exp .)
    RIGHTBRACK      reduce using rule 104 (exp2 -> AND meteOper exp .)
    RIGHTPAR        reduce using rule 104 (exp2 -> AND meteOper exp .)
    ID              reduce using rule 104 (exp2 -> AND meteOper exp .)
    LEFTPAR         reduce using rule 104 (exp2 -> AND meteOper exp .)
    INTEGER         reduce using rule 104 (exp2 -> AND meteOper exp .)
    FLOAT           reduce using rule 104 (exp2 -> AND meteOper exp .)
    LESS            reduce using rule 104 (exp2 -> AND meteOper exp .)
    GRTR            reduce using rule 104 (exp2 -> AND meteOper exp .)
    EQ              reduce using rule 104 (exp2 -> AND meteOper exp .)
    NOTEQ           reduce using rule 104 (exp2 -> AND meteOper exp .)
    AND             reduce using rule 104 (exp2 -> AND meteOper exp .)
    OR              reduce using rule 104 (exp2 -> AND meteOper exp .)
    SUM             reduce using rule 104 (exp2 -> AND meteOper exp .)
    MINUS           reduce using rule 104 (exp2 -> AND meteOper exp .)
    MULTP           reduce using rule 104 (exp2 -> AND meteOper exp .)
    DIVIDE          reduce using rule 104 (exp2 -> AND meteOper exp .)
=======
    (36) est -> conditional est .

    RIGHTKEY        reduce using rule 36 (est -> conditional est .)
    RETURN          reduce using rule 36 (est -> conditional est .)
>>>>>>> MiguelNueva


state 115

    (110) exp2 -> DIVIDE meteOper exp .

    LEFTBRACK       reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    COMMA           reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    SEMICOLON       reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    RIGHTBRACK      reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    RIGHTPAR        reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    ID              reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    LEFTPAR         reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    INTEGER         reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    FLOAT           reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    LESS            reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    GRTR            reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    EQ              reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    NOTEQ           reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    AND             reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    OR              reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    SUM             reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    MINUS           reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    MULTP           reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)
    DIVIDE          reduce using rule 110 (exp2 -> DIVIDE meteOper exp .)

<<<<<<< HEAD
=======
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    while2                         shift and go to state 148
    exp                            shift and go to state 149
    empty                          shift and go to state 150
>>>>>>> MiguelNueva

state 116

    (100) exp2 -> LESS meteOper exp .

    LEFTBRACK       reduce using rule 100 (exp2 -> LESS meteOper exp .)
    COMMA           reduce using rule 100 (exp2 -> LESS meteOper exp .)
    SEMICOLON       reduce using rule 100 (exp2 -> LESS meteOper exp .)
    RIGHTBRACK      reduce using rule 100 (exp2 -> LESS meteOper exp .)
    RIGHTPAR        reduce using rule 100 (exp2 -> LESS meteOper exp .)
    ID              reduce using rule 100 (exp2 -> LESS meteOper exp .)
    LEFTPAR         reduce using rule 100 (exp2 -> LESS meteOper exp .)
    INTEGER         reduce using rule 100 (exp2 -> LESS meteOper exp .)
    FLOAT           reduce using rule 100 (exp2 -> LESS meteOper exp .)
    LESS            reduce using rule 100 (exp2 -> LESS meteOper exp .)
    GRTR            reduce using rule 100 (exp2 -> LESS meteOper exp .)
    EQ              reduce using rule 100 (exp2 -> LESS meteOper exp .)
    NOTEQ           reduce using rule 100 (exp2 -> LESS meteOper exp .)
    AND             reduce using rule 100 (exp2 -> LESS meteOper exp .)
    OR              reduce using rule 100 (exp2 -> LESS meteOper exp .)
    SUM             reduce using rule 100 (exp2 -> LESS meteOper exp .)
    MINUS           reduce using rule 100 (exp2 -> LESS meteOper exp .)
    MULTP           reduce using rule 100 (exp2 -> LESS meteOper exp .)
    DIVIDE          reduce using rule 100 (exp2 -> LESS meteOper exp .)


state 117

<<<<<<< HEAD
    (103) exp2 -> NOTEQ meteOper exp .

    LEFTBRACK       reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    COMMA           reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    SEMICOLON       reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    RIGHTBRACK      reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    RIGHTPAR        reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    ID              reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    LEFTPAR         reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    INTEGER         reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    FLOAT           reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    LESS            reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    GRTR            reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    EQ              reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    NOTEQ           reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    AND             reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    OR              reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    SUM             reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    MINUS           reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    MULTP           reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
    DIVIDE          reduce using rule 103 (exp2 -> NOTEQ meteOper exp .)
=======
    (42) est -> llamadaAFunct est .

    RIGHTKEY        reduce using rule 42 (est -> llamadaAFunct est .)
    RETURN          reduce using rule 42 (est -> llamadaAFunct est .)
>>>>>>> MiguelNueva


state 118

<<<<<<< HEAD
    (106) exp2 -> SUM meteOper exp .

    LEFTBRACK       reduce using rule 106 (exp2 -> SUM meteOper exp .)
    COMMA           reduce using rule 106 (exp2 -> SUM meteOper exp .)
    SEMICOLON       reduce using rule 106 (exp2 -> SUM meteOper exp .)
    RIGHTBRACK      reduce using rule 106 (exp2 -> SUM meteOper exp .)
    RIGHTPAR        reduce using rule 106 (exp2 -> SUM meteOper exp .)
    ID              reduce using rule 106 (exp2 -> SUM meteOper exp .)
    LEFTPAR         reduce using rule 106 (exp2 -> SUM meteOper exp .)
    INTEGER         reduce using rule 106 (exp2 -> SUM meteOper exp .)
    FLOAT           reduce using rule 106 (exp2 -> SUM meteOper exp .)
    LESS            reduce using rule 106 (exp2 -> SUM meteOper exp .)
    GRTR            reduce using rule 106 (exp2 -> SUM meteOper exp .)
    EQ              reduce using rule 106 (exp2 -> SUM meteOper exp .)
    NOTEQ           reduce using rule 106 (exp2 -> SUM meteOper exp .)
    AND             reduce using rule 106 (exp2 -> SUM meteOper exp .)
    OR              reduce using rule 106 (exp2 -> SUM meteOper exp .)
    SUM             reduce using rule 106 (exp2 -> SUM meteOper exp .)
    MINUS           reduce using rule 106 (exp2 -> SUM meteOper exp .)
    MULTP           reduce using rule 106 (exp2 -> SUM meteOper exp .)
    DIVIDE          reduce using rule 106 (exp2 -> SUM meteOper exp .)
=======
    (39) est -> input est .

    RIGHTKEY        reduce using rule 39 (est -> input est .)
    RETURN          reduce using rule 39 (est -> input est .)
>>>>>>> MiguelNueva


state 119

<<<<<<< HEAD
    (108) exp2 -> MINUS meteOper exp .

    LEFTBRACK       reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    COMMA           reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    SEMICOLON       reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    RIGHTBRACK      reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    RIGHTPAR        reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    ID              reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    LEFTPAR         reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    INTEGER         reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    FLOAT           reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    LESS            reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    GRTR            reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    EQ              reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    NOTEQ           reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    AND             reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    OR              reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    SUM             reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    MINUS           reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    MULTP           reduce using rule 108 (exp2 -> MINUS meteOper exp .)
    DIVIDE          reduce using rule 108 (exp2 -> MINUS meteOper exp .)
=======
    (41) est -> assignment est .

    RIGHTKEY        reduce using rule 41 (est -> assignment est .)
    RETURN          reduce using rule 41 (est -> assignment est .)
>>>>>>> MiguelNueva


state 120

    (101) exp2 -> GRTR meteOper exp .

    LEFTBRACK       reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    COMMA           reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    SEMICOLON       reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    RIGHTBRACK      reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    RIGHTPAR        reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    ID              reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    LEFTPAR         reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    INTEGER         reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    FLOAT           reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    LESS            reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    GRTR            reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    EQ              reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    NOTEQ           reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    AND             reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    OR              reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    SUM             reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    MINUS           reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    MULTP           reduce using rule 101 (exp2 -> GRTR meteOper exp .)
    DIVIDE          reduce using rule 101 (exp2 -> GRTR meteOper exp .)

<<<<<<< HEAD
=======
    ID              shift and go to state 153
    QUOTE           shift and go to state 152
    RIGHTPAR        reduce using rule 112 (empty -> .)

    output2                        shift and go to state 151
    empty                          shift and go to state 154
>>>>>>> MiguelNueva

state 121

<<<<<<< HEAD
    (109) exp2 -> MULTP meteOper exp .

    LEFTBRACK       reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    COMMA           reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    SEMICOLON       reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    RIGHTBRACK      reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    RIGHTPAR        reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    ID              reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    LEFTPAR         reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    INTEGER         reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    FLOAT           reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    LESS            reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    GRTR            reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    EQ              reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    NOTEQ           reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    AND             reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    OR              reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    SUM             reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    MINUS           reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    MULTP           reduce using rule 109 (exp2 -> MULTP meteOper exp .)
    DIVIDE          reduce using rule 109 (exp2 -> MULTP meteOper exp .)

=======
    (64) assignment -> ID ASSGN . meteVar exp generaCuad SEMICOLON
    (65) assignment -> ID ASSGN . meteVar llamadaAFunct SEMICOLON
    (66) meteVar -> .

    ID              reduce using rule 66 (meteVar -> .)
    LEFTPAR         reduce using rule 66 (meteVar -> .)
    INTEGER         reduce using rule 66 (meteVar -> .)
    FLOAT           reduce using rule 66 (meteVar -> .)
    SEMICOLON       reduce using rule 66 (meteVar -> .)
    LESS            reduce using rule 66 (meteVar -> .)
    GRTR            reduce using rule 66 (meteVar -> .)
    EQ              reduce using rule 66 (meteVar -> .)
    NOTEQ           reduce using rule 66 (meteVar -> .)
    AND             reduce using rule 66 (meteVar -> .)
    OR              reduce using rule 66 (meteVar -> .)
    SUM             reduce using rule 66 (meteVar -> .)
    MINUS           reduce using rule 66 (meteVar -> .)
    MULTP           reduce using rule 66 (meteVar -> .)
    DIVIDE          reduce using rule 66 (meteVar -> .)

    meteVar                        shift and go to state 155

state 122
>>>>>>> MiguelNueva

state 138

<<<<<<< HEAD
    (102) exp2 -> EQ meteOper exp .

    LEFTBRACK       reduce using rule 102 (exp2 -> EQ meteOper exp .)
    COMMA           reduce using rule 102 (exp2 -> EQ meteOper exp .)
    SEMICOLON       reduce using rule 102 (exp2 -> EQ meteOper exp .)
    RIGHTBRACK      reduce using rule 102 (exp2 -> EQ meteOper exp .)
    RIGHTPAR        reduce using rule 102 (exp2 -> EQ meteOper exp .)
    ID              reduce using rule 102 (exp2 -> EQ meteOper exp .)
    LEFTPAR         reduce using rule 102 (exp2 -> EQ meteOper exp .)
    INTEGER         reduce using rule 102 (exp2 -> EQ meteOper exp .)
    FLOAT           reduce using rule 102 (exp2 -> EQ meteOper exp .)
    LESS            reduce using rule 102 (exp2 -> EQ meteOper exp .)
    GRTR            reduce using rule 102 (exp2 -> EQ meteOper exp .)
    EQ              reduce using rule 102 (exp2 -> EQ meteOper exp .)
    NOTEQ           reduce using rule 102 (exp2 -> EQ meteOper exp .)
    AND             reduce using rule 102 (exp2 -> EQ meteOper exp .)
    OR              reduce using rule 102 (exp2 -> EQ meteOper exp .)
    SUM             reduce using rule 102 (exp2 -> EQ meteOper exp .)
    MINUS           reduce using rule 102 (exp2 -> EQ meteOper exp .)
    MULTP           reduce using rule 102 (exp2 -> EQ meteOper exp .)
    DIVIDE          reduce using rule 102 (exp2 -> EQ meteOper exp .)

=======
    ID              shift and go to state 157
    RIGHTPAR        reduce using rule 112 (empty -> .)

    llamadaAFunct2                 shift and go to state 156
    empty                          shift and go to state 158
>>>>>>> MiguelNueva

state 123

    (105) exp2 -> OR meteOper exp .

    LEFTBRACK       reduce using rule 105 (exp2 -> OR meteOper exp .)
    COMMA           reduce using rule 105 (exp2 -> OR meteOper exp .)
    SEMICOLON       reduce using rule 105 (exp2 -> OR meteOper exp .)
    RIGHTBRACK      reduce using rule 105 (exp2 -> OR meteOper exp .)
    RIGHTPAR        reduce using rule 105 (exp2 -> OR meteOper exp .)
    ID              reduce using rule 105 (exp2 -> OR meteOper exp .)
    LEFTPAR         reduce using rule 105 (exp2 -> OR meteOper exp .)
    INTEGER         reduce using rule 105 (exp2 -> OR meteOper exp .)
    FLOAT           reduce using rule 105 (exp2 -> OR meteOper exp .)
    LESS            reduce using rule 105 (exp2 -> OR meteOper exp .)
    GRTR            reduce using rule 105 (exp2 -> OR meteOper exp .)
    EQ              reduce using rule 105 (exp2 -> OR meteOper exp .)
    NOTEQ           reduce using rule 105 (exp2 -> OR meteOper exp .)
    AND             reduce using rule 105 (exp2 -> OR meteOper exp .)
    OR              reduce using rule 105 (exp2 -> OR meteOper exp .)
    SUM             reduce using rule 105 (exp2 -> OR meteOper exp .)
    MINUS           reduce using rule 105 (exp2 -> OR meteOper exp .)
    MULTP           reduce using rule 105 (exp2 -> OR meteOper exp .)
    DIVIDE          reduce using rule 105 (exp2 -> OR meteOper exp .)


state 124

    (51) declareRecursivoLocal -> type . ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal

    ID              shift and go to state 159


state 125

    (59) declareRecursivoLocal -> empty .

    IF              reduce using rule 59 (declareRecursivoLocal -> empty .)
    DECLARE         reduce using rule 59 (declareRecursivoLocal -> empty .)
    READ            reduce using rule 59 (declareRecursivoLocal -> empty .)
    WRITE           reduce using rule 59 (declareRecursivoLocal -> empty .)
    ID              reduce using rule 59 (declareRecursivoLocal -> empty .)
    WHILE           reduce using rule 59 (declareRecursivoLocal -> empty .)
    DO              reduce using rule 59 (declareRecursivoLocal -> empty .)
    RIGHTKEY        reduce using rule 59 (declareRecursivoLocal -> empty .)
    RETURN          reduce using rule 59 (declareRecursivoLocal -> empty .)


state 126

    (68) conditional -> IF LEFTPAR . conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (74) conditional2 -> . exp conditional2
    (75) conditional2 -> . empty
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (112) empty -> .
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    exp                            shift and go to state 162
    number                         shift and go to state 41
    empty                          shift and go to state 160
    conditional2                   shift and go to state 161

state 127

    (38) est -> cycles est .

    RIGHTKEY        reduce using rule 38 (est -> cycles est .)
    RETURN          reduce using rule 38 (est -> cycles est .)


state 128

    (40) est -> output est .

    RIGHTKEY        reduce using rule 40 (est -> output est .)
    RETURN          reduce using rule 40 (est -> output est .)


state 129

    (37) est -> declareLocal est .

    RIGHTKEY        reduce using rule 37 (est -> declareLocal est .)
    RETURN          reduce using rule 37 (est -> declareLocal est .)


state 130

    (99) exp2 -> AND meteOper exp .

    LEFTBRACK       reduce using rule 99 (exp2 -> AND meteOper exp .)
    COMMA           reduce using rule 99 (exp2 -> AND meteOper exp .)
    SEMICOLON       reduce using rule 99 (exp2 -> AND meteOper exp .)
    RIGHTBRACK      reduce using rule 99 (exp2 -> AND meteOper exp .)
    RIGHTPAR        reduce using rule 99 (exp2 -> AND meteOper exp .)
    ID              reduce using rule 99 (exp2 -> AND meteOper exp .)
    LEFTPAR         reduce using rule 99 (exp2 -> AND meteOper exp .)
    INTEGER         reduce using rule 99 (exp2 -> AND meteOper exp .)
    FLOAT           reduce using rule 99 (exp2 -> AND meteOper exp .)
    LESS            reduce using rule 99 (exp2 -> AND meteOper exp .)
    GRTR            reduce using rule 99 (exp2 -> AND meteOper exp .)
    EQ              reduce using rule 99 (exp2 -> AND meteOper exp .)
    NOTEQ           reduce using rule 99 (exp2 -> AND meteOper exp .)
    AND             reduce using rule 99 (exp2 -> AND meteOper exp .)
    OR              reduce using rule 99 (exp2 -> AND meteOper exp .)
    SUM             reduce using rule 99 (exp2 -> AND meteOper exp .)
    MINUS           reduce using rule 99 (exp2 -> AND meteOper exp .)
    MULTP           reduce using rule 99 (exp2 -> AND meteOper exp .)
    DIVIDE          reduce using rule 99 (exp2 -> AND meteOper exp .)


state 131

    (105) exp2 -> DIVIDE meteOper exp .

    LEFTBRACK       reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    COMMA           reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    SEMICOLON       reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    RIGHTBRACK      reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    RIGHTPAR        reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    ID              reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    LEFTPAR         reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    INTEGER         reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    FLOAT           reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    LESS            reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    GRTR            reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    EQ              reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    NOTEQ           reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    AND             reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    OR              reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    SUM             reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    MINUS           reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    MULTP           reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)
    DIVIDE          reduce using rule 105 (exp2 -> DIVIDE meteOper exp .)


state 132

    (95) exp2 -> LESS meteOper exp .

<<<<<<< HEAD
    (92) exp -> LEFTPAR metePar exp RIGHTPAR . sacaPar exp2 generaCuad
    (94) sacaPar -> .

    LESS            reduce using rule 94 (sacaPar -> .)
    GRTR            reduce using rule 94 (sacaPar -> .)
    EQ              reduce using rule 94 (sacaPar -> .)
    NOTEQ           reduce using rule 94 (sacaPar -> .)
    AND             reduce using rule 94 (sacaPar -> .)
    OR              reduce using rule 94 (sacaPar -> .)
    SUM             reduce using rule 94 (sacaPar -> .)
    MINUS           reduce using rule 94 (sacaPar -> .)
    MULTP           reduce using rule 94 (sacaPar -> .)
    DIVIDE          reduce using rule 94 (sacaPar -> .)
    LEFTBRACK       reduce using rule 94 (sacaPar -> .)
    COMMA           reduce using rule 94 (sacaPar -> .)
    SEMICOLON       reduce using rule 94 (sacaPar -> .)
    RIGHTBRACK      reduce using rule 94 (sacaPar -> .)
    RIGHTPAR        reduce using rule 94 (sacaPar -> .)
    ID              reduce using rule 94 (sacaPar -> .)
    LEFTPAR         reduce using rule 94 (sacaPar -> .)
    INTEGER         reduce using rule 94 (sacaPar -> .)
    FLOAT           reduce using rule 94 (sacaPar -> .)

    sacaPar                        shift and go to state 161
=======
    LEFTBRACK       reduce using rule 95 (exp2 -> LESS meteOper exp .)
    COMMA           reduce using rule 95 (exp2 -> LESS meteOper exp .)
    SEMICOLON       reduce using rule 95 (exp2 -> LESS meteOper exp .)
    RIGHTBRACK      reduce using rule 95 (exp2 -> LESS meteOper exp .)
    RIGHTPAR        reduce using rule 95 (exp2 -> LESS meteOper exp .)
    ID              reduce using rule 95 (exp2 -> LESS meteOper exp .)
    LEFTPAR         reduce using rule 95 (exp2 -> LESS meteOper exp .)
    INTEGER         reduce using rule 95 (exp2 -> LESS meteOper exp .)
    FLOAT           reduce using rule 95 (exp2 -> LESS meteOper exp .)
    LESS            reduce using rule 95 (exp2 -> LESS meteOper exp .)
    GRTR            reduce using rule 95 (exp2 -> LESS meteOper exp .)
    EQ              reduce using rule 95 (exp2 -> LESS meteOper exp .)
    NOTEQ           reduce using rule 95 (exp2 -> LESS meteOper exp .)
    AND             reduce using rule 95 (exp2 -> LESS meteOper exp .)
    OR              reduce using rule 95 (exp2 -> LESS meteOper exp .)
    SUM             reduce using rule 95 (exp2 -> LESS meteOper exp .)
    MINUS           reduce using rule 95 (exp2 -> LESS meteOper exp .)
    MULTP           reduce using rule 95 (exp2 -> LESS meteOper exp .)
    DIVIDE          reduce using rule 95 (exp2 -> LESS meteOper exp .)


state 133
>>>>>>> MiguelNueva

    (98) exp2 -> NOTEQ meteOper exp .

<<<<<<< HEAD
    (27) array -> LEFTBRACK exp RIGHTBRACK array .

    COMMA           reduce using rule 27 (array -> LEFTBRACK exp RIGHTBRACK array .)
    SEMICOLON       reduce using rule 27 (array -> LEFTBRACK exp RIGHTBRACK array .)
=======
    LEFTBRACK       reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    COMMA           reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    SEMICOLON       reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    RIGHTBRACK      reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    RIGHTPAR        reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    ID              reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    LEFTPAR         reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    INTEGER         reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    FLOAT           reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    LESS            reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    GRTR            reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    EQ              reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    NOTEQ           reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    AND             reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    OR              reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    SUM             reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    MINUS           reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    MULTP           reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)
    DIVIDE          reduce using rule 98 (exp2 -> NOTEQ meteOper exp .)

>>>>>>> MiguelNueva

state 134

    (101) exp2 -> SUM meteOper exp .

<<<<<<< HEAD
    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .

    FUNCTION        reduce using rule 8 (declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .)
    MAIN            reduce using rule 8 (declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .)

=======
    LEFTBRACK       reduce using rule 101 (exp2 -> SUM meteOper exp .)
    COMMA           reduce using rule 101 (exp2 -> SUM meteOper exp .)
    SEMICOLON       reduce using rule 101 (exp2 -> SUM meteOper exp .)
    RIGHTBRACK      reduce using rule 101 (exp2 -> SUM meteOper exp .)
    RIGHTPAR        reduce using rule 101 (exp2 -> SUM meteOper exp .)
    ID              reduce using rule 101 (exp2 -> SUM meteOper exp .)
    LEFTPAR         reduce using rule 101 (exp2 -> SUM meteOper exp .)
    INTEGER         reduce using rule 101 (exp2 -> SUM meteOper exp .)
    FLOAT           reduce using rule 101 (exp2 -> SUM meteOper exp .)
    LESS            reduce using rule 101 (exp2 -> SUM meteOper exp .)
    GRTR            reduce using rule 101 (exp2 -> SUM meteOper exp .)
    EQ              reduce using rule 101 (exp2 -> SUM meteOper exp .)
    NOTEQ           reduce using rule 101 (exp2 -> SUM meteOper exp .)
    AND             reduce using rule 101 (exp2 -> SUM meteOper exp .)
    OR              reduce using rule 101 (exp2 -> SUM meteOper exp .)
    SUM             reduce using rule 101 (exp2 -> SUM meteOper exp .)
    MINUS           reduce using rule 101 (exp2 -> SUM meteOper exp .)
    MULTP           reduce using rule 101 (exp2 -> SUM meteOper exp .)
    DIVIDE          reduce using rule 101 (exp2 -> SUM meteOper exp .)


state 135

    (103) exp2 -> MINUS meteOper exp .
>>>>>>> MiguelNueva

    LEFTBRACK       reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    COMMA           reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    SEMICOLON       reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    RIGHTBRACK      reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    RIGHTPAR        reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    ID              reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    LEFTPAR         reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    INTEGER         reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    FLOAT           reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    LESS            reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    GRTR            reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    EQ              reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    NOTEQ           reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    AND             reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    OR              reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    SUM             reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    MINUS           reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    MULTP           reduce using rule 103 (exp2 -> MINUS meteOper exp .)
    DIVIDE          reduce using rule 103 (exp2 -> MINUS meteOper exp .)

<<<<<<< HEAD
    (10) declare3 -> COMMA ID altaVarGlobal . declare3
    (10) declare3 -> . COMMA ID altaVarGlobal declare3
    (26) declare3 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 72
    SEMICOLON       reduce using rule 117 (empty -> .)

    empty                          shift and go to state 73
    declare3                       shift and go to state 162
=======

state 136

    (96) exp2 -> GRTR meteOper exp .
>>>>>>> MiguelNueva

    LEFTBRACK       reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    COMMA           reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    SEMICOLON       reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    RIGHTBRACK      reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    RIGHTPAR        reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    ID              reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    LEFTPAR         reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    INTEGER         reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    FLOAT           reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    LESS            reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    GRTR            reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    EQ              reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    NOTEQ           reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    AND             reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    OR              reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    SUM             reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    MINUS           reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    MULTP           reduce using rule 96 (exp2 -> GRTR meteOper exp .)
    DIVIDE          reduce using rule 96 (exp2 -> GRTR meteOper exp .)

<<<<<<< HEAD
    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY . guardaSalto est functReturn RIGHTKEY
    (13) guardaSalto -> .

    IF              reduce using rule 13 (guardaSalto -> .)
    DECLARE         reduce using rule 13 (guardaSalto -> .)
    READ            reduce using rule 13 (guardaSalto -> .)
    WRITE           reduce using rule 13 (guardaSalto -> .)
    ID              reduce using rule 13 (guardaSalto -> .)
    WHILE           reduce using rule 13 (guardaSalto -> .)
    DO              reduce using rule 13 (guardaSalto -> .)
    RETURN          reduce using rule 13 (guardaSalto -> .)
    RIGHTKEY        reduce using rule 13 (guardaSalto -> .)

    guardaSalto                    shift and go to state 163
=======

state 137

    (104) exp2 -> MULTP meteOper exp .
>>>>>>> MiguelNueva

    LEFTBRACK       reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    COMMA           reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    SEMICOLON       reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    RIGHTBRACK      reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    RIGHTPAR        reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    ID              reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    LEFTPAR         reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    INTEGER         reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    FLOAT           reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    LESS            reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    GRTR            reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    EQ              reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    NOTEQ           reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    AND             reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    OR              reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    SUM             reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    MINUS           reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    MULTP           reduce using rule 104 (exp2 -> MULTP meteOper exp .)
    DIVIDE          reduce using rule 104 (exp2 -> MULTP meteOper exp .)

<<<<<<< HEAD
    (19) funct2 -> type ID altaVarLocal . funct3
    (20) funct3 -> . COMMA type ID altaVarLocal funct3
    (22) funct3 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 165
    RIGHTPAR        reduce using rule 117 (empty -> .)

    funct3                         shift and go to state 164
    empty                          shift and go to state 166
=======

state 138

    (97) exp2 -> EQ meteOper exp .
>>>>>>> MiguelNueva

    LEFTBRACK       reduce using rule 97 (exp2 -> EQ meteOper exp .)
    COMMA           reduce using rule 97 (exp2 -> EQ meteOper exp .)
    SEMICOLON       reduce using rule 97 (exp2 -> EQ meteOper exp .)
    RIGHTBRACK      reduce using rule 97 (exp2 -> EQ meteOper exp .)
    RIGHTPAR        reduce using rule 97 (exp2 -> EQ meteOper exp .)
    ID              reduce using rule 97 (exp2 -> EQ meteOper exp .)
    LEFTPAR         reduce using rule 97 (exp2 -> EQ meteOper exp .)
    INTEGER         reduce using rule 97 (exp2 -> EQ meteOper exp .)
    FLOAT           reduce using rule 97 (exp2 -> EQ meteOper exp .)
    LESS            reduce using rule 97 (exp2 -> EQ meteOper exp .)
    GRTR            reduce using rule 97 (exp2 -> EQ meteOper exp .)
    EQ              reduce using rule 97 (exp2 -> EQ meteOper exp .)
    NOTEQ           reduce using rule 97 (exp2 -> EQ meteOper exp .)
    AND             reduce using rule 97 (exp2 -> EQ meteOper exp .)
    OR              reduce using rule 97 (exp2 -> EQ meteOper exp .)
    SUM             reduce using rule 97 (exp2 -> EQ meteOper exp .)
    MINUS           reduce using rule 97 (exp2 -> EQ meteOper exp .)
    MULTP           reduce using rule 97 (exp2 -> EQ meteOper exp .)
    DIVIDE          reduce using rule 97 (exp2 -> EQ meteOper exp .)

<<<<<<< HEAD
    (84) do-while -> DO meteSalto LEFTKEY . est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 167
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    declareLocal                   shift and go to state 94
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    cycles                         shift and go to state 90
=======

state 139

    (100) exp2 -> OR meteOper exp .

    LEFTBRACK       reduce using rule 100 (exp2 -> OR meteOper exp .)
    COMMA           reduce using rule 100 (exp2 -> OR meteOper exp .)
    SEMICOLON       reduce using rule 100 (exp2 -> OR meteOper exp .)
    RIGHTBRACK      reduce using rule 100 (exp2 -> OR meteOper exp .)
    RIGHTPAR        reduce using rule 100 (exp2 -> OR meteOper exp .)
    ID              reduce using rule 100 (exp2 -> OR meteOper exp .)
    LEFTPAR         reduce using rule 100 (exp2 -> OR meteOper exp .)
    INTEGER         reduce using rule 100 (exp2 -> OR meteOper exp .)
    FLOAT           reduce using rule 100 (exp2 -> OR meteOper exp .)
    LESS            reduce using rule 100 (exp2 -> OR meteOper exp .)
    GRTR            reduce using rule 100 (exp2 -> OR meteOper exp .)
    EQ              reduce using rule 100 (exp2 -> OR meteOper exp .)
    NOTEQ           reduce using rule 100 (exp2 -> OR meteOper exp .)
    AND             reduce using rule 100 (exp2 -> OR meteOper exp .)
    OR              reduce using rule 100 (exp2 -> OR meteOper exp .)
    SUM             reduce using rule 100 (exp2 -> OR meteOper exp .)
    MINUS           reduce using rule 100 (exp2 -> OR meteOper exp .)
    MULTP           reduce using rule 100 (exp2 -> OR meteOper exp .)
    DIVIDE          reduce using rule 100 (exp2 -> OR meteOper exp .)


state 140
>>>>>>> MiguelNueva

    (87) exp -> LEFTPAR metePar exp RIGHTPAR . sacaPar exp2 generaCuad
    (89) sacaPar -> .

<<<<<<< HEAD
    (116) input -> READ LEFTPAR ID . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 168
=======
    LESS            reduce using rule 89 (sacaPar -> .)
    GRTR            reduce using rule 89 (sacaPar -> .)
    EQ              reduce using rule 89 (sacaPar -> .)
    NOTEQ           reduce using rule 89 (sacaPar -> .)
    AND             reduce using rule 89 (sacaPar -> .)
    OR              reduce using rule 89 (sacaPar -> .)
    SUM             reduce using rule 89 (sacaPar -> .)
    MINUS           reduce using rule 89 (sacaPar -> .)
    MULTP           reduce using rule 89 (sacaPar -> .)
    DIVIDE          reduce using rule 89 (sacaPar -> .)
    LEFTBRACK       reduce using rule 89 (sacaPar -> .)
    COMMA           reduce using rule 89 (sacaPar -> .)
    SEMICOLON       reduce using rule 89 (sacaPar -> .)
    RIGHTBRACK      reduce using rule 89 (sacaPar -> .)
    RIGHTPAR        reduce using rule 89 (sacaPar -> .)
    ID              reduce using rule 89 (sacaPar -> .)
    LEFTPAR         reduce using rule 89 (sacaPar -> .)
    INTEGER         reduce using rule 89 (sacaPar -> .)
    FLOAT           reduce using rule 89 (sacaPar -> .)

    sacaPar                        shift and go to state 163
>>>>>>> MiguelNueva

state 141

    (25) array -> LEFTBRACK exp RIGHTBRACK array .

<<<<<<< HEAD
    (87) while -> WHILE LEFTPAR while2 . RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF

    RIGHTPAR        shift and go to state 169

=======
    COMMA           reduce using rule 25 (array -> LEFTBRACK exp RIGHTBRACK array .)
    SEMICOLON       reduce using rule 25 (array -> LEFTBRACK exp RIGHTBRACK array .)


state 142
>>>>>>> MiguelNueva

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .

<<<<<<< HEAD
    (89) while2 -> exp . while2
    (89) while2 -> . exp while2
    (90) while2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    while2                         shift and go to state 170
    exp                            shift and go to state 149
    empty                          shift and go to state 150
=======
    FUNCTION        reduce using rule 8 (declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .)
    MAIN            reduce using rule 8 (declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .)


state 143
>>>>>>> MiguelNueva

    (10) declare3 -> COMMA ID altaVarGlobal . declare3
    (10) declare3 -> . COMMA ID altaVarGlobal declare3
    (24) declare3 -> . empty
    (112) empty -> .

<<<<<<< HEAD
    (90) while2 -> empty .
    (99) exp -> empty .
    (60) number -> empty .

  ! reduce/reduce conflict for RIGHTPAR resolved using rule 90 (while2 -> empty .)
  ! reduce/reduce conflict for LESS resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 60 (number -> empty .)
    LESS            reduce using rule 60 (number -> empty .)
    GRTR            reduce using rule 60 (number -> empty .)
    EQ              reduce using rule 60 (number -> empty .)
    NOTEQ           reduce using rule 60 (number -> empty .)
    AND             reduce using rule 60 (number -> empty .)
    OR              reduce using rule 60 (number -> empty .)
    SUM             reduce using rule 60 (number -> empty .)
    MINUS           reduce using rule 60 (number -> empty .)
    MULTP           reduce using rule 60 (number -> empty .)
    DIVIDE          reduce using rule 60 (number -> empty .)
    ID              reduce using rule 60 (number -> empty .)
    LEFTPAR         reduce using rule 60 (number -> empty .)
    INTEGER         reduce using rule 60 (number -> empty .)
    FLOAT           reduce using rule 60 (number -> empty .)
    RIGHTPAR        reduce using rule 60 (number -> empty .)

  ! RIGHTPAR        [ reduce using rule 90 (while2 -> empty .) ]
  ! ID              [ reduce using rule 99 (exp -> empty .) ]
  ! LEFTPAR         [ reduce using rule 99 (exp -> empty .) ]
  ! INTEGER         [ reduce using rule 99 (exp -> empty .) ]
  ! FLOAT           [ reduce using rule 99 (exp -> empty .) ]
  ! LESS            [ reduce using rule 99 (exp -> empty .) ]
  ! GRTR            [ reduce using rule 99 (exp -> empty .) ]
  ! EQ              [ reduce using rule 99 (exp -> empty .) ]
  ! NOTEQ           [ reduce using rule 99 (exp -> empty .) ]
  ! AND             [ reduce using rule 99 (exp -> empty .) ]
  ! OR              [ reduce using rule 99 (exp -> empty .) ]
  ! SUM             [ reduce using rule 99 (exp -> empty .) ]
  ! MINUS           [ reduce using rule 99 (exp -> empty .) ]
  ! MULTP           [ reduce using rule 99 (exp -> empty .) ]
  ! DIVIDE          [ reduce using rule 99 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 99 (exp -> empty .) ]

=======
    COMMA           shift and go to state 72
    SEMICOLON       reduce using rule 112 (empty -> .)

    empty                          shift and go to state 73
    declare3                       shift and go to state 164

state 144
>>>>>>> MiguelNueva

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY . est functReturn RIGHTKEY
    (36) est -> . conditional est
    (37) est -> . declareLocal est
    (38) est -> . cycles est
    (39) est -> . input est
    (40) est -> . output est
    (41) est -> . assignment est
    (42) est -> . llamadaAFunct est
    (43) est -> . empty
    (68) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (50) declareLocal -> . DECLARE declareRecursivoLocal
    (60) declareLocal -> . empty
    (76) cycles -> . while
    (77) cycles -> . empty
    (78) cycles -> . do-while
    (111) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (107) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (64) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (65) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (67) assignment -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (112) empty -> .
    (82) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (79) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

<<<<<<< HEAD
    (112) output -> WRITE LEFTPAR output2 . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 171
=======
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RETURN          reduce using rule 112 (empty -> .)
    RIGHTKEY        reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]
>>>>>>> MiguelNueva

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 165
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94

state 145

    (17) funct2 -> type ID altaVarLocal . funct3
    (18) funct3 -> . COMMA type ID altaVarLocal funct3
    (20) funct3 -> . empty
    (112) empty -> .

    COMMA           shift and go to state 167
    RIGHTPAR        reduce using rule 112 (empty -> .)

    funct3                         shift and go to state 166
    empty                          shift and go to state 168

state 146

    (114) output2 -> QUOTE . ID QUOTE output2

    ID              shift and go to state 172

<<<<<<< HEAD
=======
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 169
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    declareLocal                   shift and go to state 94
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    cycles                         shift and go to state 90
>>>>>>> MiguelNueva

state 147

    (113) output2 -> ID . output2
    (113) output2 -> . ID output2
    (114) output2 -> . QUOTE ID QUOTE output2
    (115) output2 -> . empty
    (117) empty -> .

<<<<<<< HEAD
    ID              shift and go to state 153
    QUOTE           shift and go to state 152
    RIGHTPAR        reduce using rule 117 (empty -> .)
=======
    RIGHTPAR        shift and go to state 170
>>>>>>> MiguelNueva

    output2                        shift and go to state 173
    empty                          shift and go to state 154

state 148

    (115) output2 -> empty .

<<<<<<< HEAD
    RIGHTPAR        reduce using rule 115 (output2 -> empty .)
=======
    RIGHTPAR        shift and go to state 171
>>>>>>> MiguelNueva


state 149

<<<<<<< HEAD
    (69) assignment -> ID ASSGN meteVar . exp generaCuad SEMICOLON
    (70) assignment -> ID ASSGN meteVar . llamadaAFunct SEMICOLON
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty
    (117) empty -> .

    ID              shift and go to state 176
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    SEMICOLON       reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)

    llamadaAFunct                  shift and go to state 174
    number                         shift and go to state 41
    exp                            shift and go to state 177
    empty                          shift and go to state 175
=======
    (84) while2 -> exp . while2
    (84) while2 -> . exp while2
    (85) while2 -> . empty
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (112) empty -> .
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    while2                         shift and go to state 172
    exp                            shift and go to state 149
    empty                          shift and go to state 150
>>>>>>> MiguelNueva

state 150

    (46) llamadaAFunct -> ID cuadERA LEFTPAR . llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (51) llamadaAFunct2 -> . exp llamadaAFunct3
    (54) llamadaAFunct2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

    llamadaAFunct2                 shift and go to state 179
    number                         shift and go to state 41
    exp                            shift and go to state 178
    empty                          shift and go to state 180

state 151

    (56) declareRecursivoLocal -> type ID . altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (68) altaVarLocal -> .

<<<<<<< HEAD
    ASSGN           reduce using rule 68 (altaVarLocal -> .)
    LEFTBRACK       reduce using rule 68 (altaVarLocal -> .)
    COMMA           reduce using rule 68 (altaVarLocal -> .)
    SEMICOLON       reduce using rule 68 (altaVarLocal -> .)
=======
    RIGHTPAR        shift and go to state 173
>>>>>>> MiguelNueva

    altaVarLocal                   shift and go to state 181

state 152

<<<<<<< HEAD
    (80) conditional2 -> empty .
    (99) exp -> empty .
    (60) number -> empty .

  ! reduce/reduce conflict for RIGHTPAR resolved using rule 80 (conditional2 -> empty .)
  ! reduce/reduce conflict for LESS resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for LEFTPAR resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 60 (number -> empty .)
    LESS            reduce using rule 60 (number -> empty .)
    GRTR            reduce using rule 60 (number -> empty .)
    EQ              reduce using rule 60 (number -> empty .)
    NOTEQ           reduce using rule 60 (number -> empty .)
    AND             reduce using rule 60 (number -> empty .)
    OR              reduce using rule 60 (number -> empty .)
    SUM             reduce using rule 60 (number -> empty .)
    MINUS           reduce using rule 60 (number -> empty .)
    MULTP           reduce using rule 60 (number -> empty .)
    DIVIDE          reduce using rule 60 (number -> empty .)
    ID              reduce using rule 60 (number -> empty .)
    LEFTPAR         reduce using rule 60 (number -> empty .)
    INTEGER         reduce using rule 60 (number -> empty .)
    FLOAT           reduce using rule 60 (number -> empty .)
    RIGHTPAR        reduce using rule 60 (number -> empty .)

  ! RIGHTPAR        [ reduce using rule 80 (conditional2 -> empty .) ]
  ! ID              [ reduce using rule 99 (exp -> empty .) ]
  ! LEFTPAR         [ reduce using rule 99 (exp -> empty .) ]
  ! INTEGER         [ reduce using rule 99 (exp -> empty .) ]
  ! FLOAT           [ reduce using rule 99 (exp -> empty .) ]
  ! LESS            [ reduce using rule 99 (exp -> empty .) ]
  ! GRTR            [ reduce using rule 99 (exp -> empty .) ]
  ! EQ              [ reduce using rule 99 (exp -> empty .) ]
  ! NOTEQ           [ reduce using rule 99 (exp -> empty .) ]
  ! AND             [ reduce using rule 99 (exp -> empty .) ]
  ! OR              [ reduce using rule 99 (exp -> empty .) ]
  ! SUM             [ reduce using rule 99 (exp -> empty .) ]
  ! MINUS           [ reduce using rule 99 (exp -> empty .) ]
  ! MULTP           [ reduce using rule 99 (exp -> empty .) ]
  ! DIVIDE          [ reduce using rule 99 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 99 (exp -> empty .) ]
=======
    (109) output2 -> QUOTE . ID QUOTE output2

    ID              shift and go to state 174
>>>>>>> MiguelNueva


state 153

    (73) conditional -> IF LEFTPAR conditional2 . RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse

<<<<<<< HEAD
    RIGHTPAR        shift and go to state 182

=======
    ID              shift and go to state 153
    QUOTE           shift and go to state 152
    RIGHTPAR        reduce using rule 112 (empty -> .)

    output2                        shift and go to state 175
    empty                          shift and go to state 154
>>>>>>> MiguelNueva

state 154

    (79) conditional2 -> exp . conditional2
    (79) conditional2 -> . exp conditional2
    (80) conditional2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    conditional2                   shift and go to state 183
    exp                            shift and go to state 160
    empty                          shift and go to state 158

state 155

<<<<<<< HEAD
    (92) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar . exp2 generaCuad
    (100) exp2 -> . LESS meteOper exp
    (101) exp2 -> . GRTR meteOper exp
    (102) exp2 -> . EQ meteOper exp
    (103) exp2 -> . NOTEQ meteOper exp
    (104) exp2 -> . AND meteOper exp
    (105) exp2 -> . OR meteOper exp
    (106) exp2 -> . SUM meteOper exp
    (108) exp2 -> . MINUS meteOper exp
    (109) exp2 -> . MULTP meteOper exp
    (110) exp2 -> . DIVIDE meteOper exp
    (111) exp2 -> . empty
    (117) empty -> .

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GRTR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LESS            shift and go to state 56
    GRTR            shift and go to state 61
    EQ              shift and go to state 63
    NOTEQ           shift and go to state 57
    AND             shift and go to state 54
    OR              shift and go to state 64
    SUM             shift and go to state 59
    MINUS           shift and go to state 60
    MULTP           shift and go to state 62
    DIVIDE          shift and go to state 55
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    RIGHTBRACK      reduce using rule 117 (empty -> .)
    RIGHTPAR        reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    LEFTPAR         reduce using rule 117 (empty -> .)
    INTEGER         reduce using rule 117 (empty -> .)
    FLOAT           reduce using rule 117 (empty -> .)

  ! LESS            [ reduce using rule 117 (empty -> .) ]
  ! GRTR            [ reduce using rule 117 (empty -> .) ]
  ! EQ              [ reduce using rule 117 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 117 (empty -> .) ]
  ! AND             [ reduce using rule 117 (empty -> .) ]
  ! OR              [ reduce using rule 117 (empty -> .) ]
  ! SUM             [ reduce using rule 117 (empty -> .) ]
  ! MINUS           [ reduce using rule 117 (empty -> .) ]
  ! MULTP           [ reduce using rule 117 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 117 (empty -> .) ]

    exp2                           shift and go to state 184
    empty                          shift and go to state 65
=======
    (64) assignment -> ID ASSGN meteVar . exp generaCuad SEMICOLON
    (65) assignment -> ID ASSGN meteVar . llamadaAFunct SEMICOLON
    (86) exp -> . ID meteExp exp2
    (87) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (92) exp -> . number exp2
    (94) exp -> . empty
    (44) llamadaAFunct -> . ID LEFTPAR llamadaAFunct2 RIGHTPAR
    (45) llamadaAFunct -> . empty
    (53) number -> . INTEGER meteNum
    (54) number -> . FLOAT meteNum
    (55) number -> . empty
    (112) empty -> .

    ID              shift and go to state 178
    LEFTPAR         shift and go to state 43
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42
    SEMICOLON       reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)

    llamadaAFunct                  shift and go to state 176
    number                         shift and go to state 41
    exp                            shift and go to state 177
    empty                          shift and go to state 179
>>>>>>> MiguelNueva

state 156

    (10) declare3 -> COMMA ID altaVarGlobal declare3 .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 10 (declare3 -> COMMA ID altaVarGlobal declare3 .)
=======
    RIGHTPAR        shift and go to state 180
>>>>>>> MiguelNueva


state 157

<<<<<<< HEAD
    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto . est functReturn RIGHTKEY
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RETURN          reduce using rule 117 (empty -> .)
    RIGHTKEY        reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 185
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
=======
    (46) llamadaAFunct2 -> ID . llamadaAFunct3
    (47) llamadaAFunct3 -> . COMMA ID
    (48) llamadaAFunct3 -> . empty
    (112) empty -> .

    COMMA           shift and go to state 182
    RIGHTPAR        reduce using rule 112 (empty -> .)

    llamadaAFunct3                 shift and go to state 181
    empty                          shift and go to state 183
>>>>>>> MiguelNueva

state 158

    (19) funct2 -> type ID altaVarLocal funct3 .

    RIGHTPAR        reduce using rule 19 (funct2 -> type ID altaVarLocal funct3 .)


state 159

    (20) funct3 -> COMMA . type ID altaVarLocal funct3
    (29) type -> . type2
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

<<<<<<< HEAD
    type                           shift and go to state 186
    type2                          shift and go to state 21
=======
    altaVarLocal                   shift and go to state 184
>>>>>>> MiguelNueva

state 160

    (22) funct3 -> empty .

    RIGHTPAR        reduce using rule 22 (funct3 -> empty .)


state 161

    (84) do-while -> DO meteSalto LEFTKEY est . RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

<<<<<<< HEAD
    RIGHTKEY        shift and go to state 187
=======
    RIGHTPAR        shift and go to state 185
>>>>>>> MiguelNueva


state 162

    (116) input -> READ LEFTPAR ID RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 188

<<<<<<< HEAD
=======
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    conditional2                   shift and go to state 186
    exp                            shift and go to state 162
    empty                          shift and go to state 160
>>>>>>> MiguelNueva

state 163

<<<<<<< HEAD
    (87) while -> WHILE LEFTPAR while2 RIGHTPAR . gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (74) gotoFCuad -> .

    LEFTKEY         reduce using rule 74 (gotoFCuad -> .)

    gotoFCuad                      shift and go to state 189
=======
    (87) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar . exp2 generaCuad
    (95) exp2 -> . LESS meteOper exp
    (96) exp2 -> . GRTR meteOper exp
    (97) exp2 -> . EQ meteOper exp
    (98) exp2 -> . NOTEQ meteOper exp
    (99) exp2 -> . AND meteOper exp
    (100) exp2 -> . OR meteOper exp
    (101) exp2 -> . SUM meteOper exp
    (103) exp2 -> . MINUS meteOper exp
    (104) exp2 -> . MULTP meteOper exp
    (105) exp2 -> . DIVIDE meteOper exp
    (106) exp2 -> . empty
    (112) empty -> .

  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GRTR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTP resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    LESS            shift and go to state 56
    GRTR            shift and go to state 61
    EQ              shift and go to state 63
    NOTEQ           shift and go to state 57
    AND             shift and go to state 54
    OR              shift and go to state 64
    SUM             shift and go to state 59
    MINUS           shift and go to state 60
    MULTP           shift and go to state 62
    DIVIDE          shift and go to state 55
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    RIGHTBRACK      reduce using rule 112 (empty -> .)
    RIGHTPAR        reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    LEFTPAR         reduce using rule 112 (empty -> .)
    INTEGER         reduce using rule 112 (empty -> .)
    FLOAT           reduce using rule 112 (empty -> .)

  ! LESS            [ reduce using rule 112 (empty -> .) ]
  ! GRTR            [ reduce using rule 112 (empty -> .) ]
  ! EQ              [ reduce using rule 112 (empty -> .) ]
  ! NOTEQ           [ reduce using rule 112 (empty -> .) ]
  ! AND             [ reduce using rule 112 (empty -> .) ]
  ! OR              [ reduce using rule 112 (empty -> .) ]
  ! SUM             [ reduce using rule 112 (empty -> .) ]
  ! MINUS           [ reduce using rule 112 (empty -> .) ]
  ! MULTP           [ reduce using rule 112 (empty -> .) ]
  ! DIVIDE          [ reduce using rule 112 (empty -> .) ]

    exp2                           shift and go to state 187
    empty                          shift and go to state 65
>>>>>>> MiguelNueva

state 164

<<<<<<< HEAD
    (89) while2 -> exp while2 .

    RIGHTPAR        reduce using rule 89 (while2 -> exp while2 .)
=======
    (10) declare3 -> COMMA ID altaVarGlobal declare3 .

    SEMICOLON       reduce using rule 10 (declare3 -> COMMA ID altaVarGlobal declare3 .)
>>>>>>> MiguelNueva


state 165

<<<<<<< HEAD
    (112) output -> WRITE LEFTPAR output2 RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 190
=======
    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY est . functReturn RIGHTKEY
    (13) functReturn -> . RETURN NUMBER SEMICOLON
    (14) functReturn -> . RETURN ID SEMICOLON
    (15) functReturn -> . empty
    (112) empty -> .

    RETURN          shift and go to state 188
    RIGHTKEY        reduce using rule 112 (empty -> .)
>>>>>>> MiguelNueva

    functReturn                    shift and go to state 189
    empty                          shift and go to state 190

state 166

<<<<<<< HEAD
    (114) output2 -> QUOTE ID . QUOTE output2

    QUOTE           shift and go to state 191
=======
    (17) funct2 -> type ID altaVarLocal funct3 .

    RIGHTPAR        reduce using rule 17 (funct2 -> type ID altaVarLocal funct3 .)


state 167

    (18) funct3 -> COMMA . type ID altaVarLocal funct3
    (27) type -> . type2
    (28) type2 -> . INT
    (29) type2 -> . FLOAT
    (30) type2 -> . STRING
    (31) type2 -> . BOOL
    (32) type2 -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15
>>>>>>> MiguelNueva

    type                           shift and go to state 191
    type2                          shift and go to state 21

state 168

<<<<<<< HEAD
    (113) output2 -> ID output2 .

    RIGHTPAR        reduce using rule 113 (output2 -> ID output2 .)
=======
    (20) funct3 -> empty .

    RIGHTPAR        reduce using rule 20 (funct3 -> empty .)
>>>>>>> MiguelNueva


state 169

    (70) assignment -> ID ASSGN meteVar llamadaAFunct . SEMICOLON

<<<<<<< HEAD
    SEMICOLON       shift and go to state 192
=======
    RIGHTKEY        shift and go to state 192
>>>>>>> MiguelNueva


state 170

    (99) exp -> empty .
    (50) llamadaAFunct -> empty .
    (60) number -> empty .

<<<<<<< HEAD
  ! reduce/reduce conflict for SEMICOLON resolved using rule 50 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 50 (llamadaAFunct -> empty .)
    SEMICOLON       reduce using rule 50 (llamadaAFunct -> empty .)
    LESS            reduce using rule 60 (number -> empty .)
    GRTR            reduce using rule 60 (number -> empty .)
    EQ              reduce using rule 60 (number -> empty .)
    NOTEQ           reduce using rule 60 (number -> empty .)
    AND             reduce using rule 60 (number -> empty .)
    OR              reduce using rule 60 (number -> empty .)
    SUM             reduce using rule 60 (number -> empty .)
    MINUS           reduce using rule 60 (number -> empty .)
    MULTP           reduce using rule 60 (number -> empty .)
    DIVIDE          reduce using rule 60 (number -> empty .)
=======
    SEMICOLON       shift and go to state 193
>>>>>>> MiguelNueva

  ! SEMICOLON       [ reduce using rule 99 (exp -> empty .) ]
  ! SEMICOLON       [ reduce using rule 60 (number -> empty .) ]

<<<<<<< HEAD
=======
state 171

    (82) while -> WHILE LEFTPAR while2 RIGHTPAR . gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (69) gotoFCuad -> .
>>>>>>> MiguelNueva

state 176

<<<<<<< HEAD
    (91) exp -> ID . meteExp exp2
    (46) llamadaAFunct -> ID . cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (95) meteExp -> .
    (47) cuadERA -> .

    LESS            reduce using rule 95 (meteExp -> .)
    GRTR            reduce using rule 95 (meteExp -> .)
    EQ              reduce using rule 95 (meteExp -> .)
    NOTEQ           reduce using rule 95 (meteExp -> .)
    AND             reduce using rule 95 (meteExp -> .)
    OR              reduce using rule 95 (meteExp -> .)
    SUM             reduce using rule 95 (meteExp -> .)
    MINUS           reduce using rule 95 (meteExp -> .)
    MULTP           reduce using rule 95 (meteExp -> .)
    DIVIDE          reduce using rule 95 (meteExp -> .)
    SEMICOLON       reduce using rule 95 (meteExp -> .)
    LEFTPAR         reduce using rule 47 (cuadERA -> .)

    meteExp                        shift and go to state 69
    cuadERA                        shift and go to state 122
=======
    gotoFCuad                      shift and go to state 194
>>>>>>> MiguelNueva

state 172

    (69) assignment -> ID ASSGN meteVar exp . generaCuad SEMICOLON
    (96) generaCuad -> .

    SEMICOLON       reduce using rule 96 (generaCuad -> .)

    generaCuad                     shift and go to state 193

state 173

    (51) llamadaAFunct2 -> exp . llamadaAFunct3
    (52) llamadaAFunct3 -> . COMMA llamadaAFunct2
    (53) llamadaAFunct3 -> . empty
    (117) empty -> .

<<<<<<< HEAD
    COMMA           shift and go to state 195
    RIGHTPAR        reduce using rule 117 (empty -> .)
=======
    SEMICOLON       shift and go to state 195
>>>>>>> MiguelNueva

    llamadaAFunct3                 shift and go to state 194
    empty                          shift and go to state 196

state 174

    (46) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 . cuadParam gosubCuad RIGHTPAR
    (48) cuadParam -> .

<<<<<<< HEAD
    RIGHTPAR        reduce using rule 48 (cuadParam -> .)
=======
    QUOTE           shift and go to state 196
>>>>>>> MiguelNueva

    cuadParam                      shift and go to state 197

state 175

    (54) llamadaAFunct2 -> empty .
    (99) exp -> empty .
    (60) number -> empty .

  ! reduce/reduce conflict for RIGHTPAR resolved using rule 54 (llamadaAFunct2 -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 60 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 54 (llamadaAFunct2 -> empty .)
    RIGHTPAR        reduce using rule 54 (llamadaAFunct2 -> empty .)
    LESS            reduce using rule 60 (number -> empty .)
    GRTR            reduce using rule 60 (number -> empty .)
    EQ              reduce using rule 60 (number -> empty .)
    NOTEQ           reduce using rule 60 (number -> empty .)
    AND             reduce using rule 60 (number -> empty .)
    OR              reduce using rule 60 (number -> empty .)
    SUM             reduce using rule 60 (number -> empty .)
    MINUS           reduce using rule 60 (number -> empty .)
    MULTP           reduce using rule 60 (number -> empty .)
    DIVIDE          reduce using rule 60 (number -> empty .)
    COMMA           reduce using rule 60 (number -> empty .)

  ! COMMA           [ reduce using rule 99 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 99 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 60 (number -> empty .) ]


state 176

    (56) declareRecursivoLocal -> type ID altaVarLocal . assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (57) assignmentDecl -> . ASSGN exp
    (61) assignmentDecl -> . empty
    (117) empty -> .

<<<<<<< HEAD
    ASSGN           shift and go to state 36
    LEFTBRACK       reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
=======
    SEMICOLON       shift and go to state 197
>>>>>>> MiguelNueva

    assignmentDecl                 shift and go to state 198
    empty                          shift and go to state 38

state 177

    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR . gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (74) gotoFCuad -> .

    LEFTKEY         reduce using rule 74 (gotoFCuad -> .)

<<<<<<< HEAD
    gotoFCuad                      shift and go to state 199
=======
    generaCuad                     shift and go to state 198
>>>>>>> MiguelNueva

state 178

<<<<<<< HEAD
    (79) conditional2 -> exp conditional2 .
=======
    (86) exp -> ID . meteExp exp2
    (44) llamadaAFunct -> ID . LEFTPAR llamadaAFunct2 RIGHTPAR
    (90) meteExp -> .

    LEFTPAR         shift and go to state 122
    LESS            reduce using rule 90 (meteExp -> .)
    GRTR            reduce using rule 90 (meteExp -> .)
    EQ              reduce using rule 90 (meteExp -> .)
    NOTEQ           reduce using rule 90 (meteExp -> .)
    AND             reduce using rule 90 (meteExp -> .)
    OR              reduce using rule 90 (meteExp -> .)
    SUM             reduce using rule 90 (meteExp -> .)
    MINUS           reduce using rule 90 (meteExp -> .)
    MULTP           reduce using rule 90 (meteExp -> .)
    DIVIDE          reduce using rule 90 (meteExp -> .)
    SEMICOLON       reduce using rule 90 (meteExp -> .)

    meteExp                        shift and go to state 69

state 179
>>>>>>> MiguelNueva

    RIGHTPAR        reduce using rule 79 (conditional2 -> exp conditional2 .)


state 184

    (92) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 . generaCuad
    (96) generaCuad -> .

    LEFTBRACK       reduce using rule 96 (generaCuad -> .)
    COMMA           reduce using rule 96 (generaCuad -> .)
    SEMICOLON       reduce using rule 96 (generaCuad -> .)
    RIGHTBRACK      reduce using rule 96 (generaCuad -> .)
    RIGHTPAR        reduce using rule 96 (generaCuad -> .)
    ID              reduce using rule 96 (generaCuad -> .)
    LEFTPAR         reduce using rule 96 (generaCuad -> .)
    INTEGER         reduce using rule 96 (generaCuad -> .)
    FLOAT           reduce using rule 96 (generaCuad -> .)
    LESS            reduce using rule 96 (generaCuad -> .)
    GRTR            reduce using rule 96 (generaCuad -> .)
    EQ              reduce using rule 96 (generaCuad -> .)
    NOTEQ           reduce using rule 96 (generaCuad -> .)
    AND             reduce using rule 96 (generaCuad -> .)
    OR              reduce using rule 96 (generaCuad -> .)
    SUM             reduce using rule 96 (generaCuad -> .)
    MINUS           reduce using rule 96 (generaCuad -> .)
    MULTP           reduce using rule 96 (generaCuad -> .)
    DIVIDE          reduce using rule 96 (generaCuad -> .)

    generaCuad                     shift and go to state 200

state 180

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est . functReturn RIGHTKEY
    (14) functReturn -> . RETURN NUMBER generaRet SEMICOLON
    (15) functReturn -> . RETURN ID generaRet SEMICOLON
    (17) functReturn -> . empty
    (117) empty -> .

<<<<<<< HEAD
    RETURN          shift and go to state 201
    RIGHTKEY        reduce using rule 117 (empty -> .)
=======
    IF              reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    DECLARE         reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    READ            reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    WRITE           reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    ID              reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    WHILE           reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    DO              reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    RIGHTKEY        reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
    RETURN          reduce using rule 44 (llamadaAFunct -> ID LEFTPAR llamadaAFunct2 RIGHTPAR .)
>>>>>>> MiguelNueva

    functReturn                    shift and go to state 202
    empty                          shift and go to state 203

state 181

    (20) funct3 -> COMMA type . ID altaVarLocal funct3

    ID              shift and go to state 204


state 182

    (84) do-while -> DO meteSalto LEFTKEY est RIGHTKEY . WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

<<<<<<< HEAD
    WHILE           shift and go to state 205
=======
    ID              shift and go to state 199
>>>>>>> MiguelNueva


state 183

    (116) input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .

    IF              reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    READ            reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    ID              reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    DO              reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 116 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)


state 184

    (87) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad . LEFTKEY est RIGHTKEY llenaCuadF

<<<<<<< HEAD
    LEFTKEY         shift and go to state 206

=======
    ASSGN           shift and go to state 36
    LEFTBRACK       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    assignmentDecl                 shift and go to state 200
    empty                          shift and go to state 38
>>>>>>> MiguelNueva

state 185

    (112) output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .

    IF              reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    READ            reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    ID              reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    DO              reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 112 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)

<<<<<<< HEAD
=======
    gotoFCuad                      shift and go to state 201
>>>>>>> MiguelNueva

state 186

    (114) output2 -> QUOTE ID QUOTE . output2
    (113) output2 -> . ID output2
    (114) output2 -> . QUOTE ID QUOTE output2
    (115) output2 -> . empty
    (117) empty -> .

    ID              shift and go to state 153
    QUOTE           shift and go to state 152
    RIGHTPAR        reduce using rule 117 (empty -> .)

    output2                        shift and go to state 207
    empty                          shift and go to state 154

state 187

<<<<<<< HEAD
    (70) assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .

    IF              reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    DECLARE         reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    READ            reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    WRITE           reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    ID              reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    WHILE           reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    DO              reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    RETURN          reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    RIGHTKEY        reduce using rule 70 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
=======
    (87) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 . generaCuad
    (91) generaCuad -> .

    LEFTBRACK       reduce using rule 91 (generaCuad -> .)
    COMMA           reduce using rule 91 (generaCuad -> .)
    SEMICOLON       reduce using rule 91 (generaCuad -> .)
    RIGHTBRACK      reduce using rule 91 (generaCuad -> .)
    RIGHTPAR        reduce using rule 91 (generaCuad -> .)
    ID              reduce using rule 91 (generaCuad -> .)
    LEFTPAR         reduce using rule 91 (generaCuad -> .)
    INTEGER         reduce using rule 91 (generaCuad -> .)
    FLOAT           reduce using rule 91 (generaCuad -> .)
    LESS            reduce using rule 91 (generaCuad -> .)
    GRTR            reduce using rule 91 (generaCuad -> .)
    EQ              reduce using rule 91 (generaCuad -> .)
    NOTEQ           reduce using rule 91 (generaCuad -> .)
    AND             reduce using rule 91 (generaCuad -> .)
    OR              reduce using rule 91 (generaCuad -> .)
    SUM             reduce using rule 91 (generaCuad -> .)
    MINUS           reduce using rule 91 (generaCuad -> .)
    MULTP           reduce using rule 91 (generaCuad -> .)
    DIVIDE          reduce using rule 91 (generaCuad -> .)
>>>>>>> MiguelNueva

    generaCuad                     shift and go to state 202

state 188

<<<<<<< HEAD
    (69) assignment -> ID ASSGN meteVar exp generaCuad . SEMICOLON

    SEMICOLON       shift and go to state 208
=======
    (13) functReturn -> RETURN . NUMBER SEMICOLON
    (14) functReturn -> RETURN . ID SEMICOLON

    NUMBER          shift and go to state 203
    ID              shift and go to state 204
>>>>>>> MiguelNueva


state 189

<<<<<<< HEAD
    (51) llamadaAFunct2 -> exp llamadaAFunct3 .

    RIGHTPAR        reduce using rule 51 (llamadaAFunct2 -> exp llamadaAFunct3 .)
=======
    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY est functReturn . RIGHTKEY

    RIGHTKEY        shift and go to state 205
>>>>>>> MiguelNueva


state 190

<<<<<<< HEAD
    (52) llamadaAFunct3 -> COMMA . llamadaAFunct2
    (51) llamadaAFunct2 -> . exp llamadaAFunct3
    (54) llamadaAFunct2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
    RIGHTPAR        reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

    llamadaAFunct2                 shift and go to state 209
    number                         shift and go to state 41
    exp                            shift and go to state 178
    empty                          shift and go to state 180
=======
    (15) functReturn -> empty .

    RIGHTKEY        reduce using rule 15 (functReturn -> empty .)

>>>>>>> MiguelNueva

state 191

<<<<<<< HEAD
    (53) llamadaAFunct3 -> empty .

    RIGHTPAR        reduce using rule 53 (llamadaAFunct3 -> empty .)
=======
    (18) funct3 -> COMMA type . ID altaVarLocal funct3

    ID              shift and go to state 206
>>>>>>> MiguelNueva


state 192

    (46) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam . gosubCuad RIGHTPAR
    (49) gosubCuad -> .

<<<<<<< HEAD
    RIGHTPAR        reduce using rule 49 (gosubCuad -> .)
=======
    WHILE           shift and go to state 207
>>>>>>> MiguelNueva

    gosubCuad                      shift and go to state 210

state 193

    (56) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl . declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (62) declare2Local -> . array
    (66) declare2Local -> . empty
    (27) array -> . LEFTBRACK exp RIGHTBRACK array
    (28) array -> . empty
    (117) empty -> .

<<<<<<< HEAD
    LEFTBRACK       shift and go to state 48
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
=======
    IF              reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    READ            reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    ID              reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    DO              reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 111 (input -> READ LEFTPAR ID RIGHTPAR SEMICOLON .)
>>>>>>> MiguelNueva

    declare2Local                  shift and go to state 211
    array                          shift and go to state 212
    empty                          shift and go to state 213

state 194

    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad . LEFTKEY est RIGHTKEY gotoCuad conditionalElse

<<<<<<< HEAD
    LEFTKEY         shift and go to state 214
=======
    LEFTKEY         shift and go to state 208
>>>>>>> MiguelNueva


state 195

    (92) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .

    LEFTBRACK       reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    COMMA           reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    SEMICOLON       reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    RIGHTBRACK      reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    RIGHTPAR        reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    ID              reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    LEFTPAR         reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    INTEGER         reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    FLOAT           reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    LESS            reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    GRTR            reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    EQ              reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    NOTEQ           reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    AND             reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    OR              reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    SUM             reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    MINUS           reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    MULTP           reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    DIVIDE          reduce using rule 92 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)


state 196

    (14) functReturn -> RETURN . NUMBER generaRet SEMICOLON
    (15) functReturn -> RETURN . ID generaRet SEMICOLON

<<<<<<< HEAD
    NUMBER          shift and go to state 215
    ID              shift and go to state 216

=======
    ID              shift and go to state 153
    QUOTE           shift and go to state 152
    RIGHTPAR        reduce using rule 112 (empty -> .)

    output2                        shift and go to state 209
    empty                          shift and go to state 154
>>>>>>> MiguelNueva

state 197

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn . RIGHTKEY

    RIGHTKEY        shift and go to state 217


state 198

    (17) functReturn -> empty .

<<<<<<< HEAD
    RIGHTKEY        reduce using rule 17 (functReturn -> empty .)
=======
    SEMICOLON       shift and go to state 210
>>>>>>> MiguelNueva


state 199

    (20) funct3 -> COMMA type ID . altaVarLocal funct3
    (68) altaVarLocal -> .

    COMMA           reduce using rule 68 (altaVarLocal -> .)
    RIGHTPAR        reduce using rule 68 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 218

state 200

    (84) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE . LEFTPAR while2 RIGHTPAR gotoVCuad

<<<<<<< HEAD
    LEFTPAR         shift and go to state 219

=======
    LEFTBRACK       shift and go to state 48
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    declare2Local                  shift and go to state 211
    array                          shift and go to state 212
    empty                          shift and go to state 213
>>>>>>> MiguelNueva

state 201

<<<<<<< HEAD
    (87) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY . est RIGHTKEY llenaCuadF
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
=======
    (68) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad . LEFTKEY est RIGHTKEY gotoCuad conditionalElse

    LEFTKEY         shift and go to state 214
>>>>>>> MiguelNueva

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 220
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    declareLocal                   shift and go to state 94
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    cycles                         shift and go to state 90

state 202

<<<<<<< HEAD
    (114) output2 -> QUOTE ID QUOTE output2 .

    RIGHTPAR        reduce using rule 114 (output2 -> QUOTE ID QUOTE output2 .)
=======
    (87) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .

    LEFTBRACK       reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    COMMA           reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    SEMICOLON       reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    RIGHTBRACK      reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    RIGHTPAR        reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    ID              reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    LEFTPAR         reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    INTEGER         reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    FLOAT           reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    LESS            reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    GRTR            reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    EQ              reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    NOTEQ           reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    AND             reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    OR              reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    SUM             reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    MINUS           reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    MULTP           reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    DIVIDE          reduce using rule 87 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
>>>>>>> MiguelNueva


state 203

<<<<<<< HEAD
    (69) assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .

    IF              reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    DECLARE         reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    READ            reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    WRITE           reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    ID              reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    WHILE           reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    DO              reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    RETURN          reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    RIGHTKEY        reduce using rule 69 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
=======
    (13) functReturn -> RETURN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 215
>>>>>>> MiguelNueva


state 204

<<<<<<< HEAD
    (52) llamadaAFunct3 -> COMMA llamadaAFunct2 .

    RIGHTPAR        reduce using rule 52 (llamadaAFunct3 -> COMMA llamadaAFunct2 .)
=======
    (14) functReturn -> RETURN ID . SEMICOLON

    SEMICOLON       shift and go to state 216
>>>>>>> MiguelNueva


state 205

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY est functReturn RIGHTKEY .

    FUNCTION        reduce using rule 12 (funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY est functReturn RIGHTKEY .)
    MAIN            reduce using rule 12 (funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY est functReturn RIGHTKEY .)


state 206

    (18) funct3 -> COMMA type ID . altaVarLocal funct3
    (63) altaVarLocal -> .

    COMMA           reduce using rule 63 (altaVarLocal -> .)
    RIGHTPAR        reduce using rule 63 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 217

state 207

    (46) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad . RIGHTPAR

<<<<<<< HEAD
    RIGHTPAR        shift and go to state 221
=======
    LEFTPAR         shift and go to state 218
>>>>>>> MiguelNueva


state 208

    (56) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local . declare3Local SEMICOLON declareRecursivoLocal
    (63) declare3Local -> . COMMA ID altaVarLocal assignmentDecl declare3Local
    (67) declare3Local -> . empty
    (117) empty -> .

<<<<<<< HEAD
    COMMA           shift and go to state 222
    SEMICOLON       reduce using rule 117 (empty -> .)

    empty                          shift and go to state 223
    declare3Local                  shift and go to state 224
=======
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 219
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    declareLocal                   shift and go to state 94
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    cycles                         shift and go to state 90
>>>>>>> MiguelNueva

state 209

    (62) declare2Local -> array .

    COMMA           reduce using rule 62 (declare2Local -> array .)
    SEMICOLON       reduce using rule 62 (declare2Local -> array .)


state 210

    (66) declare2Local -> empty .
    (28) array -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 28 (array -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 28 (array -> empty .)
    COMMA           reduce using rule 28 (array -> empty .)
    SEMICOLON       reduce using rule 28 (array -> empty .)

  ! COMMA           [ reduce using rule 66 (declare2Local -> empty .) ]
  ! SEMICOLON       [ reduce using rule 66 (declare2Local -> empty .) ]

<<<<<<< HEAD
=======
state 211
>>>>>>> MiguelNueva

state 214

<<<<<<< HEAD
    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY . est RIGHTKEY gotoCuad conditionalElse
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 225
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    empty                          shift and go to state 92
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
=======
    COMMA           shift and go to state 220
    SEMICOLON       reduce using rule 112 (empty -> .)

    empty                          shift and go to state 221
    declare3Local                  shift and go to state 222
>>>>>>> MiguelNueva

state 212

    (14) functReturn -> RETURN NUMBER . generaRet SEMICOLON
    (16) generaRet -> .

    SEMICOLON       reduce using rule 16 (generaRet -> .)

    generaRet                      shift and go to state 226

state 213

    (15) functReturn -> RETURN ID . generaRet SEMICOLON
    (16) generaRet -> .

    SEMICOLON       reduce using rule 16 (generaRet -> .)

    generaRet                      shift and go to state 227

state 214

    (12) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY .

    FUNCTION        reduce using rule 12 (funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY .)
    MAIN            reduce using rule 12 (funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn RIGHTKEY .)

<<<<<<< HEAD
=======
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 223
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    empty                          shift and go to state 92
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
>>>>>>> MiguelNueva

state 215

<<<<<<< HEAD
    (20) funct3 -> COMMA type ID altaVarLocal . funct3
    (20) funct3 -> . COMMA type ID altaVarLocal funct3
    (22) funct3 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 165
    RIGHTPAR        reduce using rule 117 (empty -> .)
=======
    (13) functReturn -> RETURN NUMBER SEMICOLON .

    RIGHTKEY        reduce using rule 13 (functReturn -> RETURN NUMBER SEMICOLON .)
>>>>>>> MiguelNueva

    funct3                         shift and go to state 228
    empty                          shift and go to state 166

state 216

    (14) functReturn -> RETURN ID SEMICOLON .

    RIGHTKEY        reduce using rule 14 (functReturn -> RETURN ID SEMICOLON .)


state 217

    (18) funct3 -> COMMA type ID altaVarLocal . funct3
    (18) funct3 -> . COMMA type ID altaVarLocal funct3
    (20) funct3 -> . empty
    (112) empty -> .

    COMMA           shift and go to state 167
    RIGHTPAR        reduce using rule 112 (empty -> .)

    funct3                         shift and go to state 224
    empty                          shift and go to state 168

state 218

    (84) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR . while2 RIGHTPAR gotoVCuad
    (89) while2 -> . exp while2
    (90) while2 -> . empty
    (91) exp -> . ID meteExp exp2
    (92) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (97) exp -> . number exp2
    (99) exp -> . empty
    (117) empty -> .
    (58) number -> . INTEGER meteNum
    (59) number -> . FLOAT meteNum
    (60) number -> . empty

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LEFTPAR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    ID              shift and go to state 46
    LEFTPAR         shift and go to state 43
<<<<<<< HEAD
    RIGHTPAR        reduce using rule 117 (empty -> .)
    LESS            reduce using rule 117 (empty -> .)
    GRTR            reduce using rule 117 (empty -> .)
    EQ              reduce using rule 117 (empty -> .)
    NOTEQ           reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    SUM             reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    MULTP           reduce using rule 117 (empty -> .)
    DIVIDE          reduce using rule 117 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 117 (empty -> .) ]
  ! INTEGER         [ reduce using rule 117 (empty -> .) ]
  ! FLOAT           [ reduce using rule 117 (empty -> .) ]

    number                         shift and go to state 41
    while2                         shift and go to state 229
=======
    RIGHTPAR        reduce using rule 112 (empty -> .)
    LESS            reduce using rule 112 (empty -> .)
    GRTR            reduce using rule 112 (empty -> .)
    EQ              reduce using rule 112 (empty -> .)
    NOTEQ           reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SUM             reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    MULTP           reduce using rule 112 (empty -> .)
    DIVIDE          reduce using rule 112 (empty -> .)
    INTEGER         shift and go to state 45
    FLOAT           shift and go to state 42

  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! LEFTPAR         [ reduce using rule 112 (empty -> .) ]
  ! INTEGER         [ reduce using rule 112 (empty -> .) ]
  ! FLOAT           [ reduce using rule 112 (empty -> .) ]

    number                         shift and go to state 41
    while2                         shift and go to state 225
>>>>>>> MiguelNueva
    exp                            shift and go to state 149
    empty                          shift and go to state 150

state 219

    (87) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est . RIGHTKEY llenaCuadF

    RIGHTKEY        shift and go to state 230


state 220

    (46) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .

    SEMICOLON       reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    IF              reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    DECLARE         reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    READ            reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    WRITE           reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    ID              reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    WHILE           reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    DO              reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    RIGHTKEY        reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)
    RETURN          reduce using rule 46 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR .)


state 221

    (63) declare3Local -> COMMA . ID altaVarLocal assignmentDecl declare3Local

    ID              shift and go to state 231


state 222

    (67) declare3Local -> empty .

    SEMICOLON       reduce using rule 67 (declare3Local -> empty .)


state 223

    (56) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local . SEMICOLON declareRecursivoLocal

    SEMICOLON       shift and go to state 232


state 224

    (18) funct3 -> COMMA type ID altaVarLocal funct3 .

    RIGHTPAR        reduce using rule 18 (funct3 -> COMMA type ID altaVarLocal funct3 .)


state 225

    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est . RIGHTKEY gotoCuad conditionalElse

    RIGHTKEY        shift and go to state 233


state 226

    (14) functReturn -> RETURN NUMBER generaRet . SEMICOLON

    SEMICOLON       shift and go to state 234


state 227

    (15) functReturn -> RETURN ID generaRet . SEMICOLON

    SEMICOLON       shift and go to state 235


state 228

<<<<<<< HEAD
    (20) funct3 -> COMMA type ID altaVarLocal funct3 .

    RIGHTPAR        reduce using rule 20 (funct3 -> COMMA type ID altaVarLocal funct3 .)

=======
    (51) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON . declareRecursivoLocal
    (51) declareRecursivoLocal -> . type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (59) declareRecursivoLocal -> . empty
    (27) type -> . type2
    (112) empty -> .
    (28) type2 -> . INT
    (29) type2 -> . FLOAT
    (30) type2 -> . STRING
    (31) type2 -> . BOOL
    (32) type2 -> . VOID

    IF              reduce using rule 112 (empty -> .)
    DECLARE         reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    DO              reduce using rule 112 (empty -> .)
    RIGHTKEY        reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivoLocal          shift and go to state 233
    type2                          shift and go to state 21
    type                           shift and go to state 124
    empty                          shift and go to state 125
>>>>>>> MiguelNueva

state 229

    (84) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 . RIGHTPAR gotoVCuad

    RIGHTPAR        shift and go to state 236


state 230

    (87) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY . llenaCuadF
    (88) llenaCuadF -> .

    IF              reduce using rule 88 (llenaCuadF -> .)
    DECLARE         reduce using rule 88 (llenaCuadF -> .)
    READ            reduce using rule 88 (llenaCuadF -> .)
    WRITE           reduce using rule 88 (llenaCuadF -> .)
    ID              reduce using rule 88 (llenaCuadF -> .)
    WHILE           reduce using rule 88 (llenaCuadF -> .)
    DO              reduce using rule 88 (llenaCuadF -> .)
    RIGHTKEY        reduce using rule 88 (llenaCuadF -> .)
    RETURN          reduce using rule 88 (llenaCuadF -> .)

    llenaCuadF                     shift and go to state 237

state 231

    (63) declare3Local -> COMMA ID . altaVarLocal assignmentDecl declare3Local
    (68) altaVarLocal -> .

    ASSGN           reduce using rule 68 (altaVarLocal -> .)
    COMMA           reduce using rule 68 (altaVarLocal -> .)
    SEMICOLON       reduce using rule 68 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 238

state 232

<<<<<<< HEAD
    (56) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON . declareRecursivoLocal
    (56) declareRecursivoLocal -> . type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (64) declareRecursivoLocal -> . empty
    (29) type -> . type2
    (117) empty -> .
    (30) type2 -> . INT
    (31) type2 -> . FLOAT
    (32) type2 -> . STRING
    (33) type2 -> . BOOL
    (34) type2 -> . VOID

    IF              reduce using rule 117 (empty -> .)
    DECLARE         reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WRITE           reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    DO              reduce using rule 117 (empty -> .)
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivoLocal          shift and go to state 239
    type2                          shift and go to state 21
    type                           shift and go to state 124
    empty                          shift and go to state 125
=======
    (58) declare3Local -> COMMA ID altaVarLocal . assignmentDecl declare3Local
    (52) assignmentDecl -> . ASSGN exp
    (56) assignmentDecl -> . empty
    (112) empty -> .

    ASSGN           shift and go to state 36
    COMMA           reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)

    empty                          shift and go to state 38
    assignmentDecl                 shift and go to state 236
>>>>>>> MiguelNueva

state 233

    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY . gotoCuad conditionalElse
    (75) gotoCuad -> .

    ELSE            reduce using rule 75 (gotoCuad -> .)
    IF              reduce using rule 75 (gotoCuad -> .)
    DECLARE         reduce using rule 75 (gotoCuad -> .)
    READ            reduce using rule 75 (gotoCuad -> .)
    WRITE           reduce using rule 75 (gotoCuad -> .)
    ID              reduce using rule 75 (gotoCuad -> .)
    WHILE           reduce using rule 75 (gotoCuad -> .)
    DO              reduce using rule 75 (gotoCuad -> .)
    RIGHTKEY        reduce using rule 75 (gotoCuad -> .)
    RETURN          reduce using rule 75 (gotoCuad -> .)

    gotoCuad                       shift and go to state 240

state 234

    (14) functReturn -> RETURN NUMBER generaRet SEMICOLON .

    RIGHTKEY        reduce using rule 14 (functReturn -> RETURN NUMBER generaRet SEMICOLON .)


state 235

    (15) functReturn -> RETURN ID generaRet SEMICOLON .

    RIGHTKEY        reduce using rule 15 (functReturn -> RETURN ID generaRet SEMICOLON .)


state 236

    (84) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR . gotoVCuad
    (85) gotoVCuad -> .

<<<<<<< HEAD
    IF              reduce using rule 85 (gotoVCuad -> .)
    DECLARE         reduce using rule 85 (gotoVCuad -> .)
    READ            reduce using rule 85 (gotoVCuad -> .)
    WRITE           reduce using rule 85 (gotoVCuad -> .)
    ID              reduce using rule 85 (gotoVCuad -> .)
    WHILE           reduce using rule 85 (gotoVCuad -> .)
    DO              reduce using rule 85 (gotoVCuad -> .)
    RIGHTKEY        reduce using rule 85 (gotoVCuad -> .)
    RETURN          reduce using rule 85 (gotoVCuad -> .)

    gotoVCuad                      shift and go to state 241
=======
    COMMA           shift and go to state 220
    SEMICOLON       reduce using rule 112 (empty -> .)

    empty                          shift and go to state 221
    declare3Local                  shift and go to state 240
>>>>>>> MiguelNueva

state 237

    (87) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .

    IF              reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    DECLARE         reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    READ            reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    WRITE           reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    ID              reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    WHILE           reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    DO              reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    RIGHTKEY        reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    RETURN          reduce using rule 87 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)


state 238

    (63) declare3Local -> COMMA ID altaVarLocal . assignmentDecl declare3Local
    (57) assignmentDecl -> . ASSGN exp
    (61) assignmentDecl -> . empty
    (117) empty -> .

    ASSGN           shift and go to state 36
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

    empty                          shift and go to state 38
    assignmentDecl                 shift and go to state 242

state 239

    (56) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .

    IF              reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    DECLARE         reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    READ            reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    WRITE           reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    ID              reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    WHILE           reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    DO              reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    RIGHTKEY        reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    RETURN          reduce using rule 56 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)


state 240

    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad . conditionalElse
    (76) conditionalElse -> . ELSE LEFTKEY est RIGHTKEY llenaGoto
    (78) conditionalElse -> . empty
    (117) empty -> .

    ELSE            shift and go to state 245
    IF              reduce using rule 117 (empty -> .)
    DECLARE         reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    WRITE           reduce using rule 117 (empty -> .)
    ID              reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    DO              reduce using rule 117 (empty -> .)
    RIGHTKEY        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)

    conditionalElse                shift and go to state 243
    empty                          shift and go to state 244

state 241

    (84) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .

    IF              reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    DECLARE         reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    READ            reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    WRITE           reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    ID              reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    WHILE           reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    DO              reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    RIGHTKEY        reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    RETURN          reduce using rule 84 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)

<<<<<<< HEAD
=======
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 112 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 112 (empty -> .) ]
  ! DECLARE         [ reduce using rule 112 (empty -> .) ]
  ! READ            [ reduce using rule 112 (empty -> .) ]
  ! WRITE           [ reduce using rule 112 (empty -> .) ]
  ! ID              [ reduce using rule 112 (empty -> .) ]
  ! WHILE           [ reduce using rule 112 (empty -> .) ]
  ! DO              [ reduce using rule 112 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 242
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94
>>>>>>> MiguelNueva

state 242

    (63) declare3Local -> COMMA ID altaVarLocal assignmentDecl . declare3Local
    (63) declare3Local -> . COMMA ID altaVarLocal assignmentDecl declare3Local
    (67) declare3Local -> . empty
    (117) empty -> .

    COMMA           shift and go to state 222
    SEMICOLON       reduce using rule 117 (empty -> .)

    empty                          shift and go to state 223
    declare3Local                  shift and go to state 246

state 243

    (73) conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .

    IF              reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    DECLARE         reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    READ            reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    WRITE           reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    ID              reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    WHILE           reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    DO              reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    RIGHTKEY        reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)
    RETURN          reduce using rule 73 (conditional -> IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse .)


state 244

    (78) conditionalElse -> empty .

    IF              reduce using rule 78 (conditionalElse -> empty .)
    DECLARE         reduce using rule 78 (conditionalElse -> empty .)
    READ            reduce using rule 78 (conditionalElse -> empty .)
    WRITE           reduce using rule 78 (conditionalElse -> empty .)
    ID              reduce using rule 78 (conditionalElse -> empty .)
    WHILE           reduce using rule 78 (conditionalElse -> empty .)
    DO              reduce using rule 78 (conditionalElse -> empty .)
    RIGHTKEY        reduce using rule 78 (conditionalElse -> empty .)
    RETURN          reduce using rule 78 (conditionalElse -> empty .)


state 245

    (76) conditionalElse -> ELSE . LEFTKEY est RIGHTKEY llenaGoto

    LEFTKEY         shift and go to state 247


state 246

    (63) declare3Local -> COMMA ID altaVarLocal assignmentDecl declare3Local .

    SEMICOLON       reduce using rule 63 (declare3Local -> COMMA ID altaVarLocal assignmentDecl declare3Local .)


state 247

    (76) conditionalElse -> ELSE LEFTKEY . est RIGHTKEY llenaGoto
    (38) est -> . conditional est
    (39) est -> . declareLocal est
    (40) est -> . cycles est
    (41) est -> . input est
    (42) est -> . output est
    (43) est -> . assignment est
    (44) est -> . llamadaAFunct est
    (45) est -> . empty
    (73) conditional -> . IF LEFTPAR conditional2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY gotoCuad conditionalElse
    (55) declareLocal -> . DECLARE declareRecursivoLocal
    (65) declareLocal -> . empty
    (81) cycles -> . while
    (82) cycles -> . empty
    (83) cycles -> . do-while
    (116) input -> . READ LEFTPAR ID RIGHTPAR SEMICOLON
    (112) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (69) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (70) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (72) assignment -> . empty
    (46) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 cuadParam gosubCuad RIGHTPAR
    (50) llamadaAFunct -> . empty
    (117) empty -> .
    (87) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 89
    DECLARE         shift and go to state 88
    READ            shift and go to state 78
    WRITE           shift and go to state 86
    ID              shift and go to state 87
    RIGHTKEY        reduce using rule 117 (empty -> .)
    WHILE           shift and go to state 80
    DO              shift and go to state 77

  ! IF              [ reduce using rule 117 (empty -> .) ]
  ! DECLARE         [ reduce using rule 117 (empty -> .) ]
  ! READ            [ reduce using rule 117 (empty -> .) ]
  ! WRITE           [ reduce using rule 117 (empty -> .) ]
  ! ID              [ reduce using rule 117 (empty -> .) ]
  ! WHILE           [ reduce using rule 117 (empty -> .) ]
  ! DO              [ reduce using rule 117 (empty -> .) ]

    conditional                    shift and go to state 79
    do-while                       shift and go to state 81
    est                            shift and go to state 248
    llamadaAFunct                  shift and go to state 83
    input                          shift and go to state 84
    assignment                     shift and go to state 85
    cycles                         shift and go to state 90
    while                          shift and go to state 91
    empty                          shift and go to state 92
    output                         shift and go to state 93
    declareLocal                   shift and go to state 94

state 248

    (76) conditionalElse -> ELSE LEFTKEY est . RIGHTKEY llenaGoto

    RIGHTKEY        shift and go to state 249


state 249

    (76) conditionalElse -> ELSE LEFTKEY est RIGHTKEY . llenaGoto
    (77) llenaGoto -> .

    IF              reduce using rule 77 (llenaGoto -> .)
    DECLARE         reduce using rule 77 (llenaGoto -> .)
    READ            reduce using rule 77 (llenaGoto -> .)
    WRITE           reduce using rule 77 (llenaGoto -> .)
    ID              reduce using rule 77 (llenaGoto -> .)
    WHILE           reduce using rule 77 (llenaGoto -> .)
    DO              reduce using rule 77 (llenaGoto -> .)
    RIGHTKEY        reduce using rule 77 (llenaGoto -> .)
    RETURN          reduce using rule 77 (llenaGoto -> .)

    llenaGoto                      shift and go to state 250

state 250

    (76) conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .

    IF              reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    DECLARE         reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    READ            reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    WRITE           reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    ID              reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    WHILE           reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    DO              reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    RIGHTKEY        reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    RETURN          reduce using rule 76 (conditionalElse -> ELSE LEFTKEY est RIGHTKEY llenaGoto .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LESS in state 41 resolved as shift
WARNING: shift/reduce conflict for GRTR in state 41 resolved as shift
WARNING: shift/reduce conflict for EQ in state 41 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 41 resolved as shift
WARNING: shift/reduce conflict for AND in state 41 resolved as shift
WARNING: shift/reduce conflict for OR in state 41 resolved as shift
WARNING: shift/reduce conflict for SUM in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MULTP in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 53 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 53 resolved as shift
WARNING: shift/reduce conflict for READ in state 53 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for DO in state 53 resolved as shift
WARNING: shift/reduce conflict for LESS in state 69 resolved as shift
WARNING: shift/reduce conflict for GRTR in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for SUM in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MULTP in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 79 resolved as shift
WARNING: shift/reduce conflict for READ in state 79 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 79 resolved as shift
WARNING: shift/reduce conflict for ID in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 83 resolved as shift
WARNING: shift/reduce conflict for READ in state 83 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 84 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 84 resolved as shift
WARNING: shift/reduce conflict for READ in state 84 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 84 resolved as shift
WARNING: shift/reduce conflict for DO in state 84 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 85 resolved as shift
WARNING: shift/reduce conflict for READ in state 85 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for DO in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 90 resolved as shift
WARNING: shift/reduce conflict for READ in state 90 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for DO in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 93 resolved as shift
WARNING: shift/reduce conflict for READ in state 93 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 93 resolved as shift
WARNING: shift/reduce conflict for DO in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 94 resolved as shift
WARNING: shift/reduce conflict for READ in state 94 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 94 resolved as shift
WARNING: shift/reduce conflict for DO in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 95 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 95 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 95 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 96 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 96 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 97 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 97 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 98 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 98 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 99 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 99 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 99 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 99 resolved as shift
WARNING: shift/reduce conflict for ID in state 100 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 100 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 100 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 100 resolved as shift
WARNING: shift/reduce conflict for ID in state 101 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 101 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 101 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 101 resolved as shift
WARNING: shift/reduce conflict for ID in state 102 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 102 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 102 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 102 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 103 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 103 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 104 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 104 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 104 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 104 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 115 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 115 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 115 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 126 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 126 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 126 resolved as shift
<<<<<<< HEAD
=======
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 144 resolved as shift
WARNING: shift/reduce conflict for READ in state 144 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 144 resolved as shift
WARNING: shift/reduce conflict for DO in state 144 resolved as shift
>>>>>>> MiguelNueva
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 146 resolved as shift
WARNING: shift/reduce conflict for READ in state 146 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 146 resolved as shift
WARNING: shift/reduce conflict for DO in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 149 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 149 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 149 resolved as shift
<<<<<<< HEAD
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 160 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for LESS in state 161 resolved as shift
WARNING: shift/reduce conflict for GRTR in state 161 resolved as shift
WARNING: shift/reduce conflict for EQ in state 161 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 161 resolved as shift
WARNING: shift/reduce conflict for AND in state 161 resolved as shift
WARNING: shift/reduce conflict for OR in state 161 resolved as shift
WARNING: shift/reduce conflict for SUM in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MULTP in state 161 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 163 resolved as shift
WARNING: shift/reduce conflict for READ in state 163 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 163 resolved as shift
WARNING: shift/reduce conflict for DO in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 206 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 206 resolved as shift
WARNING: shift/reduce conflict for READ in state 206 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 206 resolved as shift
WARNING: shift/reduce conflict for ID in state 206 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 206 resolved as shift
WARNING: shift/reduce conflict for DO in state 206 resolved as shift
=======
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 162 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 162 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 162 resolved as shift
WARNING: shift/reduce conflict for LESS in state 163 resolved as shift
WARNING: shift/reduce conflict for GRTR in state 163 resolved as shift
WARNING: shift/reduce conflict for EQ in state 163 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 163 resolved as shift
WARNING: shift/reduce conflict for AND in state 163 resolved as shift
WARNING: shift/reduce conflict for OR in state 163 resolved as shift
WARNING: shift/reduce conflict for SUM in state 163 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 163 resolved as shift
WARNING: shift/reduce conflict for MULTP in state 163 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 208 resolved as shift
WARNING: shift/reduce conflict for READ in state 208 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 208 resolved as shift
WARNING: shift/reduce conflict for ID in state 208 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 208 resolved as shift
WARNING: shift/reduce conflict for DO in state 208 resolved as shift
>>>>>>> MiguelNueva
WARNING: shift/reduce conflict for IF in state 214 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 214 resolved as shift
WARNING: shift/reduce conflict for READ in state 214 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 214 resolved as shift
WARNING: shift/reduce conflict for DO in state 214 resolved as shift
<<<<<<< HEAD
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 219 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 219 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 219 resolved as shift
WARNING: shift/reduce conflict for IF in state 247 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 247 resolved as shift
WARNING: shift/reduce conflict for READ in state 247 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 247 resolved as shift
WARNING: shift/reduce conflict for ID in state 247 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 247 resolved as shift
WARNING: shift/reduce conflict for DO in state 247 resolved as shift
=======
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for LEFTPAR in state 218 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 218 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 218 resolved as shift
WARNING: shift/reduce conflict for IF in state 241 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 241 resolved as shift
WARNING: shift/reduce conflict for READ in state 241 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 241 resolved as shift
WARNING: shift/reduce conflict for ID in state 241 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 241 resolved as shift
WARNING: shift/reduce conflict for DO in state 241 resolved as shift
>>>>>>> MiguelNueva
WARNING: reduce/reduce conflict in state 10 resolved using rule (program2 -> empty)
WARNING: rejected rule (declare -> empty) in state 10
WARNING: reduce/reduce conflict in state 47 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 47
WARNING: reduce/reduce conflict in state 92 resolved using rule (est -> empty)
WARNING: rejected rule (declareLocal -> empty) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (declareLocal -> empty)
WARNING: rejected rule (cycles -> empty) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (est -> empty)
WARNING: rejected rule (cycles -> empty) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (declareLocal -> empty)
WARNING: rejected rule (assignment -> empty) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (est -> empty)
WARNING: rejected rule (assignment -> empty) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (declareLocal -> empty) in state 92
WARNING: reduce/reduce conflict in state 92 resolved using rule (est -> empty)
WARNING: rejected rule (llamadaAFunct -> empty) in state 92
WARNING: reduce/reduce conflict in state 150 resolved using rule (while2 -> empty)
WARNING: rejected rule (exp -> empty) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 150
WARNING: reduce/reduce conflict in state 150 resolved using rule (number -> empty)
WARNING: rejected rule (while2 -> empty) in state 150
<<<<<<< HEAD
WARNING: reduce/reduce conflict in state 158 resolved using rule (conditional2 -> empty)
WARNING: rejected rule (exp -> empty) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (number -> empty)
WARNING: rejected rule (conditional2 -> empty) in state 158
WARNING: reduce/reduce conflict in state 175 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (exp -> empty) in state 175
WARNING: reduce/reduce conflict in state 175 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (number -> empty) in state 175
WARNING: reduce/reduce conflict in state 180 resolved using rule (llamadaAFunct2 -> empty)
WARNING: rejected rule (exp -> empty) in state 180
WARNING: reduce/reduce conflict in state 180 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 180
WARNING: reduce/reduce conflict in state 180 resolved using rule (llamadaAFunct2 -> empty)
WARNING: rejected rule (number -> empty) in state 180
=======
WARNING: reduce/reduce conflict in state 160 resolved using rule (conditional2 -> empty)
WARNING: rejected rule (exp -> empty) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 160
WARNING: reduce/reduce conflict in state 160 resolved using rule (number -> empty)
WARNING: rejected rule (conditional2 -> empty) in state 160
WARNING: reduce/reduce conflict in state 179 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (exp -> empty) in state 179
WARNING: reduce/reduce conflict in state 179 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (number -> empty) in state 179
>>>>>>> MiguelNueva
WARNING: reduce/reduce conflict in state 213 resolved using rule (array -> empty)
WARNING: rejected rule (declare2Local -> empty) in state 213
WARNING: Rule (exp -> empty) is never reduced
WARNING: Rule (declareLocal -> empty) is never reduced
WARNING: Rule (cycles -> empty) is never reduced
WARNING: Rule (assignment -> empty) is never reduced
WARNING: Rule (while2 -> empty) is never reduced
WARNING: Rule (conditional2 -> empty) is never reduced
WARNING: Rule (declare2Local -> empty) is never reduced
