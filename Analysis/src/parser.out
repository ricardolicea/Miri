Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACTINCR
    ACTDECR
    DOT
    ACTINCRVALOR
    ACTDECRVALOR
    LESSEQ
    COLON
    GRTREQ
    CYCLE
    FOR
    SPACE
    newline
    FLOATNUMB
    TYPE

Grammar

Rule 0     S' -> program
Rule 1     program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON
Rule 2     goToMainQuad -> <empty>
Rule 3     altaPrograma -> <empty>
Rule 4     program2 -> declare program3
Rule 5     program2 -> empty
Rule 6     declare -> DECLARE declareRecursivo
Rule 7     declare -> empty
Rule 8     declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
Rule 9     declare2 -> array
Rule 10    dim1 -> <empty>
Rule 11    array -> dim1 LEFTBRACK exp getTam RIGHTBRACK array
Rule 12    getTam -> <empty>
Rule 13    declare3 -> COMMA ID altaVarGlobal declare3
Rule 14    program3 -> funct program3
Rule 15    funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY
Rule 16    endProc -> <empty>
Rule 17    guardaSalto -> <empty>
Rule 18    endproc -> <empty>
Rule 19    functReturn -> RETURN NUMBER generaRet SEMICOLON
Rule 20    functReturn -> RETURN ID generaRet SEMICOLON
Rule 21    generaRet -> <empty>
Rule 22    functReturn -> empty
Rule 23    altaModulo -> <empty>
Rule 24    funct2 -> type ID altaVarLocal funct3
Rule 25    funct3 -> COMMA type ID altaVarLocal funct3
Rule 26    funct2 -> empty
Rule 27    funct3 -> empty
Rule 28    program3 -> empty
Rule 29    altaVarGlobal -> <empty>
Rule 30    declareRecursivo -> empty
Rule 31    declare3 -> empty
Rule 32    array -> empty
Rule 33    type -> type2
Rule 34    type2 -> INT
Rule 35    type2 -> FLOAT
Rule 36    type2 -> STRING
Rule 37    type2 -> BOOL
Rule 38    type2 -> VOID
Rule 39    cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY
Rule 40    llenaMain -> <empty>
Rule 41    altaModuloMain -> <empty>
Rule 42    est -> conditional est
Rule 43    est -> circulo est
Rule 44    est -> cuadro est
Rule 45    est -> triangulo est
Rule 46    est -> linea est
Rule 47    est -> declareLocal est
Rule 48    est -> cycles est
Rule 49    est -> input est
Rule 50    est -> output est
Rule 51    est -> assignment est
Rule 52    est -> llamadaAFunct est
Rule 53    est -> empty
Rule 54    llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
Rule 55    cuadERA -> <empty>
Rule 56    cuadParam -> <empty>
Rule 57    gosubCuad -> <empty>
Rule 58    llamadaAFunct -> empty
Rule 59    llamadaAFunct2 -> exp cuadParam llamadaAFunct3
Rule 60    llamadaAFunct3 -> COMMA llamadaAFunct2
Rule 61    llamadaAFunct3 -> empty
Rule 62    llamadaAFunct2 -> empty
Rule 63    declareLocal -> DECLARE declareRecursivoLocal
Rule 64    declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
Rule 65    assignmentDecl -> ASSGN meteAssign exp generaCuad
Rule 66    meteAssign -> <empty>
Rule 67    number -> INTEGER meteNum
Rule 68    number -> FLOAT meteNum
Rule 69    number -> empty
Rule 70    assignmentDecl -> empty
Rule 71    declare2Local -> array
Rule 72    declare3Local -> COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local
Rule 73    declareRecursivoLocal -> empty
Rule 74    declareLocal -> empty
Rule 75    declare2Local -> empty
Rule 76    declare3Local -> empty
Rule 77    altaVarLocal -> <empty>
Rule 78    assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON
Rule 79    assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON
Rule 80    generaCuadFunct -> <empty>
Rule 81    meteVar -> <empty>
Rule 82    assignment -> empty
Rule 83    conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
Rule 84    gotoFCuad -> <empty>
Rule 85    gotoCuad -> <empty>
Rule 86    conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto
Rule 87    llenaGoto -> <empty>
Rule 88    conditionalElse -> empty
Rule 89    conditional2 -> exp conditional2
Rule 90    conditional2 -> empty
Rule 91    cycles -> while
Rule 92    cycles -> empty
Rule 93    cycles -> do-while
Rule 94    do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
Rule 95    gotoVCuad -> <empty>
Rule 96    meteSalto -> <empty>
Rule 97    while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
Rule 98    llenaCuadF -> <empty>
Rule 99    while2 -> exp
Rule 100   while2 -> empty
Rule 101   exp -> ID meteExp exp2
Rule 102   exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
Rule 103   metePar -> <empty>
Rule 104   sacaPar -> <empty>
Rule 105   meteExp -> <empty>
Rule 106   generaCuad -> <empty>
Rule 107   exp -> number exp2
Rule 108   exp -> arreglo exp2
Rule 109   exp -> BOOL exp2
Rule 110   arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
Rule 111   arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK
Rule 112   arreglo2 -> empty
Rule 113   cuadVer -> <empty>
Rule 114   cuadVer2 -> <empty>
Rule 115   arreglo -> empty
Rule 116   meteNum -> <empty>
Rule 117   exp -> empty
Rule 118   exp2 -> LESS meteOper exp
Rule 119   exp2 -> GRTR meteOper exp
Rule 120   exp2 -> EQ meteOper exp
Rule 121   exp2 -> NOTEQ meteOper exp
Rule 122   exp2 -> AND meteOper exp
Rule 123   exp2 -> OR meteOper exp
Rule 124   exp2 -> SUM meteOper exp
Rule 125   meteOper -> <empty>
Rule 126   exp2 -> MINUS meteOper exp
Rule 127   exp2 -> MULTP meteOper exp
Rule 128   exp2 -> DIVIDE meteOper exp
Rule 129   exp2 -> empty
Rule 130   output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
Rule 131   generaWriteCuad -> <empty>
Rule 132   meteID -> <empty>
Rule 133   output2 -> ID meteID generaWriteCuad output2
Rule 134   output2 -> QUOTE ID QUOTE output2
Rule 135   output2 -> empty
Rule 136   input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
Rule 137   generaReadCuad -> <empty>
Rule 138   empty -> <empty>
Rule 139   circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
Rule 140   circulo -> empty
Rule 141   generaCirculoCuad -> <empty>
Rule 142   cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
Rule 143   cuadro -> empty
Rule 144   generaCuadradoCuad -> <empty>
Rule 145   triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
Rule 146   triangulo -> empty
Rule 147   generaTrianguloCuad -> <empty>
Rule 148   linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
Rule 149   linea -> empty
Rule 150   generaCuadLinea -> <empty>

Terminals, with rules where they appear

ACTDECR              : 
ACTDECRVALOR         : 
ACTINCR              : 
ACTINCRVALOR         : 
AND                  : 122
ASSGN                : 65 78 79
BOOL                 : 37 109 139 142 145
CIRCLE               : 139
COLON                : 
COMMA                : 13 25 60 72 139 139 139 139 142 142 142 142 145 145 145 145 145 145 145 148 148 148 148 148
CYCLE                : 
DECLARE              : 6 63
DIVIDE               : 128
DO                   : 94
DOT                  : 
ELSE                 : 86
END                  : 1
EQ                   : 120
FLOAT                : 35 68
FLOATNUMB            : 
FOR                  : 
FUNCTION             : 15
GRTR                 : 119
GRTREQ               : 
ID                   : 1 8 13 15 20 24 25 54 64 72 78 79 101 110 133 134 136 139 142 145 148
IF                   : 83
INT                  : 34
INTEGER              : 67 139 139 139 142 142 142 145 145 145 145 145 145 148 148 148 148 148
LEFTBRACK            : 11 110 111
LEFTKEY              : 15 39 83 86 94 97
LEFTPAR              : 15 39 54 83 94 97 102 130 136 139 142 145 148
LESS                 : 118
LESSEQ               : 
LINE                 : 148
MAIN                 : 39
MINUS                : 126
MULTP                : 127
NOTEQ                : 121
NUMBER               : 19
OR                   : 123
PROGRAM              : 1
QUOTE                : 134 134
READ                 : 136
RETURN               : 19 20
RIGHTBRACK           : 11 110 111
RIGHTKEY             : 15 39 83 86 94 97
RIGHTPAR             : 15 39 54 83 94 97 102 130 136 139 142 145 148
SEMICOLON            : 1 1 8 19 20 64 78 79 130 136 139 142 145 148
SPACE                : 
SQUARE               : 142
STRING               : 36
SUM                  : 124
TRIANGLE             : 145
TYPE                 : 
VOID                 : 38
WHILE                : 94 97
WRITE                : 130
error                : 
newline              : 

Nonterminals, with rules where they appear

altaModulo           : 15
altaModuloMain       : 39
altaPrograma         : 1
altaVarGlobal        : 8 13
altaVarLocal         : 24 25 64 72
array                : 9 11 71
arreglo              : 108
arreglo2             : 110
assignment           : 51
assignmentDecl       : 8 64 72
circulo              : 43
conditional          : 42
conditional2         : 89
conditionalElse      : 83
cuadERA              : 54
cuadParam            : 59
cuadVer              : 110
cuadVer2             : 111
cuadro               : 44
cuerpo               : 1
cycles               : 48
declare              : 4
declare2             : 8
declare2Local        : 64 72
declare3             : 8 13
declare3Local        : 64 72
declareLocal         : 47
declareRecursivo     : 6 8
declareRecursivoLocal : 63 64
dim1                 : 11
do-while             : 93
empty                : 5 7 22 26 27 28 30 31 32 53 58 61 62 69 70 73 74 75 76 82 88 90 92 100 112 115 117 129 135 140 143 146 149
endProc              : 39
endproc              : 15
est                  : 15 39 42 43 44 45 46 47 48 49 50 51 52 83 86 94 97
exp                  : 11 59 65 78 83 89 99 102 110 111 118 119 120 121 122 123 124 126 127 128
exp2                 : 101 102 107 108 109
funct                : 14
funct2               : 15
funct3               : 24 25
functReturn          : 15
generaCirculoCuad    : 139
generaCuad           : 65 78 83 102
generaCuadFunct      : 54
generaCuadLinea      : 148
generaCuadradoCuad   : 142
generaReadCuad       : 136
generaRet            : 19 20
generaTrianguloCuad  : 145
generaWriteCuad      : 133
getTam               : 11
goToMainQuad         : 1
gosubCuad            : 54
gotoCuad             : 86
gotoFCuad            : 83 97
gotoVCuad            : 94
guardaSalto          : 15
input                : 49
linea                : 46
llamadaAFunct        : 52 79
llamadaAFunct2       : 54 60
llamadaAFunct3       : 59
llenaCuadF           : 97
llenaGoto            : 86
llenaMain            : 39
meteAssign           : 65
meteExp              : 101
meteID               : 133 136
meteNum              : 67 68
meteOper             : 118 119 120 121 122 123 124 126 127 128
metePar              : 102
meteSalto            : 94
meteVar              : 78 79
number               : 107
output               : 50
output2              : 130 133 134
program              : 0
program2             : 1
program3             : 4 14
sacaPar              : 102
triangulo            : 45
type                 : 8 15 24 25 64
type2                : 33
while                : 91
while2               : 94 97

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON
    (2) goToMainQuad -> .

    PROGRAM         reduce using rule 2 (goToMainQuad -> .)

    program                        shift and go to state 1
    goToMainQuad                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> goToMainQuad . PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON

    PROGRAM         shift and go to state 3


state 3

    (1) program -> goToMainQuad PROGRAM . ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON

    ID              shift and go to state 4


state 4

    (1) program -> goToMainQuad PROGRAM ID . altaPrograma SEMICOLON program2 cuerpo END SEMICOLON
    (3) altaPrograma -> .

    SEMICOLON       reduce using rule 3 (altaPrograma -> .)

    altaPrograma                   shift and go to state 5

state 5

    (1) program -> goToMainQuad PROGRAM ID altaPrograma . SEMICOLON program2 cuerpo END SEMICOLON

    SEMICOLON       shift and go to state 6


state 6

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON . program2 cuerpo END SEMICOLON
    (4) program2 -> . declare program3
    (5) program2 -> . empty
    (6) declare -> . DECLARE declareRecursivo
    (7) declare -> . empty
    (138) empty -> .

    DECLARE         shift and go to state 8
    MAIN            reduce using rule 138 (empty -> .)
    FUNCTION        reduce using rule 138 (empty -> .)

    program2                       shift and go to state 7
    declare                        shift and go to state 9
    empty                          shift and go to state 10

state 7

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 . cuerpo END SEMICOLON
    (39) cuerpo -> . MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY

    MAIN            shift and go to state 12

    cuerpo                         shift and go to state 11

state 8

    (6) declare -> DECLARE . declareRecursivo
    (8) declareRecursivo -> . type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (30) declareRecursivo -> . empty
    (33) type -> . type2
    (138) empty -> .
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    FUNCTION        reduce using rule 138 (empty -> .)
    MAIN            reduce using rule 138 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivo               shift and go to state 18
    type                           shift and go to state 19
    empty                          shift and go to state 20
    type2                          shift and go to state 21

state 9

    (4) program2 -> declare . program3
    (14) program3 -> . funct program3
    (28) program3 -> . empty
    (15) funct -> . FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY
    (138) empty -> .

    FUNCTION        shift and go to state 22
    MAIN            reduce using rule 138 (empty -> .)

    funct                          shift and go to state 23
    program3                       shift and go to state 24
    empty                          shift and go to state 25

state 10

    (5) program2 -> empty .
    (7) declare -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 5 (program2 -> empty .)
    MAIN            reduce using rule 5 (program2 -> empty .)
    FUNCTION        reduce using rule 7 (declare -> empty .)

  ! MAIN            [ reduce using rule 7 (declare -> empty .) ]


state 11

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo . END SEMICOLON

    END             shift and go to state 26


state 12

    (39) cuerpo -> MAIN . LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY

    LEFTPAR         shift and go to state 27


state 13

    (36) type2 -> STRING .

    ID              reduce using rule 36 (type2 -> STRING .)


state 14

    (34) type2 -> INT .

    ID              reduce using rule 34 (type2 -> INT .)


state 15

    (38) type2 -> VOID .

    ID              reduce using rule 38 (type2 -> VOID .)


state 16

    (35) type2 -> FLOAT .

    ID              reduce using rule 35 (type2 -> FLOAT .)


state 17

    (37) type2 -> BOOL .

    ID              reduce using rule 37 (type2 -> BOOL .)


state 18

    (6) declare -> DECLARE declareRecursivo .

    FUNCTION        reduce using rule 6 (declare -> DECLARE declareRecursivo .)
    MAIN            reduce using rule 6 (declare -> DECLARE declareRecursivo .)


state 19

    (8) declareRecursivo -> type . ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo

    ID              shift and go to state 28


state 20

    (30) declareRecursivo -> empty .

    FUNCTION        reduce using rule 30 (declareRecursivo -> empty .)
    MAIN            reduce using rule 30 (declareRecursivo -> empty .)


state 21

    (33) type -> type2 .

    ID              reduce using rule 33 (type -> type2 .)


state 22

    (15) funct -> FUNCTION . type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY
    (33) type -> . type2
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    type                           shift and go to state 29
    type2                          shift and go to state 21

state 23

    (14) program3 -> funct . program3
    (14) program3 -> . funct program3
    (28) program3 -> . empty
    (15) funct -> . FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY
    (138) empty -> .

    FUNCTION        shift and go to state 22
    MAIN            reduce using rule 138 (empty -> .)

    program3                       shift and go to state 30
    funct                          shift and go to state 23
    empty                          shift and go to state 25

state 24

    (4) program2 -> declare program3 .

    MAIN            reduce using rule 4 (program2 -> declare program3 .)


state 25

    (28) program3 -> empty .

    MAIN            reduce using rule 28 (program3 -> empty .)


state 26

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END . SEMICOLON

    SEMICOLON       shift and go to state 31


state 27

    (39) cuerpo -> MAIN LEFTPAR . RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY

    RIGHTPAR        shift and go to state 32


state 28

    (8) declareRecursivo -> type ID . altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (29) altaVarGlobal -> .

    ASSGN           reduce using rule 29 (altaVarGlobal -> .)
    COMMA           reduce using rule 29 (altaVarGlobal -> .)
    SEMICOLON       reduce using rule 29 (altaVarGlobal -> .)
    LEFTBRACK       reduce using rule 29 (altaVarGlobal -> .)

    altaVarGlobal                  shift and go to state 33

state 29

    (15) funct -> FUNCTION type . ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY

    ID              shift and go to state 34


state 30

    (14) program3 -> funct program3 .

    MAIN            reduce using rule 14 (program3 -> funct program3 .)


state 31

    (1) program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON .

    $end            reduce using rule 1 (program -> goToMainQuad PROGRAM ID altaPrograma SEMICOLON program2 cuerpo END SEMICOLON .)


state 32

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR . LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY

    LEFTKEY         shift and go to state 35


state 33

    (8) declareRecursivo -> type ID altaVarGlobal . assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (65) assignmentDecl -> . ASSGN meteAssign exp generaCuad
    (70) assignmentDecl -> . empty
    (138) empty -> .

    ASSGN           shift and go to state 36
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)

    assignmentDecl                 shift and go to state 37
    empty                          shift and go to state 38

state 34

    (15) funct -> FUNCTION type ID . altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY
    (23) altaModulo -> .

    LEFTPAR         reduce using rule 23 (altaModulo -> .)

    altaModulo                     shift and go to state 39

state 35

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY . llenaMain altaModuloMain est endProc RIGHTKEY
    (40) llenaMain -> .

    IF              reduce using rule 40 (llenaMain -> .)
    CIRCLE          reduce using rule 40 (llenaMain -> .)
    SQUARE          reduce using rule 40 (llenaMain -> .)
    TRIANGLE        reduce using rule 40 (llenaMain -> .)
    LINE            reduce using rule 40 (llenaMain -> .)
    DECLARE         reduce using rule 40 (llenaMain -> .)
    READ            reduce using rule 40 (llenaMain -> .)
    WRITE           reduce using rule 40 (llenaMain -> .)
    ID              reduce using rule 40 (llenaMain -> .)
    WHILE           reduce using rule 40 (llenaMain -> .)
    DO              reduce using rule 40 (llenaMain -> .)
    RIGHTKEY        reduce using rule 40 (llenaMain -> .)

    llenaMain                      shift and go to state 40

state 36

    (65) assignmentDecl -> ASSGN . meteAssign exp generaCuad
    (66) meteAssign -> .

    ID              reduce using rule 66 (meteAssign -> .)
    LEFTPAR         reduce using rule 66 (meteAssign -> .)
    BOOL            reduce using rule 66 (meteAssign -> .)
    INTEGER         reduce using rule 66 (meteAssign -> .)
    FLOAT           reduce using rule 66 (meteAssign -> .)
    LESS            reduce using rule 66 (meteAssign -> .)
    GRTR            reduce using rule 66 (meteAssign -> .)
    EQ              reduce using rule 66 (meteAssign -> .)
    NOTEQ           reduce using rule 66 (meteAssign -> .)
    AND             reduce using rule 66 (meteAssign -> .)
    OR              reduce using rule 66 (meteAssign -> .)
    SUM             reduce using rule 66 (meteAssign -> .)
    MINUS           reduce using rule 66 (meteAssign -> .)
    MULTP           reduce using rule 66 (meteAssign -> .)
    DIVIDE          reduce using rule 66 (meteAssign -> .)
    COMMA           reduce using rule 66 (meteAssign -> .)
    SEMICOLON       reduce using rule 66 (meteAssign -> .)
    LEFTBRACK       reduce using rule 66 (meteAssign -> .)

    meteAssign                     shift and go to state 41

state 37

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl . declare2 declare3 SEMICOLON declareRecursivo
    (9) declare2 -> . array
    (11) array -> . dim1 LEFTBRACK exp getTam RIGHTBRACK array
    (32) array -> . empty
    (10) dim1 -> .
    (138) empty -> .

    LEFTBRACK       reduce using rule 10 (dim1 -> .)
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)

    dim1                           shift and go to state 42
    declare2                       shift and go to state 43
    array                          shift and go to state 44
    empty                          shift and go to state 45

state 38

    (70) assignmentDecl -> empty .

    COMMA           reduce using rule 70 (assignmentDecl -> empty .)
    LEFTBRACK       reduce using rule 70 (assignmentDecl -> empty .)
    SEMICOLON       reduce using rule 70 (assignmentDecl -> empty .)


state 39

    (15) funct -> FUNCTION type ID altaModulo . LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY

    LEFTPAR         shift and go to state 46


state 40

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain . altaModuloMain est endProc RIGHTKEY
    (41) altaModuloMain -> .

    IF              reduce using rule 41 (altaModuloMain -> .)
    CIRCLE          reduce using rule 41 (altaModuloMain -> .)
    SQUARE          reduce using rule 41 (altaModuloMain -> .)
    TRIANGLE        reduce using rule 41 (altaModuloMain -> .)
    LINE            reduce using rule 41 (altaModuloMain -> .)
    DECLARE         reduce using rule 41 (altaModuloMain -> .)
    READ            reduce using rule 41 (altaModuloMain -> .)
    WRITE           reduce using rule 41 (altaModuloMain -> .)
    ID              reduce using rule 41 (altaModuloMain -> .)
    WHILE           reduce using rule 41 (altaModuloMain -> .)
    DO              reduce using rule 41 (altaModuloMain -> .)
    RIGHTKEY        reduce using rule 41 (altaModuloMain -> .)

    altaModuloMain                 shift and go to state 47

state 41

    (65) assignmentDecl -> ASSGN meteAssign . exp generaCuad
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 56
    empty                          shift and go to state 51

state 42

    (11) array -> dim1 . LEFTBRACK exp getTam RIGHTBRACK array

    LEFTBRACK       shift and go to state 57


state 43

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 . declare3 SEMICOLON declareRecursivo
    (13) declare3 -> . COMMA ID altaVarGlobal declare3
    (31) declare3 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 59
    SEMICOLON       reduce using rule 138 (empty -> .)

    declare3                       shift and go to state 58
    empty                          shift and go to state 60

state 44

    (9) declare2 -> array .

    COMMA           reduce using rule 9 (declare2 -> array .)
    SEMICOLON       reduce using rule 9 (declare2 -> array .)


state 45

    (32) array -> empty .

    COMMA           reduce using rule 32 (array -> empty .)
    SEMICOLON       reduce using rule 32 (array -> empty .)


state 46

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR . funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY
    (24) funct2 -> . type ID altaVarLocal funct3
    (26) funct2 -> . empty
    (33) type -> . type2
    (138) empty -> .
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    RIGHTPAR        reduce using rule 138 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    funct2                         shift and go to state 61
    type                           shift and go to state 62
    empty                          shift and go to state 63
    type2                          shift and go to state 21

state 47

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain . est endProc RIGHTKEY
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 72
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 48

    (107) exp -> number . exp2
    (118) exp2 -> . LESS meteOper exp
    (119) exp2 -> . GRTR meteOper exp
    (120) exp2 -> . EQ meteOper exp
    (121) exp2 -> . NOTEQ meteOper exp
    (122) exp2 -> . AND meteOper exp
    (123) exp2 -> . OR meteOper exp
    (124) exp2 -> . SUM meteOper exp
    (126) exp2 -> . MINUS meteOper exp
    (127) exp2 -> . MULTP meteOper exp
    (128) exp2 -> . DIVIDE meteOper exp
    (129) exp2 -> . empty
    (138) empty -> .

    LESS            shift and go to state 92
    GRTR            shift and go to state 97
    EQ              shift and go to state 99
    NOTEQ           shift and go to state 93
    AND             shift and go to state 90
    OR              shift and go to state 100
    SUM             shift and go to state 95
    MINUS           shift and go to state 96
    MULTP           shift and go to state 98
    DIVIDE          shift and go to state 91
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)

    exp2                           shift and go to state 94
    empty                          shift and go to state 101

state 49

    (108) exp -> arreglo . exp2
    (118) exp2 -> . LESS meteOper exp
    (119) exp2 -> . GRTR meteOper exp
    (120) exp2 -> . EQ meteOper exp
    (121) exp2 -> . NOTEQ meteOper exp
    (122) exp2 -> . AND meteOper exp
    (123) exp2 -> . OR meteOper exp
    (124) exp2 -> . SUM meteOper exp
    (126) exp2 -> . MINUS meteOper exp
    (127) exp2 -> . MULTP meteOper exp
    (128) exp2 -> . DIVIDE meteOper exp
    (129) exp2 -> . empty
    (138) empty -> .

    LESS            shift and go to state 92
    GRTR            shift and go to state 97
    EQ              shift and go to state 99
    NOTEQ           shift and go to state 93
    AND             shift and go to state 90
    OR              shift and go to state 100
    SUM             shift and go to state 95
    MINUS           shift and go to state 96
    MULTP           shift and go to state 98
    DIVIDE          shift and go to state 91
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)

    empty                          shift and go to state 101
    exp2                           shift and go to state 102

state 50

    (67) number -> INTEGER . meteNum
    (116) meteNum -> .

    LESS            reduce using rule 116 (meteNum -> .)
    GRTR            reduce using rule 116 (meteNum -> .)
    EQ              reduce using rule 116 (meteNum -> .)
    NOTEQ           reduce using rule 116 (meteNum -> .)
    AND             reduce using rule 116 (meteNum -> .)
    OR              reduce using rule 116 (meteNum -> .)
    SUM             reduce using rule 116 (meteNum -> .)
    MINUS           reduce using rule 116 (meteNum -> .)
    MULTP           reduce using rule 116 (meteNum -> .)
    DIVIDE          reduce using rule 116 (meteNum -> .)
    COMMA           reduce using rule 116 (meteNum -> .)
    SEMICOLON       reduce using rule 116 (meteNum -> .)
    LEFTBRACK       reduce using rule 116 (meteNum -> .)
    RIGHTBRACK      reduce using rule 116 (meteNum -> .)
    RIGHTPAR        reduce using rule 116 (meteNum -> .)

    meteNum                        shift and go to state 103

state 51

    (117) exp -> empty .
    (69) number -> empty .
    (115) arreglo -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for LEFTBRACK resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTBRACK resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for LESS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for LEFTBRACK resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTBRACK resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 69 (number -> empty .)
    LESS            reduce using rule 69 (number -> empty .)
    GRTR            reduce using rule 69 (number -> empty .)
    EQ              reduce using rule 69 (number -> empty .)
    NOTEQ           reduce using rule 69 (number -> empty .)
    AND             reduce using rule 69 (number -> empty .)
    OR              reduce using rule 69 (number -> empty .)
    SUM             reduce using rule 69 (number -> empty .)
    MINUS           reduce using rule 69 (number -> empty .)
    MULTP           reduce using rule 69 (number -> empty .)
    DIVIDE          reduce using rule 69 (number -> empty .)
    COMMA           reduce using rule 69 (number -> empty .)
    SEMICOLON       reduce using rule 69 (number -> empty .)
    LEFTBRACK       reduce using rule 69 (number -> empty .)
    RIGHTBRACK      reduce using rule 69 (number -> empty .)
    RIGHTPAR        reduce using rule 69 (number -> empty .)

  ! COMMA           [ reduce using rule 117 (exp -> empty .) ]
  ! SEMICOLON       [ reduce using rule 117 (exp -> empty .) ]
  ! LEFTBRACK       [ reduce using rule 117 (exp -> empty .) ]
  ! RIGHTBRACK      [ reduce using rule 117 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 117 (exp -> empty .) ]
  ! LESS            [ reduce using rule 115 (arreglo -> empty .) ]
  ! GRTR            [ reduce using rule 115 (arreglo -> empty .) ]
  ! EQ              [ reduce using rule 115 (arreglo -> empty .) ]
  ! NOTEQ           [ reduce using rule 115 (arreglo -> empty .) ]
  ! AND             [ reduce using rule 115 (arreglo -> empty .) ]
  ! OR              [ reduce using rule 115 (arreglo -> empty .) ]
  ! SUM             [ reduce using rule 115 (arreglo -> empty .) ]
  ! MINUS           [ reduce using rule 115 (arreglo -> empty .) ]
  ! MULTP           [ reduce using rule 115 (arreglo -> empty .) ]
  ! DIVIDE          [ reduce using rule 115 (arreglo -> empty .) ]
  ! COMMA           [ reduce using rule 115 (arreglo -> empty .) ]
  ! SEMICOLON       [ reduce using rule 115 (arreglo -> empty .) ]
  ! LEFTBRACK       [ reduce using rule 115 (arreglo -> empty .) ]
  ! RIGHTBRACK      [ reduce using rule 115 (arreglo -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 115 (arreglo -> empty .) ]


state 52

    (101) exp -> ID . meteExp exp2
    (110) arreglo -> ID . LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (105) meteExp -> .

  ! shift/reduce conflict for LEFTBRACK resolved as shift
    LEFTBRACK       shift and go to state 104
    LESS            reduce using rule 105 (meteExp -> .)
    GRTR            reduce using rule 105 (meteExp -> .)
    EQ              reduce using rule 105 (meteExp -> .)
    NOTEQ           reduce using rule 105 (meteExp -> .)
    AND             reduce using rule 105 (meteExp -> .)
    OR              reduce using rule 105 (meteExp -> .)
    SUM             reduce using rule 105 (meteExp -> .)
    MINUS           reduce using rule 105 (meteExp -> .)
    MULTP           reduce using rule 105 (meteExp -> .)
    DIVIDE          reduce using rule 105 (meteExp -> .)
    COMMA           reduce using rule 105 (meteExp -> .)
    SEMICOLON       reduce using rule 105 (meteExp -> .)
    RIGHTBRACK      reduce using rule 105 (meteExp -> .)
    RIGHTPAR        reduce using rule 105 (meteExp -> .)

  ! LEFTBRACK       [ reduce using rule 105 (meteExp -> .) ]

    meteExp                        shift and go to state 105

state 53

    (68) number -> FLOAT . meteNum
    (116) meteNum -> .

    LESS            reduce using rule 116 (meteNum -> .)
    GRTR            reduce using rule 116 (meteNum -> .)
    EQ              reduce using rule 116 (meteNum -> .)
    NOTEQ           reduce using rule 116 (meteNum -> .)
    AND             reduce using rule 116 (meteNum -> .)
    OR              reduce using rule 116 (meteNum -> .)
    SUM             reduce using rule 116 (meteNum -> .)
    MINUS           reduce using rule 116 (meteNum -> .)
    MULTP           reduce using rule 116 (meteNum -> .)
    DIVIDE          reduce using rule 116 (meteNum -> .)
    COMMA           reduce using rule 116 (meteNum -> .)
    SEMICOLON       reduce using rule 116 (meteNum -> .)
    LEFTBRACK       reduce using rule 116 (meteNum -> .)
    RIGHTBRACK      reduce using rule 116 (meteNum -> .)
    RIGHTPAR        reduce using rule 116 (meteNum -> .)

    meteNum                        shift and go to state 106

state 54

    (102) exp -> LEFTPAR . metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (103) metePar -> .

    ID              reduce using rule 103 (metePar -> .)
    LEFTPAR         reduce using rule 103 (metePar -> .)
    BOOL            reduce using rule 103 (metePar -> .)
    INTEGER         reduce using rule 103 (metePar -> .)
    FLOAT           reduce using rule 103 (metePar -> .)
    RIGHTPAR        reduce using rule 103 (metePar -> .)
    LESS            reduce using rule 103 (metePar -> .)
    GRTR            reduce using rule 103 (metePar -> .)
    EQ              reduce using rule 103 (metePar -> .)
    NOTEQ           reduce using rule 103 (metePar -> .)
    AND             reduce using rule 103 (metePar -> .)
    OR              reduce using rule 103 (metePar -> .)
    SUM             reduce using rule 103 (metePar -> .)
    MINUS           reduce using rule 103 (metePar -> .)
    MULTP           reduce using rule 103 (metePar -> .)
    DIVIDE          reduce using rule 103 (metePar -> .)

    metePar                        shift and go to state 107

state 55

    (109) exp -> BOOL . exp2
    (118) exp2 -> . LESS meteOper exp
    (119) exp2 -> . GRTR meteOper exp
    (120) exp2 -> . EQ meteOper exp
    (121) exp2 -> . NOTEQ meteOper exp
    (122) exp2 -> . AND meteOper exp
    (123) exp2 -> . OR meteOper exp
    (124) exp2 -> . SUM meteOper exp
    (126) exp2 -> . MINUS meteOper exp
    (127) exp2 -> . MULTP meteOper exp
    (128) exp2 -> . DIVIDE meteOper exp
    (129) exp2 -> . empty
    (138) empty -> .

    LESS            shift and go to state 92
    GRTR            shift and go to state 97
    EQ              shift and go to state 99
    NOTEQ           shift and go to state 93
    AND             shift and go to state 90
    OR              shift and go to state 100
    SUM             shift and go to state 95
    MINUS           shift and go to state 96
    MULTP           shift and go to state 98
    DIVIDE          shift and go to state 91
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)

    exp2                           shift and go to state 108
    empty                          shift and go to state 101

state 56

    (65) assignmentDecl -> ASSGN meteAssign exp . generaCuad
    (106) generaCuad -> .

    COMMA           reduce using rule 106 (generaCuad -> .)
    SEMICOLON       reduce using rule 106 (generaCuad -> .)
    LEFTBRACK       reduce using rule 106 (generaCuad -> .)

    generaCuad                     shift and go to state 109

state 57

    (11) array -> dim1 LEFTBRACK . exp getTam RIGHTBRACK array
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 110
    empty                          shift and go to state 51

state 58

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 . SEMICOLON declareRecursivo

    SEMICOLON       shift and go to state 111


state 59

    (13) declare3 -> COMMA . ID altaVarGlobal declare3

    ID              shift and go to state 112


state 60

    (31) declare3 -> empty .

    SEMICOLON       reduce using rule 31 (declare3 -> empty .)


state 61

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 . RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY

    RIGHTPAR        shift and go to state 113


state 62

    (24) funct2 -> type . ID altaVarLocal funct3

    ID              shift and go to state 114


state 63

    (26) funct2 -> empty .

    RIGHTPAR        reduce using rule 26 (funct2 -> empty .)


state 64

    (145) triangulo -> TRIANGLE . LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 115


state 65

    (94) do-while -> DO . meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
    (96) meteSalto -> .

    LEFTKEY         reduce using rule 96 (meteSalto -> .)

    meteSalto                      shift and go to state 116

state 66

    (136) input -> READ . LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 117


state 67

    (42) est -> conditional . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 118
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 68

    (63) declareLocal -> DECLARE . declareRecursivoLocal
    (64) declareRecursivoLocal -> . type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (73) declareRecursivoLocal -> . empty
    (33) type -> . type2
    (138) empty -> .
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    IF              reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    LINE            reduce using rule 138 (empty -> .)
    DECLARE         reduce using rule 138 (empty -> .)
    READ            reduce using rule 138 (empty -> .)
    WRITE           reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    DO              reduce using rule 138 (empty -> .)
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivoLocal          shift and go to state 119
    type2                          shift and go to state 21
    type                           shift and go to state 120
    empty                          shift and go to state 121

state 69

    (97) while -> WHILE . LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF

    LEFTPAR         shift and go to state 122


state 70

    (44) est -> cuadro . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 123
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 71

    (148) linea -> LINE . LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 124


state 72

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est . endProc RIGHTKEY
    (16) endProc -> .

    RIGHTKEY        reduce using rule 16 (endProc -> .)

    endProc                        shift and go to state 125

state 73

    (52) est -> llamadaAFunct . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 126
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 74

    (93) cycles -> do-while .

    IF              reduce using rule 93 (cycles -> do-while .)
    CIRCLE          reduce using rule 93 (cycles -> do-while .)
    SQUARE          reduce using rule 93 (cycles -> do-while .)
    TRIANGLE        reduce using rule 93 (cycles -> do-while .)
    LINE            reduce using rule 93 (cycles -> do-while .)
    DECLARE         reduce using rule 93 (cycles -> do-while .)
    READ            reduce using rule 93 (cycles -> do-while .)
    WRITE           reduce using rule 93 (cycles -> do-while .)
    ID              reduce using rule 93 (cycles -> do-while .)
    WHILE           reduce using rule 93 (cycles -> do-while .)
    DO              reduce using rule 93 (cycles -> do-while .)
    RIGHTKEY        reduce using rule 93 (cycles -> do-while .)
    RETURN          reduce using rule 93 (cycles -> do-while .)


state 75

    (49) est -> input . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 127
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 76

    (53) est -> empty .
    (140) circulo -> empty .
    (143) cuadro -> empty .
    (146) triangulo -> empty .
    (149) linea -> empty .
    (74) declareLocal -> empty .
    (92) cycles -> empty .
    (82) assignment -> empty .
    (58) llamadaAFunct -> empty .

  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 140 (circulo -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 74 (declareLocal -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for CIRCLE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for SQUARE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for TRIANGLE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for LINE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for DECLARE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for READ resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for WRITE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for DO resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for RIGHTKEY resolved using rule 53 (est -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (est -> empty .)
    RIGHTKEY        reduce using rule 53 (est -> empty .)
    RETURN          reduce using rule 53 (est -> empty .)
    IF              reduce using rule 58 (llamadaAFunct -> empty .)
    CIRCLE          reduce using rule 58 (llamadaAFunct -> empty .)
    SQUARE          reduce using rule 58 (llamadaAFunct -> empty .)
    TRIANGLE        reduce using rule 58 (llamadaAFunct -> empty .)
    LINE            reduce using rule 58 (llamadaAFunct -> empty .)
    DECLARE         reduce using rule 58 (llamadaAFunct -> empty .)
    READ            reduce using rule 58 (llamadaAFunct -> empty .)
    WRITE           reduce using rule 58 (llamadaAFunct -> empty .)
    ID              reduce using rule 58 (llamadaAFunct -> empty .)
    WHILE           reduce using rule 58 (llamadaAFunct -> empty .)
    DO              reduce using rule 58 (llamadaAFunct -> empty .)

  ! IF              [ reduce using rule 140 (circulo -> empty .) ]
  ! CIRCLE          [ reduce using rule 140 (circulo -> empty .) ]
  ! SQUARE          [ reduce using rule 140 (circulo -> empty .) ]
  ! TRIANGLE        [ reduce using rule 140 (circulo -> empty .) ]
  ! LINE            [ reduce using rule 140 (circulo -> empty .) ]
  ! DECLARE         [ reduce using rule 140 (circulo -> empty .) ]
  ! READ            [ reduce using rule 140 (circulo -> empty .) ]
  ! WRITE           [ reduce using rule 140 (circulo -> empty .) ]
  ! ID              [ reduce using rule 140 (circulo -> empty .) ]
  ! WHILE           [ reduce using rule 140 (circulo -> empty .) ]
  ! DO              [ reduce using rule 140 (circulo -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 140 (circulo -> empty .) ]
  ! RETURN          [ reduce using rule 140 (circulo -> empty .) ]
  ! IF              [ reduce using rule 143 (cuadro -> empty .) ]
  ! CIRCLE          [ reduce using rule 143 (cuadro -> empty .) ]
  ! SQUARE          [ reduce using rule 143 (cuadro -> empty .) ]
  ! TRIANGLE        [ reduce using rule 143 (cuadro -> empty .) ]
  ! LINE            [ reduce using rule 143 (cuadro -> empty .) ]
  ! DECLARE         [ reduce using rule 143 (cuadro -> empty .) ]
  ! READ            [ reduce using rule 143 (cuadro -> empty .) ]
  ! WRITE           [ reduce using rule 143 (cuadro -> empty .) ]
  ! ID              [ reduce using rule 143 (cuadro -> empty .) ]
  ! WHILE           [ reduce using rule 143 (cuadro -> empty .) ]
  ! DO              [ reduce using rule 143 (cuadro -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 143 (cuadro -> empty .) ]
  ! RETURN          [ reduce using rule 143 (cuadro -> empty .) ]
  ! IF              [ reduce using rule 146 (triangulo -> empty .) ]
  ! CIRCLE          [ reduce using rule 146 (triangulo -> empty .) ]
  ! SQUARE          [ reduce using rule 146 (triangulo -> empty .) ]
  ! TRIANGLE        [ reduce using rule 146 (triangulo -> empty .) ]
  ! LINE            [ reduce using rule 146 (triangulo -> empty .) ]
  ! DECLARE         [ reduce using rule 146 (triangulo -> empty .) ]
  ! READ            [ reduce using rule 146 (triangulo -> empty .) ]
  ! WRITE           [ reduce using rule 146 (triangulo -> empty .) ]
  ! ID              [ reduce using rule 146 (triangulo -> empty .) ]
  ! WHILE           [ reduce using rule 146 (triangulo -> empty .) ]
  ! DO              [ reduce using rule 146 (triangulo -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 146 (triangulo -> empty .) ]
  ! RETURN          [ reduce using rule 146 (triangulo -> empty .) ]
  ! IF              [ reduce using rule 149 (linea -> empty .) ]
  ! CIRCLE          [ reduce using rule 149 (linea -> empty .) ]
  ! SQUARE          [ reduce using rule 149 (linea -> empty .) ]
  ! TRIANGLE        [ reduce using rule 149 (linea -> empty .) ]
  ! LINE            [ reduce using rule 149 (linea -> empty .) ]
  ! DECLARE         [ reduce using rule 149 (linea -> empty .) ]
  ! READ            [ reduce using rule 149 (linea -> empty .) ]
  ! WRITE           [ reduce using rule 149 (linea -> empty .) ]
  ! ID              [ reduce using rule 149 (linea -> empty .) ]
  ! WHILE           [ reduce using rule 149 (linea -> empty .) ]
  ! DO              [ reduce using rule 149 (linea -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 149 (linea -> empty .) ]
  ! RETURN          [ reduce using rule 149 (linea -> empty .) ]
  ! IF              [ reduce using rule 74 (declareLocal -> empty .) ]
  ! CIRCLE          [ reduce using rule 74 (declareLocal -> empty .) ]
  ! SQUARE          [ reduce using rule 74 (declareLocal -> empty .) ]
  ! TRIANGLE        [ reduce using rule 74 (declareLocal -> empty .) ]
  ! LINE            [ reduce using rule 74 (declareLocal -> empty .) ]
  ! DECLARE         [ reduce using rule 74 (declareLocal -> empty .) ]
  ! READ            [ reduce using rule 74 (declareLocal -> empty .) ]
  ! WRITE           [ reduce using rule 74 (declareLocal -> empty .) ]
  ! ID              [ reduce using rule 74 (declareLocal -> empty .) ]
  ! WHILE           [ reduce using rule 74 (declareLocal -> empty .) ]
  ! DO              [ reduce using rule 74 (declareLocal -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 74 (declareLocal -> empty .) ]
  ! RETURN          [ reduce using rule 74 (declareLocal -> empty .) ]
  ! IF              [ reduce using rule 92 (cycles -> empty .) ]
  ! CIRCLE          [ reduce using rule 92 (cycles -> empty .) ]
  ! SQUARE          [ reduce using rule 92 (cycles -> empty .) ]
  ! TRIANGLE        [ reduce using rule 92 (cycles -> empty .) ]
  ! LINE            [ reduce using rule 92 (cycles -> empty .) ]
  ! DECLARE         [ reduce using rule 92 (cycles -> empty .) ]
  ! READ            [ reduce using rule 92 (cycles -> empty .) ]
  ! WRITE           [ reduce using rule 92 (cycles -> empty .) ]
  ! ID              [ reduce using rule 92 (cycles -> empty .) ]
  ! WHILE           [ reduce using rule 92 (cycles -> empty .) ]
  ! DO              [ reduce using rule 92 (cycles -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 92 (cycles -> empty .) ]
  ! RETURN          [ reduce using rule 92 (cycles -> empty .) ]
  ! IF              [ reduce using rule 82 (assignment -> empty .) ]
  ! CIRCLE          [ reduce using rule 82 (assignment -> empty .) ]
  ! SQUARE          [ reduce using rule 82 (assignment -> empty .) ]
  ! TRIANGLE        [ reduce using rule 82 (assignment -> empty .) ]
  ! LINE            [ reduce using rule 82 (assignment -> empty .) ]
  ! DECLARE         [ reduce using rule 82 (assignment -> empty .) ]
  ! READ            [ reduce using rule 82 (assignment -> empty .) ]
  ! WRITE           [ reduce using rule 82 (assignment -> empty .) ]
  ! ID              [ reduce using rule 82 (assignment -> empty .) ]
  ! WHILE           [ reduce using rule 82 (assignment -> empty .) ]
  ! DO              [ reduce using rule 82 (assignment -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 82 (assignment -> empty .) ]
  ! RETURN          [ reduce using rule 82 (assignment -> empty .) ]
  ! RIGHTKEY        [ reduce using rule 58 (llamadaAFunct -> empty .) ]
  ! RETURN          [ reduce using rule 58 (llamadaAFunct -> empty .) ]


state 77

    (45) est -> triangulo . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    triangulo                      shift and go to state 77
    est                            shift and go to state 128
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    cuadro                         shift and go to state 70
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 78

    (142) cuadro -> SQUARE . LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 129


state 79

    (51) est -> assignment . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 130
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 80

    (130) output -> WRITE . LEFTPAR output2 RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 131


state 81

    (78) assignment -> ID . ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> ID . ASSGN meteVar llamadaAFunct SEMICOLON
    (54) llamadaAFunct -> ID . cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (55) cuadERA -> .

    ASSGN           shift and go to state 132
    LEFTPAR         reduce using rule 55 (cuadERA -> .)

    cuadERA                        shift and go to state 133

state 82

    (43) est -> circulo . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 134
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 83

    (83) conditional -> IF . LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse

    LEFTPAR         shift and go to state 135


state 84

    (48) est -> cycles . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 136
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    cycles                         shift and go to state 84
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    declareLocal                   shift and go to state 88
    linea                          shift and go to state 89

state 85

    (91) cycles -> while .

    IF              reduce using rule 91 (cycles -> while .)
    CIRCLE          reduce using rule 91 (cycles -> while .)
    SQUARE          reduce using rule 91 (cycles -> while .)
    TRIANGLE        reduce using rule 91 (cycles -> while .)
    LINE            reduce using rule 91 (cycles -> while .)
    DECLARE         reduce using rule 91 (cycles -> while .)
    READ            reduce using rule 91 (cycles -> while .)
    WRITE           reduce using rule 91 (cycles -> while .)
    ID              reduce using rule 91 (cycles -> while .)
    WHILE           reduce using rule 91 (cycles -> while .)
    DO              reduce using rule 91 (cycles -> while .)
    RIGHTKEY        reduce using rule 91 (cycles -> while .)
    RETURN          reduce using rule 91 (cycles -> while .)


state 86

    (50) est -> output . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 137
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 87

    (139) circulo -> CIRCLE . LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 138


state 88

    (47) est -> declareLocal . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 139
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 89

    (46) est -> linea . est
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 140
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 90

    (122) exp2 -> AND . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 141

state 91

    (128) exp2 -> DIVIDE . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 142

state 92

    (118) exp2 -> LESS . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 143

state 93

    (121) exp2 -> NOTEQ . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 144

state 94

    (107) exp -> number exp2 .

    COMMA           reduce using rule 107 (exp -> number exp2 .)
    SEMICOLON       reduce using rule 107 (exp -> number exp2 .)
    LEFTBRACK       reduce using rule 107 (exp -> number exp2 .)
    RIGHTBRACK      reduce using rule 107 (exp -> number exp2 .)
    RIGHTPAR        reduce using rule 107 (exp -> number exp2 .)


state 95

    (124) exp2 -> SUM . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 145

state 96

    (126) exp2 -> MINUS . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 146

state 97

    (119) exp2 -> GRTR . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 147

state 98

    (127) exp2 -> MULTP . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 148

state 99

    (120) exp2 -> EQ . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 149

state 100

    (123) exp2 -> OR . meteOper exp
    (125) meteOper -> .

    ID              reduce using rule 125 (meteOper -> .)
    LEFTPAR         reduce using rule 125 (meteOper -> .)
    BOOL            reduce using rule 125 (meteOper -> .)
    INTEGER         reduce using rule 125 (meteOper -> .)
    FLOAT           reduce using rule 125 (meteOper -> .)
    LESS            reduce using rule 125 (meteOper -> .)
    GRTR            reduce using rule 125 (meteOper -> .)
    EQ              reduce using rule 125 (meteOper -> .)
    NOTEQ           reduce using rule 125 (meteOper -> .)
    AND             reduce using rule 125 (meteOper -> .)
    OR              reduce using rule 125 (meteOper -> .)
    SUM             reduce using rule 125 (meteOper -> .)
    MINUS           reduce using rule 125 (meteOper -> .)
    MULTP           reduce using rule 125 (meteOper -> .)
    DIVIDE          reduce using rule 125 (meteOper -> .)
    COMMA           reduce using rule 125 (meteOper -> .)
    SEMICOLON       reduce using rule 125 (meteOper -> .)
    LEFTBRACK       reduce using rule 125 (meteOper -> .)
    RIGHTBRACK      reduce using rule 125 (meteOper -> .)
    RIGHTPAR        reduce using rule 125 (meteOper -> .)

    meteOper                       shift and go to state 150

state 101

    (129) exp2 -> empty .

    COMMA           reduce using rule 129 (exp2 -> empty .)
    SEMICOLON       reduce using rule 129 (exp2 -> empty .)
    LEFTBRACK       reduce using rule 129 (exp2 -> empty .)
    RIGHTBRACK      reduce using rule 129 (exp2 -> empty .)
    RIGHTPAR        reduce using rule 129 (exp2 -> empty .)


state 102

    (108) exp -> arreglo exp2 .

    COMMA           reduce using rule 108 (exp -> arreglo exp2 .)
    SEMICOLON       reduce using rule 108 (exp -> arreglo exp2 .)
    LEFTBRACK       reduce using rule 108 (exp -> arreglo exp2 .)
    RIGHTBRACK      reduce using rule 108 (exp -> arreglo exp2 .)
    RIGHTPAR        reduce using rule 108 (exp -> arreglo exp2 .)


state 103

    (67) number -> INTEGER meteNum .

    LESS            reduce using rule 67 (number -> INTEGER meteNum .)
    GRTR            reduce using rule 67 (number -> INTEGER meteNum .)
    EQ              reduce using rule 67 (number -> INTEGER meteNum .)
    NOTEQ           reduce using rule 67 (number -> INTEGER meteNum .)
    AND             reduce using rule 67 (number -> INTEGER meteNum .)
    OR              reduce using rule 67 (number -> INTEGER meteNum .)
    SUM             reduce using rule 67 (number -> INTEGER meteNum .)
    MINUS           reduce using rule 67 (number -> INTEGER meteNum .)
    MULTP           reduce using rule 67 (number -> INTEGER meteNum .)
    DIVIDE          reduce using rule 67 (number -> INTEGER meteNum .)
    COMMA           reduce using rule 67 (number -> INTEGER meteNum .)
    SEMICOLON       reduce using rule 67 (number -> INTEGER meteNum .)
    LEFTBRACK       reduce using rule 67 (number -> INTEGER meteNum .)
    RIGHTBRACK      reduce using rule 67 (number -> INTEGER meteNum .)
    RIGHTPAR        reduce using rule 67 (number -> INTEGER meteNum .)


state 104

    (110) arreglo -> ID LEFTBRACK . exp cuadVer RIGHTBRACK arreglo2
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 151
    empty                          shift and go to state 51

state 105

    (101) exp -> ID meteExp . exp2
    (118) exp2 -> . LESS meteOper exp
    (119) exp2 -> . GRTR meteOper exp
    (120) exp2 -> . EQ meteOper exp
    (121) exp2 -> . NOTEQ meteOper exp
    (122) exp2 -> . AND meteOper exp
    (123) exp2 -> . OR meteOper exp
    (124) exp2 -> . SUM meteOper exp
    (126) exp2 -> . MINUS meteOper exp
    (127) exp2 -> . MULTP meteOper exp
    (128) exp2 -> . DIVIDE meteOper exp
    (129) exp2 -> . empty
    (138) empty -> .

    LESS            shift and go to state 92
    GRTR            shift and go to state 97
    EQ              shift and go to state 99
    NOTEQ           shift and go to state 93
    AND             shift and go to state 90
    OR              shift and go to state 100
    SUM             shift and go to state 95
    MINUS           shift and go to state 96
    MULTP           shift and go to state 98
    DIVIDE          shift and go to state 91
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)

    exp2                           shift and go to state 152
    empty                          shift and go to state 101

state 106

    (68) number -> FLOAT meteNum .

    LESS            reduce using rule 68 (number -> FLOAT meteNum .)
    GRTR            reduce using rule 68 (number -> FLOAT meteNum .)
    EQ              reduce using rule 68 (number -> FLOAT meteNum .)
    NOTEQ           reduce using rule 68 (number -> FLOAT meteNum .)
    AND             reduce using rule 68 (number -> FLOAT meteNum .)
    OR              reduce using rule 68 (number -> FLOAT meteNum .)
    SUM             reduce using rule 68 (number -> FLOAT meteNum .)
    MINUS           reduce using rule 68 (number -> FLOAT meteNum .)
    MULTP           reduce using rule 68 (number -> FLOAT meteNum .)
    DIVIDE          reduce using rule 68 (number -> FLOAT meteNum .)
    COMMA           reduce using rule 68 (number -> FLOAT meteNum .)
    SEMICOLON       reduce using rule 68 (number -> FLOAT meteNum .)
    LEFTBRACK       reduce using rule 68 (number -> FLOAT meteNum .)
    RIGHTBRACK      reduce using rule 68 (number -> FLOAT meteNum .)
    RIGHTPAR        reduce using rule 68 (number -> FLOAT meteNum .)


state 107

    (102) exp -> LEFTPAR metePar . exp RIGHTPAR sacaPar exp2 generaCuad
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 153
    empty                          shift and go to state 51

state 108

    (109) exp -> BOOL exp2 .

    COMMA           reduce using rule 109 (exp -> BOOL exp2 .)
    SEMICOLON       reduce using rule 109 (exp -> BOOL exp2 .)
    LEFTBRACK       reduce using rule 109 (exp -> BOOL exp2 .)
    RIGHTBRACK      reduce using rule 109 (exp -> BOOL exp2 .)
    RIGHTPAR        reduce using rule 109 (exp -> BOOL exp2 .)


state 109

    (65) assignmentDecl -> ASSGN meteAssign exp generaCuad .

    COMMA           reduce using rule 65 (assignmentDecl -> ASSGN meteAssign exp generaCuad .)
    LEFTBRACK       reduce using rule 65 (assignmentDecl -> ASSGN meteAssign exp generaCuad .)
    SEMICOLON       reduce using rule 65 (assignmentDecl -> ASSGN meteAssign exp generaCuad .)


state 110

    (11) array -> dim1 LEFTBRACK exp . getTam RIGHTBRACK array
    (12) getTam -> .

    RIGHTBRACK      reduce using rule 12 (getTam -> .)

    getTam                         shift and go to state 154

state 111

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON . declareRecursivo
    (8) declareRecursivo -> . type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo
    (30) declareRecursivo -> . empty
    (33) type -> . type2
    (138) empty -> .
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    FUNCTION        reduce using rule 138 (empty -> .)
    MAIN            reduce using rule 138 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivo               shift and go to state 155
    type                           shift and go to state 19
    empty                          shift and go to state 20
    type2                          shift and go to state 21

state 112

    (13) declare3 -> COMMA ID . altaVarGlobal declare3
    (29) altaVarGlobal -> .

    COMMA           reduce using rule 29 (altaVarGlobal -> .)
    SEMICOLON       reduce using rule 29 (altaVarGlobal -> .)

    altaVarGlobal                  shift and go to state 156

state 113

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR . LEFTKEY guardaSalto est functReturn endproc RIGHTKEY

    LEFTKEY         shift and go to state 157


state 114

    (24) funct2 -> type ID . altaVarLocal funct3
    (77) altaVarLocal -> .

    COMMA           reduce using rule 77 (altaVarLocal -> .)
    RIGHTPAR        reduce using rule 77 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 158

state 115

    (145) triangulo -> TRIANGLE LEFTPAR . INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 159


state 116

    (94) do-while -> DO meteSalto . LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

    LEFTKEY         shift and go to state 160


state 117

    (136) input -> READ LEFTPAR . ID meteID generaReadCuad RIGHTPAR SEMICOLON

    ID              shift and go to state 161


state 118

    (42) est -> conditional est .

    RIGHTKEY        reduce using rule 42 (est -> conditional est .)
    RETURN          reduce using rule 42 (est -> conditional est .)


state 119

    (63) declareLocal -> DECLARE declareRecursivoLocal .

    IF              reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    CIRCLE          reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    SQUARE          reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    TRIANGLE        reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    LINE            reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    DECLARE         reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    READ            reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    WRITE           reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    ID              reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    WHILE           reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    DO              reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    RIGHTKEY        reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)
    RETURN          reduce using rule 63 (declareLocal -> DECLARE declareRecursivoLocal .)


state 120

    (64) declareRecursivoLocal -> type . ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal

    ID              shift and go to state 162


state 121

    (73) declareRecursivoLocal -> empty .

    IF              reduce using rule 73 (declareRecursivoLocal -> empty .)
    CIRCLE          reduce using rule 73 (declareRecursivoLocal -> empty .)
    SQUARE          reduce using rule 73 (declareRecursivoLocal -> empty .)
    TRIANGLE        reduce using rule 73 (declareRecursivoLocal -> empty .)
    LINE            reduce using rule 73 (declareRecursivoLocal -> empty .)
    DECLARE         reduce using rule 73 (declareRecursivoLocal -> empty .)
    READ            reduce using rule 73 (declareRecursivoLocal -> empty .)
    WRITE           reduce using rule 73 (declareRecursivoLocal -> empty .)
    ID              reduce using rule 73 (declareRecursivoLocal -> empty .)
    WHILE           reduce using rule 73 (declareRecursivoLocal -> empty .)
    DO              reduce using rule 73 (declareRecursivoLocal -> empty .)
    RIGHTKEY        reduce using rule 73 (declareRecursivoLocal -> empty .)
    RETURN          reduce using rule 73 (declareRecursivoLocal -> empty .)


state 122

    (97) while -> WHILE LEFTPAR . while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (99) while2 -> . exp
    (100) while2 -> . empty
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (138) empty -> .
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53

    arreglo                        shift and go to state 49
    number                         shift and go to state 48
    while2                         shift and go to state 164
    exp                            shift and go to state 165
    empty                          shift and go to state 163

state 123

    (44) est -> cuadro est .

    RIGHTKEY        reduce using rule 44 (est -> cuadro est .)
    RETURN          reduce using rule 44 (est -> cuadro est .)


state 124

    (148) linea -> LINE LEFTPAR . INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 166


state 125

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc . RIGHTKEY

    RIGHTKEY        shift and go to state 167


state 126

    (52) est -> llamadaAFunct est .

    RIGHTKEY        reduce using rule 52 (est -> llamadaAFunct est .)
    RETURN          reduce using rule 52 (est -> llamadaAFunct est .)


state 127

    (49) est -> input est .

    RIGHTKEY        reduce using rule 49 (est -> input est .)
    RETURN          reduce using rule 49 (est -> input est .)


state 128

    (45) est -> triangulo est .

    RIGHTKEY        reduce using rule 45 (est -> triangulo est .)
    RETURN          reduce using rule 45 (est -> triangulo est .)


state 129

    (142) cuadro -> SQUARE LEFTPAR . INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 168


state 130

    (51) est -> assignment est .

    RIGHTKEY        reduce using rule 51 (est -> assignment est .)
    RETURN          reduce using rule 51 (est -> assignment est .)


state 131

    (130) output -> WRITE LEFTPAR . output2 RIGHTPAR SEMICOLON
    (133) output2 -> . ID meteID generaWriteCuad output2
    (134) output2 -> . QUOTE ID QUOTE output2
    (135) output2 -> . empty
    (138) empty -> .

    ID              shift and go to state 171
    QUOTE           shift and go to state 170
    RIGHTPAR        reduce using rule 138 (empty -> .)

    output2                        shift and go to state 169
    empty                          shift and go to state 172

state 132

    (78) assignment -> ID ASSGN . meteVar exp generaCuad SEMICOLON
    (79) assignment -> ID ASSGN . meteVar llamadaAFunct SEMICOLON
    (81) meteVar -> .

    ID              reduce using rule 81 (meteVar -> .)
    LEFTPAR         reduce using rule 81 (meteVar -> .)
    BOOL            reduce using rule 81 (meteVar -> .)
    INTEGER         reduce using rule 81 (meteVar -> .)
    FLOAT           reduce using rule 81 (meteVar -> .)
    SEMICOLON       reduce using rule 81 (meteVar -> .)
    LESS            reduce using rule 81 (meteVar -> .)
    GRTR            reduce using rule 81 (meteVar -> .)
    EQ              reduce using rule 81 (meteVar -> .)
    NOTEQ           reduce using rule 81 (meteVar -> .)
    AND             reduce using rule 81 (meteVar -> .)
    OR              reduce using rule 81 (meteVar -> .)
    SUM             reduce using rule 81 (meteVar -> .)
    MINUS           reduce using rule 81 (meteVar -> .)
    MULTP           reduce using rule 81 (meteVar -> .)
    DIVIDE          reduce using rule 81 (meteVar -> .)

    meteVar                        shift and go to state 173

state 133

    (54) llamadaAFunct -> ID cuadERA . LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR

    LEFTPAR         shift and go to state 174


state 134

    (43) est -> circulo est .

    RIGHTKEY        reduce using rule 43 (est -> circulo est .)
    RETURN          reduce using rule 43 (est -> circulo est .)


state 135

    (83) conditional -> IF LEFTPAR . exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 175
    empty                          shift and go to state 51

state 136

    (48) est -> cycles est .

    RIGHTKEY        reduce using rule 48 (est -> cycles est .)
    RETURN          reduce using rule 48 (est -> cycles est .)


state 137

    (50) est -> output est .

    RIGHTKEY        reduce using rule 50 (est -> output est .)
    RETURN          reduce using rule 50 (est -> output est .)


state 138

    (139) circulo -> CIRCLE LEFTPAR . INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 176


state 139

    (47) est -> declareLocal est .

    RIGHTKEY        reduce using rule 47 (est -> declareLocal est .)
    RETURN          reduce using rule 47 (est -> declareLocal est .)


state 140

    (46) est -> linea est .

    RIGHTKEY        reduce using rule 46 (est -> linea est .)
    RETURN          reduce using rule 46 (est -> linea est .)


state 141

    (122) exp2 -> AND meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 177
    empty                          shift and go to state 51

state 142

    (128) exp2 -> DIVIDE meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 178
    empty                          shift and go to state 51

state 143

    (118) exp2 -> LESS meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 179
    empty                          shift and go to state 51

state 144

    (121) exp2 -> NOTEQ meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 180
    empty                          shift and go to state 51

state 145

    (124) exp2 -> SUM meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 181
    empty                          shift and go to state 51

state 146

    (126) exp2 -> MINUS meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 182
    empty                          shift and go to state 51

state 147

    (119) exp2 -> GRTR meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 183
    empty                          shift and go to state 51

state 148

    (127) exp2 -> MULTP meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 184
    empty                          shift and go to state 51

state 149

    (120) exp2 -> EQ meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 185
    empty                          shift and go to state 51

state 150

    (123) exp2 -> OR meteOper . exp
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 186
    empty                          shift and go to state 51

state 151

    (110) arreglo -> ID LEFTBRACK exp . cuadVer RIGHTBRACK arreglo2
    (113) cuadVer -> .

    RIGHTBRACK      reduce using rule 113 (cuadVer -> .)

    cuadVer                        shift and go to state 187

state 152

    (101) exp -> ID meteExp exp2 .

    COMMA           reduce using rule 101 (exp -> ID meteExp exp2 .)
    SEMICOLON       reduce using rule 101 (exp -> ID meteExp exp2 .)
    LEFTBRACK       reduce using rule 101 (exp -> ID meteExp exp2 .)
    RIGHTBRACK      reduce using rule 101 (exp -> ID meteExp exp2 .)
    RIGHTPAR        reduce using rule 101 (exp -> ID meteExp exp2 .)


state 153

    (102) exp -> LEFTPAR metePar exp . RIGHTPAR sacaPar exp2 generaCuad

    RIGHTPAR        shift and go to state 188


state 154

    (11) array -> dim1 LEFTBRACK exp getTam . RIGHTBRACK array

    RIGHTBRACK      shift and go to state 189


state 155

    (8) declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .

    FUNCTION        reduce using rule 8 (declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .)
    MAIN            reduce using rule 8 (declareRecursivo -> type ID altaVarGlobal assignmentDecl declare2 declare3 SEMICOLON declareRecursivo .)


state 156

    (13) declare3 -> COMMA ID altaVarGlobal . declare3
    (13) declare3 -> . COMMA ID altaVarGlobal declare3
    (31) declare3 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 59
    SEMICOLON       reduce using rule 138 (empty -> .)

    empty                          shift and go to state 60
    declare3                       shift and go to state 190

state 157

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY . guardaSalto est functReturn endproc RIGHTKEY
    (17) guardaSalto -> .

    IF              reduce using rule 17 (guardaSalto -> .)
    CIRCLE          reduce using rule 17 (guardaSalto -> .)
    SQUARE          reduce using rule 17 (guardaSalto -> .)
    TRIANGLE        reduce using rule 17 (guardaSalto -> .)
    LINE            reduce using rule 17 (guardaSalto -> .)
    DECLARE         reduce using rule 17 (guardaSalto -> .)
    READ            reduce using rule 17 (guardaSalto -> .)
    WRITE           reduce using rule 17 (guardaSalto -> .)
    ID              reduce using rule 17 (guardaSalto -> .)
    WHILE           reduce using rule 17 (guardaSalto -> .)
    DO              reduce using rule 17 (guardaSalto -> .)
    RETURN          reduce using rule 17 (guardaSalto -> .)
    RIGHTKEY        reduce using rule 17 (guardaSalto -> .)

    guardaSalto                    shift and go to state 191

state 158

    (24) funct2 -> type ID altaVarLocal . funct3
    (25) funct3 -> . COMMA type ID altaVarLocal funct3
    (27) funct3 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 193
    RIGHTPAR        reduce using rule 138 (empty -> .)

    funct3                         shift and go to state 192
    empty                          shift and go to state 194

state 159

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER . COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 195


state 160

    (94) do-while -> DO meteSalto LEFTKEY . est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 196
    llamadaAFunct                  shift and go to state 73
    do-while                       shift and go to state 74
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 161

    (136) input -> READ LEFTPAR ID . meteID generaReadCuad RIGHTPAR SEMICOLON
    (132) meteID -> .

    RIGHTPAR        reduce using rule 132 (meteID -> .)

    meteID                         shift and go to state 197

state 162

    (64) declareRecursivoLocal -> type ID . altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (77) altaVarLocal -> .

    ASSGN           reduce using rule 77 (altaVarLocal -> .)
    COMMA           reduce using rule 77 (altaVarLocal -> .)
    SEMICOLON       reduce using rule 77 (altaVarLocal -> .)
    LEFTBRACK       reduce using rule 77 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 198

state 163

    (100) while2 -> empty .
    (117) exp -> empty .
    (69) number -> empty .
    (115) arreglo -> empty .

  ! reduce/reduce conflict for RIGHTPAR resolved using rule 100 (while2 -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for LESS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 69 (number -> empty .)
    LESS            reduce using rule 69 (number -> empty .)
    GRTR            reduce using rule 69 (number -> empty .)
    EQ              reduce using rule 69 (number -> empty .)
    NOTEQ           reduce using rule 69 (number -> empty .)
    AND             reduce using rule 69 (number -> empty .)
    OR              reduce using rule 69 (number -> empty .)
    SUM             reduce using rule 69 (number -> empty .)
    MINUS           reduce using rule 69 (number -> empty .)
    MULTP           reduce using rule 69 (number -> empty .)
    DIVIDE          reduce using rule 69 (number -> empty .)
    RIGHTPAR        reduce using rule 69 (number -> empty .)

  ! RIGHTPAR        [ reduce using rule 100 (while2 -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 117 (exp -> empty .) ]
  ! LESS            [ reduce using rule 115 (arreglo -> empty .) ]
  ! GRTR            [ reduce using rule 115 (arreglo -> empty .) ]
  ! EQ              [ reduce using rule 115 (arreglo -> empty .) ]
  ! NOTEQ           [ reduce using rule 115 (arreglo -> empty .) ]
  ! AND             [ reduce using rule 115 (arreglo -> empty .) ]
  ! OR              [ reduce using rule 115 (arreglo -> empty .) ]
  ! SUM             [ reduce using rule 115 (arreglo -> empty .) ]
  ! MINUS           [ reduce using rule 115 (arreglo -> empty .) ]
  ! MULTP           [ reduce using rule 115 (arreglo -> empty .) ]
  ! DIVIDE          [ reduce using rule 115 (arreglo -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 115 (arreglo -> empty .) ]


state 164

    (97) while -> WHILE LEFTPAR while2 . RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF

    RIGHTPAR        shift and go to state 199


state 165

    (99) while2 -> exp .

    RIGHTPAR        reduce using rule 99 (while2 -> exp .)


state 166

    (148) linea -> LINE LEFTPAR INTEGER . COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    COMMA           shift and go to state 200


state 167

    (39) cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY .

    END             reduce using rule 39 (cuerpo -> MAIN LEFTPAR RIGHTPAR LEFTKEY llenaMain altaModuloMain est endProc RIGHTKEY .)


state 168

    (142) cuadro -> SQUARE LEFTPAR INTEGER . COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 201


state 169

    (130) output -> WRITE LEFTPAR output2 . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 202


state 170

    (134) output2 -> QUOTE . ID QUOTE output2

    ID              shift and go to state 203


state 171

    (133) output2 -> ID . meteID generaWriteCuad output2
    (132) meteID -> .

    ID              reduce using rule 132 (meteID -> .)
    QUOTE           reduce using rule 132 (meteID -> .)
    RIGHTPAR        reduce using rule 132 (meteID -> .)

    meteID                         shift and go to state 204

state 172

    (135) output2 -> empty .

    RIGHTPAR        reduce using rule 135 (output2 -> empty .)


state 173

    (78) assignment -> ID ASSGN meteVar . exp generaCuad SEMICOLON
    (79) assignment -> ID ASSGN meteVar . llamadaAFunct SEMICOLON
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 207
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    SEMICOLON       reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    arreglo                        shift and go to state 49
    llamadaAFunct                  shift and go to state 205
    number                         shift and go to state 48
    exp                            shift and go to state 208
    empty                          shift and go to state 206

state 174

    (54) llamadaAFunct -> ID cuadERA LEFTPAR . llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (59) llamadaAFunct2 -> . exp cuadParam llamadaAFunct3
    (62) llamadaAFunct2 -> . empty
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (138) empty -> .
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    RIGHTPAR        reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53

    llamadaAFunct2                 shift and go to state 209
    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 211
    empty                          shift and go to state 210

state 175

    (83) conditional -> IF LEFTPAR exp . generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (106) generaCuad -> .

    RIGHTPAR        reduce using rule 106 (generaCuad -> .)

    generaCuad                     shift and go to state 212

state 176

    (139) circulo -> CIRCLE LEFTPAR INTEGER . COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 213


state 177

    (122) exp2 -> AND meteOper exp .

    COMMA           reduce using rule 122 (exp2 -> AND meteOper exp .)
    SEMICOLON       reduce using rule 122 (exp2 -> AND meteOper exp .)
    LEFTBRACK       reduce using rule 122 (exp2 -> AND meteOper exp .)
    RIGHTBRACK      reduce using rule 122 (exp2 -> AND meteOper exp .)
    RIGHTPAR        reduce using rule 122 (exp2 -> AND meteOper exp .)


state 178

    (128) exp2 -> DIVIDE meteOper exp .

    COMMA           reduce using rule 128 (exp2 -> DIVIDE meteOper exp .)
    SEMICOLON       reduce using rule 128 (exp2 -> DIVIDE meteOper exp .)
    LEFTBRACK       reduce using rule 128 (exp2 -> DIVIDE meteOper exp .)
    RIGHTBRACK      reduce using rule 128 (exp2 -> DIVIDE meteOper exp .)
    RIGHTPAR        reduce using rule 128 (exp2 -> DIVIDE meteOper exp .)


state 179

    (118) exp2 -> LESS meteOper exp .

    COMMA           reduce using rule 118 (exp2 -> LESS meteOper exp .)
    SEMICOLON       reduce using rule 118 (exp2 -> LESS meteOper exp .)
    LEFTBRACK       reduce using rule 118 (exp2 -> LESS meteOper exp .)
    RIGHTBRACK      reduce using rule 118 (exp2 -> LESS meteOper exp .)
    RIGHTPAR        reduce using rule 118 (exp2 -> LESS meteOper exp .)


state 180

    (121) exp2 -> NOTEQ meteOper exp .

    COMMA           reduce using rule 121 (exp2 -> NOTEQ meteOper exp .)
    SEMICOLON       reduce using rule 121 (exp2 -> NOTEQ meteOper exp .)
    LEFTBRACK       reduce using rule 121 (exp2 -> NOTEQ meteOper exp .)
    RIGHTBRACK      reduce using rule 121 (exp2 -> NOTEQ meteOper exp .)
    RIGHTPAR        reduce using rule 121 (exp2 -> NOTEQ meteOper exp .)


state 181

    (124) exp2 -> SUM meteOper exp .

    COMMA           reduce using rule 124 (exp2 -> SUM meteOper exp .)
    SEMICOLON       reduce using rule 124 (exp2 -> SUM meteOper exp .)
    LEFTBRACK       reduce using rule 124 (exp2 -> SUM meteOper exp .)
    RIGHTBRACK      reduce using rule 124 (exp2 -> SUM meteOper exp .)
    RIGHTPAR        reduce using rule 124 (exp2 -> SUM meteOper exp .)


state 182

    (126) exp2 -> MINUS meteOper exp .

    COMMA           reduce using rule 126 (exp2 -> MINUS meteOper exp .)
    SEMICOLON       reduce using rule 126 (exp2 -> MINUS meteOper exp .)
    LEFTBRACK       reduce using rule 126 (exp2 -> MINUS meteOper exp .)
    RIGHTBRACK      reduce using rule 126 (exp2 -> MINUS meteOper exp .)
    RIGHTPAR        reduce using rule 126 (exp2 -> MINUS meteOper exp .)


state 183

    (119) exp2 -> GRTR meteOper exp .

    COMMA           reduce using rule 119 (exp2 -> GRTR meteOper exp .)
    SEMICOLON       reduce using rule 119 (exp2 -> GRTR meteOper exp .)
    LEFTBRACK       reduce using rule 119 (exp2 -> GRTR meteOper exp .)
    RIGHTBRACK      reduce using rule 119 (exp2 -> GRTR meteOper exp .)
    RIGHTPAR        reduce using rule 119 (exp2 -> GRTR meteOper exp .)


state 184

    (127) exp2 -> MULTP meteOper exp .

    COMMA           reduce using rule 127 (exp2 -> MULTP meteOper exp .)
    SEMICOLON       reduce using rule 127 (exp2 -> MULTP meteOper exp .)
    LEFTBRACK       reduce using rule 127 (exp2 -> MULTP meteOper exp .)
    RIGHTBRACK      reduce using rule 127 (exp2 -> MULTP meteOper exp .)
    RIGHTPAR        reduce using rule 127 (exp2 -> MULTP meteOper exp .)


state 185

    (120) exp2 -> EQ meteOper exp .

    COMMA           reduce using rule 120 (exp2 -> EQ meteOper exp .)
    SEMICOLON       reduce using rule 120 (exp2 -> EQ meteOper exp .)
    LEFTBRACK       reduce using rule 120 (exp2 -> EQ meteOper exp .)
    RIGHTBRACK      reduce using rule 120 (exp2 -> EQ meteOper exp .)
    RIGHTPAR        reduce using rule 120 (exp2 -> EQ meteOper exp .)


state 186

    (123) exp2 -> OR meteOper exp .

    COMMA           reduce using rule 123 (exp2 -> OR meteOper exp .)
    SEMICOLON       reduce using rule 123 (exp2 -> OR meteOper exp .)
    LEFTBRACK       reduce using rule 123 (exp2 -> OR meteOper exp .)
    RIGHTBRACK      reduce using rule 123 (exp2 -> OR meteOper exp .)
    RIGHTPAR        reduce using rule 123 (exp2 -> OR meteOper exp .)


state 187

    (110) arreglo -> ID LEFTBRACK exp cuadVer . RIGHTBRACK arreglo2

    RIGHTBRACK      shift and go to state 214


state 188

    (102) exp -> LEFTPAR metePar exp RIGHTPAR . sacaPar exp2 generaCuad
    (104) sacaPar -> .

    LESS            reduce using rule 104 (sacaPar -> .)
    GRTR            reduce using rule 104 (sacaPar -> .)
    EQ              reduce using rule 104 (sacaPar -> .)
    NOTEQ           reduce using rule 104 (sacaPar -> .)
    AND             reduce using rule 104 (sacaPar -> .)
    OR              reduce using rule 104 (sacaPar -> .)
    SUM             reduce using rule 104 (sacaPar -> .)
    MINUS           reduce using rule 104 (sacaPar -> .)
    MULTP           reduce using rule 104 (sacaPar -> .)
    DIVIDE          reduce using rule 104 (sacaPar -> .)
    COMMA           reduce using rule 104 (sacaPar -> .)
    SEMICOLON       reduce using rule 104 (sacaPar -> .)
    LEFTBRACK       reduce using rule 104 (sacaPar -> .)
    RIGHTBRACK      reduce using rule 104 (sacaPar -> .)
    RIGHTPAR        reduce using rule 104 (sacaPar -> .)

    sacaPar                        shift and go to state 215

state 189

    (11) array -> dim1 LEFTBRACK exp getTam RIGHTBRACK . array
    (11) array -> . dim1 LEFTBRACK exp getTam RIGHTBRACK array
    (32) array -> . empty
    (10) dim1 -> .
    (138) empty -> .

    LEFTBRACK       reduce using rule 10 (dim1 -> .)
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)

    array                          shift and go to state 216
    dim1                           shift and go to state 42
    empty                          shift and go to state 45

state 190

    (13) declare3 -> COMMA ID altaVarGlobal declare3 .

    SEMICOLON       reduce using rule 13 (declare3 -> COMMA ID altaVarGlobal declare3 .)


state 191

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto . est functReturn endproc RIGHTKEY
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RETURN          reduce using rule 138 (empty -> .)
    RIGHTKEY        reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 217
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    cycles                         shift and go to state 84
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    declareLocal                   shift and go to state 88
    linea                          shift and go to state 89

state 192

    (24) funct2 -> type ID altaVarLocal funct3 .

    RIGHTPAR        reduce using rule 24 (funct2 -> type ID altaVarLocal funct3 .)


state 193

    (25) funct3 -> COMMA . type ID altaVarLocal funct3
    (33) type -> . type2
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    type                           shift and go to state 218
    type2                          shift and go to state 21

state 194

    (27) funct3 -> empty .

    RIGHTPAR        reduce using rule 27 (funct3 -> empty .)


state 195

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA . INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 219


state 196

    (94) do-while -> DO meteSalto LEFTKEY est . RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

    RIGHTKEY        shift and go to state 220


state 197

    (136) input -> READ LEFTPAR ID meteID . generaReadCuad RIGHTPAR SEMICOLON
    (137) generaReadCuad -> .

    RIGHTPAR        reduce using rule 137 (generaReadCuad -> .)

    generaReadCuad                 shift and go to state 221

state 198

    (64) declareRecursivoLocal -> type ID altaVarLocal . assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (65) assignmentDecl -> . ASSGN meteAssign exp generaCuad
    (70) assignmentDecl -> . empty
    (138) empty -> .

    ASSGN           shift and go to state 36
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)

    assignmentDecl                 shift and go to state 222
    empty                          shift and go to state 38

state 199

    (97) while -> WHILE LEFTPAR while2 RIGHTPAR . gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (84) gotoFCuad -> .

    LEFTKEY         reduce using rule 84 (gotoFCuad -> .)

    gotoFCuad                      shift and go to state 223

state 200

    (148) linea -> LINE LEFTPAR INTEGER COMMA . ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    ID              shift and go to state 224


state 201

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA . ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    ID              shift and go to state 225


state 202

    (130) output -> WRITE LEFTPAR output2 RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 226


state 203

    (134) output2 -> QUOTE ID . QUOTE output2

    QUOTE           shift and go to state 227


state 204

    (133) output2 -> ID meteID . generaWriteCuad output2
    (131) generaWriteCuad -> .

    ID              reduce using rule 131 (generaWriteCuad -> .)
    QUOTE           reduce using rule 131 (generaWriteCuad -> .)
    RIGHTPAR        reduce using rule 131 (generaWriteCuad -> .)

    generaWriteCuad                shift and go to state 228

state 205

    (79) assignment -> ID ASSGN meteVar llamadaAFunct . SEMICOLON

    SEMICOLON       shift and go to state 229


state 206

    (117) exp -> empty .
    (58) llamadaAFunct -> empty .
    (69) number -> empty .
    (115) arreglo -> empty .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 58 (llamadaAFunct -> empty .)
  ! reduce/reduce conflict for LESS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 58 (llamadaAFunct -> empty .)
    SEMICOLON       reduce using rule 58 (llamadaAFunct -> empty .)
    LESS            reduce using rule 69 (number -> empty .)
    GRTR            reduce using rule 69 (number -> empty .)
    EQ              reduce using rule 69 (number -> empty .)
    NOTEQ           reduce using rule 69 (number -> empty .)
    AND             reduce using rule 69 (number -> empty .)
    OR              reduce using rule 69 (number -> empty .)
    SUM             reduce using rule 69 (number -> empty .)
    MINUS           reduce using rule 69 (number -> empty .)
    MULTP           reduce using rule 69 (number -> empty .)
    DIVIDE          reduce using rule 69 (number -> empty .)

  ! SEMICOLON       [ reduce using rule 117 (exp -> empty .) ]
  ! SEMICOLON       [ reduce using rule 69 (number -> empty .) ]
  ! LESS            [ reduce using rule 115 (arreglo -> empty .) ]
  ! GRTR            [ reduce using rule 115 (arreglo -> empty .) ]
  ! EQ              [ reduce using rule 115 (arreglo -> empty .) ]
  ! NOTEQ           [ reduce using rule 115 (arreglo -> empty .) ]
  ! AND             [ reduce using rule 115 (arreglo -> empty .) ]
  ! OR              [ reduce using rule 115 (arreglo -> empty .) ]
  ! SUM             [ reduce using rule 115 (arreglo -> empty .) ]
  ! MINUS           [ reduce using rule 115 (arreglo -> empty .) ]
  ! MULTP           [ reduce using rule 115 (arreglo -> empty .) ]
  ! DIVIDE          [ reduce using rule 115 (arreglo -> empty .) ]
  ! SEMICOLON       [ reduce using rule 115 (arreglo -> empty .) ]


state 207

    (101) exp -> ID . meteExp exp2
    (54) llamadaAFunct -> ID . cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (110) arreglo -> ID . LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (105) meteExp -> .
    (55) cuadERA -> .

    LEFTBRACK       shift and go to state 104
    LESS            reduce using rule 105 (meteExp -> .)
    GRTR            reduce using rule 105 (meteExp -> .)
    EQ              reduce using rule 105 (meteExp -> .)
    NOTEQ           reduce using rule 105 (meteExp -> .)
    AND             reduce using rule 105 (meteExp -> .)
    OR              reduce using rule 105 (meteExp -> .)
    SUM             reduce using rule 105 (meteExp -> .)
    MINUS           reduce using rule 105 (meteExp -> .)
    MULTP           reduce using rule 105 (meteExp -> .)
    DIVIDE          reduce using rule 105 (meteExp -> .)
    SEMICOLON       reduce using rule 105 (meteExp -> .)
    LEFTPAR         reduce using rule 55 (cuadERA -> .)

    meteExp                        shift and go to state 105
    cuadERA                        shift and go to state 133

state 208

    (78) assignment -> ID ASSGN meteVar exp . generaCuad SEMICOLON
    (106) generaCuad -> .

    SEMICOLON       reduce using rule 106 (generaCuad -> .)

    generaCuad                     shift and go to state 230

state 209

    (54) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 . gosubCuad generaCuadFunct RIGHTPAR
    (57) gosubCuad -> .

    RIGHTPAR        reduce using rule 57 (gosubCuad -> .)

    gosubCuad                      shift and go to state 231

state 210

    (62) llamadaAFunct2 -> empty .
    (117) exp -> empty .
    (69) number -> empty .
    (115) arreglo -> empty .

  ! reduce/reduce conflict for RIGHTPAR resolved using rule 62 (llamadaAFunct2 -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 62 (llamadaAFunct2 -> empty .)
  ! reduce/reduce conflict for LESS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for GRTR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for EQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for NOTEQ resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for AND resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for OR resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for SUM resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for MULTP resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 69 (number -> empty .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 62 (llamadaAFunct2 -> empty .)
    RIGHTPAR        reduce using rule 62 (llamadaAFunct2 -> empty .)
    LESS            reduce using rule 69 (number -> empty .)
    GRTR            reduce using rule 69 (number -> empty .)
    EQ              reduce using rule 69 (number -> empty .)
    NOTEQ           reduce using rule 69 (number -> empty .)
    AND             reduce using rule 69 (number -> empty .)
    OR              reduce using rule 69 (number -> empty .)
    SUM             reduce using rule 69 (number -> empty .)
    MINUS           reduce using rule 69 (number -> empty .)
    MULTP           reduce using rule 69 (number -> empty .)
    DIVIDE          reduce using rule 69 (number -> empty .)
    COMMA           reduce using rule 69 (number -> empty .)

  ! COMMA           [ reduce using rule 117 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 117 (exp -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 69 (number -> empty .) ]
  ! LESS            [ reduce using rule 115 (arreglo -> empty .) ]
  ! GRTR            [ reduce using rule 115 (arreglo -> empty .) ]
  ! EQ              [ reduce using rule 115 (arreglo -> empty .) ]
  ! NOTEQ           [ reduce using rule 115 (arreglo -> empty .) ]
  ! AND             [ reduce using rule 115 (arreglo -> empty .) ]
  ! OR              [ reduce using rule 115 (arreglo -> empty .) ]
  ! SUM             [ reduce using rule 115 (arreglo -> empty .) ]
  ! MINUS           [ reduce using rule 115 (arreglo -> empty .) ]
  ! MULTP           [ reduce using rule 115 (arreglo -> empty .) ]
  ! DIVIDE          [ reduce using rule 115 (arreglo -> empty .) ]
  ! COMMA           [ reduce using rule 115 (arreglo -> empty .) ]
  ! RIGHTPAR        [ reduce using rule 115 (arreglo -> empty .) ]


state 211

    (59) llamadaAFunct2 -> exp . cuadParam llamadaAFunct3
    (56) cuadParam -> .

    COMMA           reduce using rule 56 (cuadParam -> .)
    RIGHTPAR        reduce using rule 56 (cuadParam -> .)

    cuadParam                      shift and go to state 232

state 212

    (83) conditional -> IF LEFTPAR exp generaCuad . RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse

    RIGHTPAR        shift and go to state 233


state 213

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA . ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    ID              shift and go to state 234


state 214

    (110) arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK . arreglo2
    (111) arreglo2 -> . LEFTBRACK exp cuadVer2 RIGHTBRACK
    (112) arreglo2 -> . empty
    (138) empty -> .

  ! shift/reduce conflict for LEFTBRACK resolved as shift
    LEFTBRACK       shift and go to state 235
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)

  ! LEFTBRACK       [ reduce using rule 138 (empty -> .) ]

    arreglo2                       shift and go to state 236
    empty                          shift and go to state 237

state 215

    (102) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar . exp2 generaCuad
    (118) exp2 -> . LESS meteOper exp
    (119) exp2 -> . GRTR meteOper exp
    (120) exp2 -> . EQ meteOper exp
    (121) exp2 -> . NOTEQ meteOper exp
    (122) exp2 -> . AND meteOper exp
    (123) exp2 -> . OR meteOper exp
    (124) exp2 -> . SUM meteOper exp
    (126) exp2 -> . MINUS meteOper exp
    (127) exp2 -> . MULTP meteOper exp
    (128) exp2 -> . DIVIDE meteOper exp
    (129) exp2 -> . empty
    (138) empty -> .

    LESS            shift and go to state 92
    GRTR            shift and go to state 97
    EQ              shift and go to state 99
    NOTEQ           shift and go to state 93
    AND             shift and go to state 90
    OR              shift and go to state 100
    SUM             shift and go to state 95
    MINUS           shift and go to state 96
    MULTP           shift and go to state 98
    DIVIDE          shift and go to state 91
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    RIGHTPAR        reduce using rule 138 (empty -> .)

    exp2                           shift and go to state 238
    empty                          shift and go to state 101

state 216

    (11) array -> dim1 LEFTBRACK exp getTam RIGHTBRACK array .

    COMMA           reduce using rule 11 (array -> dim1 LEFTBRACK exp getTam RIGHTBRACK array .)
    SEMICOLON       reduce using rule 11 (array -> dim1 LEFTBRACK exp getTam RIGHTBRACK array .)


state 217

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est . functReturn endproc RIGHTKEY
    (19) functReturn -> . RETURN NUMBER generaRet SEMICOLON
    (20) functReturn -> . RETURN ID generaRet SEMICOLON
    (22) functReturn -> . empty
    (138) empty -> .

    RETURN          shift and go to state 239
    RIGHTKEY        reduce using rule 138 (empty -> .)

    functReturn                    shift and go to state 240
    empty                          shift and go to state 241

state 218

    (25) funct3 -> COMMA type . ID altaVarLocal funct3

    ID              shift and go to state 242


state 219

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER . COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 243


state 220

    (94) do-while -> DO meteSalto LEFTKEY est RIGHTKEY . WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

    WHILE           shift and go to state 244


state 221

    (136) input -> READ LEFTPAR ID meteID generaReadCuad . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 245


state 222

    (64) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl . declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (71) declare2Local -> . array
    (75) declare2Local -> . empty
    (11) array -> . dim1 LEFTBRACK exp getTam RIGHTBRACK array
    (32) array -> . empty
    (138) empty -> .
    (10) dim1 -> .

    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 10 (dim1 -> .)

    declare2Local                  shift and go to state 246
    dim1                           shift and go to state 42
    array                          shift and go to state 247
    empty                          shift and go to state 248

state 223

    (97) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad . LEFTKEY est RIGHTKEY llenaCuadF

    LEFTKEY         shift and go to state 249


state 224

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID . COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    COMMA           shift and go to state 250


state 225

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID . COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 251


state 226

    (130) output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .

    IF              reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    CIRCLE          reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    SQUARE          reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    TRIANGLE        reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    LINE            reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    READ            reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    ID              reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    DO              reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 130 (output -> WRITE LEFTPAR output2 RIGHTPAR SEMICOLON .)


state 227

    (134) output2 -> QUOTE ID QUOTE . output2
    (133) output2 -> . ID meteID generaWriteCuad output2
    (134) output2 -> . QUOTE ID QUOTE output2
    (135) output2 -> . empty
    (138) empty -> .

    ID              shift and go to state 171
    QUOTE           shift and go to state 170
    RIGHTPAR        reduce using rule 138 (empty -> .)

    output2                        shift and go to state 252
    empty                          shift and go to state 172

state 228

    (133) output2 -> ID meteID generaWriteCuad . output2
    (133) output2 -> . ID meteID generaWriteCuad output2
    (134) output2 -> . QUOTE ID QUOTE output2
    (135) output2 -> . empty
    (138) empty -> .

    ID              shift and go to state 171
    QUOTE           shift and go to state 170
    RIGHTPAR        reduce using rule 138 (empty -> .)

    output2                        shift and go to state 253
    empty                          shift and go to state 172

state 229

    (79) assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .

    IF              reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    CIRCLE          reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    SQUARE          reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    TRIANGLE        reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    LINE            reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    DECLARE         reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    READ            reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    WRITE           reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    ID              reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    WHILE           reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    DO              reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    RIGHTKEY        reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)
    RETURN          reduce using rule 79 (assignment -> ID ASSGN meteVar llamadaAFunct SEMICOLON .)


state 230

    (78) assignment -> ID ASSGN meteVar exp generaCuad . SEMICOLON

    SEMICOLON       shift and go to state 254


state 231

    (54) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad . generaCuadFunct RIGHTPAR
    (80) generaCuadFunct -> .

    RIGHTPAR        reduce using rule 80 (generaCuadFunct -> .)

    generaCuadFunct                shift and go to state 255

state 232

    (59) llamadaAFunct2 -> exp cuadParam . llamadaAFunct3
    (60) llamadaAFunct3 -> . COMMA llamadaAFunct2
    (61) llamadaAFunct3 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 257
    RIGHTPAR        reduce using rule 138 (empty -> .)

    llamadaAFunct3                 shift and go to state 256
    empty                          shift and go to state 258

state 233

    (83) conditional -> IF LEFTPAR exp generaCuad RIGHTPAR . gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (84) gotoFCuad -> .

    LEFTKEY         reduce using rule 84 (gotoFCuad -> .)

    gotoFCuad                      shift and go to state 259

state 234

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID . COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 260


state 235

    (111) arreglo2 -> LEFTBRACK . exp cuadVer2 RIGHTBRACK
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty
    (138) empty -> .

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53
    RIGHTBRACK      reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)

    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 261
    empty                          shift and go to state 51

state 236

    (110) arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .

    LESS            reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    GRTR            reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    EQ              reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    NOTEQ           reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    AND             reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    OR              reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    SUM             reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    MINUS           reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    MULTP           reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    DIVIDE          reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    RIGHTPAR        reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    COMMA           reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    SEMICOLON       reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    LEFTBRACK       reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)
    RIGHTBRACK      reduce using rule 110 (arreglo -> ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2 .)


state 237

    (112) arreglo2 -> empty .

    LESS            reduce using rule 112 (arreglo2 -> empty .)
    GRTR            reduce using rule 112 (arreglo2 -> empty .)
    EQ              reduce using rule 112 (arreglo2 -> empty .)
    NOTEQ           reduce using rule 112 (arreglo2 -> empty .)
    AND             reduce using rule 112 (arreglo2 -> empty .)
    OR              reduce using rule 112 (arreglo2 -> empty .)
    SUM             reduce using rule 112 (arreglo2 -> empty .)
    MINUS           reduce using rule 112 (arreglo2 -> empty .)
    MULTP           reduce using rule 112 (arreglo2 -> empty .)
    DIVIDE          reduce using rule 112 (arreglo2 -> empty .)
    COMMA           reduce using rule 112 (arreglo2 -> empty .)
    SEMICOLON       reduce using rule 112 (arreglo2 -> empty .)
    LEFTBRACK       reduce using rule 112 (arreglo2 -> empty .)
    RIGHTBRACK      reduce using rule 112 (arreglo2 -> empty .)
    RIGHTPAR        reduce using rule 112 (arreglo2 -> empty .)


state 238

    (102) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 . generaCuad
    (106) generaCuad -> .

    COMMA           reduce using rule 106 (generaCuad -> .)
    SEMICOLON       reduce using rule 106 (generaCuad -> .)
    LEFTBRACK       reduce using rule 106 (generaCuad -> .)
    RIGHTBRACK      reduce using rule 106 (generaCuad -> .)
    RIGHTPAR        reduce using rule 106 (generaCuad -> .)

    generaCuad                     shift and go to state 262

state 239

    (19) functReturn -> RETURN . NUMBER generaRet SEMICOLON
    (20) functReturn -> RETURN . ID generaRet SEMICOLON

    NUMBER          shift and go to state 263
    ID              shift and go to state 264


state 240

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn . endproc RIGHTKEY
    (18) endproc -> .

    RIGHTKEY        reduce using rule 18 (endproc -> .)

    endproc                        shift and go to state 265

state 241

    (22) functReturn -> empty .

    RIGHTKEY        reduce using rule 22 (functReturn -> empty .)


state 242

    (25) funct3 -> COMMA type ID . altaVarLocal funct3
    (77) altaVarLocal -> .

    COMMA           reduce using rule 77 (altaVarLocal -> .)
    RIGHTPAR        reduce using rule 77 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 266

state 243

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA . INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 267


state 244

    (94) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE . LEFTPAR while2 RIGHTPAR gotoVCuad

    LEFTPAR         shift and go to state 268


state 245

    (136) input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 269


state 246

    (64) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local . declare3Local SEMICOLON declareRecursivoLocal
    (72) declare3Local -> . COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local
    (76) declare3Local -> . empty
    (138) empty -> .

    COMMA           shift and go to state 270
    SEMICOLON       reduce using rule 138 (empty -> .)

    empty                          shift and go to state 271
    declare3Local                  shift and go to state 272

state 247

    (71) declare2Local -> array .

    COMMA           reduce using rule 71 (declare2Local -> array .)
    SEMICOLON       reduce using rule 71 (declare2Local -> array .)


state 248

    (75) declare2Local -> empty .
    (32) array -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 32 (array -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 32 (array -> empty .)
    COMMA           reduce using rule 32 (array -> empty .)
    SEMICOLON       reduce using rule 32 (array -> empty .)

  ! COMMA           [ reduce using rule 75 (declare2Local -> empty .) ]
  ! SEMICOLON       [ reduce using rule 75 (declare2Local -> empty .) ]


state 249

    (97) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY . est RIGHTKEY llenaCuadF
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 273
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    cycles                         shift and go to state 84
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    declareLocal                   shift and go to state 88
    linea                          shift and go to state 89

state 250

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA . INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 274


state 251

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA . BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    BOOL            shift and go to state 275


state 252

    (134) output2 -> QUOTE ID QUOTE output2 .

    RIGHTPAR        reduce using rule 134 (output2 -> QUOTE ID QUOTE output2 .)


state 253

    (133) output2 -> ID meteID generaWriteCuad output2 .

    RIGHTPAR        reduce using rule 133 (output2 -> ID meteID generaWriteCuad output2 .)


state 254

    (78) assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .

    IF              reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    CIRCLE          reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    SQUARE          reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    TRIANGLE        reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    LINE            reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    DECLARE         reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    READ            reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    WRITE           reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    ID              reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    WHILE           reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    DO              reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    RIGHTKEY        reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)
    RETURN          reduce using rule 78 (assignment -> ID ASSGN meteVar exp generaCuad SEMICOLON .)


state 255

    (54) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct . RIGHTPAR

    RIGHTPAR        shift and go to state 276


state 256

    (59) llamadaAFunct2 -> exp cuadParam llamadaAFunct3 .

    RIGHTPAR        reduce using rule 59 (llamadaAFunct2 -> exp cuadParam llamadaAFunct3 .)


state 257

    (60) llamadaAFunct3 -> COMMA . llamadaAFunct2
    (59) llamadaAFunct2 -> . exp cuadParam llamadaAFunct3
    (62) llamadaAFunct2 -> . empty
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (138) empty -> .
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    RIGHTPAR        reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53

    llamadaAFunct2                 shift and go to state 277
    number                         shift and go to state 48
    arreglo                        shift and go to state 49
    exp                            shift and go to state 211
    empty                          shift and go to state 210

state 258

    (61) llamadaAFunct3 -> empty .

    RIGHTPAR        reduce using rule 61 (llamadaAFunct3 -> empty .)


state 259

    (83) conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad . LEFTKEY est RIGHTKEY conditionalElse

    LEFTKEY         shift and go to state 278


state 260

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA . BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    BOOL            shift and go to state 279


state 261

    (111) arreglo2 -> LEFTBRACK exp . cuadVer2 RIGHTBRACK
    (114) cuadVer2 -> .

    RIGHTBRACK      reduce using rule 114 (cuadVer2 -> .)

    cuadVer2                       shift and go to state 280

state 262

    (102) exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .

    COMMA           reduce using rule 102 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    SEMICOLON       reduce using rule 102 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    LEFTBRACK       reduce using rule 102 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    RIGHTBRACK      reduce using rule 102 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)
    RIGHTPAR        reduce using rule 102 (exp -> LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad .)


state 263

    (19) functReturn -> RETURN NUMBER . generaRet SEMICOLON
    (21) generaRet -> .

    SEMICOLON       reduce using rule 21 (generaRet -> .)

    generaRet                      shift and go to state 281

state 264

    (20) functReturn -> RETURN ID . generaRet SEMICOLON
    (21) generaRet -> .

    SEMICOLON       reduce using rule 21 (generaRet -> .)

    generaRet                      shift and go to state 282

state 265

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc . RIGHTKEY

    RIGHTKEY        shift and go to state 283


state 266

    (25) funct3 -> COMMA type ID altaVarLocal . funct3
    (25) funct3 -> . COMMA type ID altaVarLocal funct3
    (27) funct3 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 193
    RIGHTPAR        reduce using rule 138 (empty -> .)

    funct3                         shift and go to state 284
    empty                          shift and go to state 194

state 267

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER . COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 285


state 268

    (94) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR . while2 RIGHTPAR gotoVCuad
    (99) while2 -> . exp
    (100) while2 -> . empty
    (101) exp -> . ID meteExp exp2
    (102) exp -> . LEFTPAR metePar exp RIGHTPAR sacaPar exp2 generaCuad
    (107) exp -> . number exp2
    (108) exp -> . arreglo exp2
    (109) exp -> . BOOL exp2
    (117) exp -> . empty
    (138) empty -> .
    (67) number -> . INTEGER meteNum
    (68) number -> . FLOAT meteNum
    (69) number -> . empty
    (110) arreglo -> . ID LEFTBRACK exp cuadVer RIGHTBRACK arreglo2
    (115) arreglo -> . empty

    ID              shift and go to state 52
    LEFTPAR         shift and go to state 54
    BOOL            shift and go to state 55
    RIGHTPAR        reduce using rule 138 (empty -> .)
    LESS            reduce using rule 138 (empty -> .)
    GRTR            reduce using rule 138 (empty -> .)
    EQ              reduce using rule 138 (empty -> .)
    NOTEQ           reduce using rule 138 (empty -> .)
    AND             reduce using rule 138 (empty -> .)
    OR              reduce using rule 138 (empty -> .)
    SUM             reduce using rule 138 (empty -> .)
    MINUS           reduce using rule 138 (empty -> .)
    MULTP           reduce using rule 138 (empty -> .)
    DIVIDE          reduce using rule 138 (empty -> .)
    INTEGER         shift and go to state 50
    FLOAT           shift and go to state 53

    arreglo                        shift and go to state 49
    number                         shift and go to state 48
    while2                         shift and go to state 286
    exp                            shift and go to state 165
    empty                          shift and go to state 163

state 269

    (136) input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .

    IF              reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    CIRCLE          reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    SQUARE          reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    TRIANGLE        reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    LINE            reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    READ            reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    ID              reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    DO              reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 136 (input -> READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON .)


state 270

    (72) declare3Local -> COMMA . ID altaVarLocal assignmentDecl declare2Local declare3Local

    ID              shift and go to state 287


state 271

    (76) declare3Local -> empty .

    SEMICOLON       reduce using rule 76 (declare3Local -> empty .)


state 272

    (64) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local . SEMICOLON declareRecursivoLocal

    SEMICOLON       shift and go to state 288


state 273

    (97) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est . RIGHTKEY llenaCuadF

    RIGHTKEY        shift and go to state 289


state 274

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER . COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    COMMA           shift and go to state 290


state 275

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL . COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 291


state 276

    (54) llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .

    IF              reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    CIRCLE          reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    SQUARE          reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    TRIANGLE        reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    LINE            reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    DECLARE         reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    READ            reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    WRITE           reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    ID              reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    WHILE           reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    DO              reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    RIGHTKEY        reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    SEMICOLON       reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)
    RETURN          reduce using rule 54 (llamadaAFunct -> ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR .)


state 277

    (60) llamadaAFunct3 -> COMMA llamadaAFunct2 .

    RIGHTPAR        reduce using rule 60 (llamadaAFunct3 -> COMMA llamadaAFunct2 .)


state 278

    (83) conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY . est RIGHTKEY conditionalElse
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 292
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    cycles                         shift and go to state 84
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    declareLocal                   shift and go to state 88
    linea                          shift and go to state 89

state 279

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL . COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 293


state 280

    (111) arreglo2 -> LEFTBRACK exp cuadVer2 . RIGHTBRACK

    RIGHTBRACK      shift and go to state 294


state 281

    (19) functReturn -> RETURN NUMBER generaRet . SEMICOLON

    SEMICOLON       shift and go to state 295


state 282

    (20) functReturn -> RETURN ID generaRet . SEMICOLON

    SEMICOLON       shift and go to state 296


state 283

    (15) funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY .

    FUNCTION        reduce using rule 15 (funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY .)
    MAIN            reduce using rule 15 (funct -> FUNCTION type ID altaModulo LEFTPAR funct2 RIGHTPAR LEFTKEY guardaSalto est functReturn endproc RIGHTKEY .)


state 284

    (25) funct3 -> COMMA type ID altaVarLocal funct3 .

    RIGHTPAR        reduce using rule 25 (funct3 -> COMMA type ID altaVarLocal funct3 .)


state 285

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA . ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    ID              shift and go to state 297


state 286

    (94) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 . RIGHTPAR gotoVCuad

    RIGHTPAR        shift and go to state 298


state 287

    (72) declare3Local -> COMMA ID . altaVarLocal assignmentDecl declare2Local declare3Local
    (77) altaVarLocal -> .

    ASSGN           reduce using rule 77 (altaVarLocal -> .)
    COMMA           reduce using rule 77 (altaVarLocal -> .)
    LEFTBRACK       reduce using rule 77 (altaVarLocal -> .)
    SEMICOLON       reduce using rule 77 (altaVarLocal -> .)

    altaVarLocal                   shift and go to state 299

state 288

    (64) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON . declareRecursivoLocal
    (64) declareRecursivoLocal -> . type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal
    (73) declareRecursivoLocal -> . empty
    (33) type -> . type2
    (138) empty -> .
    (34) type2 -> . INT
    (35) type2 -> . FLOAT
    (36) type2 -> . STRING
    (37) type2 -> . BOOL
    (38) type2 -> . VOID

    IF              reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    LINE            reduce using rule 138 (empty -> .)
    DECLARE         reduce using rule 138 (empty -> .)
    READ            reduce using rule 138 (empty -> .)
    WRITE           reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    DO              reduce using rule 138 (empty -> .)
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 16
    STRING          shift and go to state 13
    BOOL            shift and go to state 17
    VOID            shift and go to state 15

    declareRecursivoLocal          shift and go to state 300
    type2                          shift and go to state 21
    type                           shift and go to state 120
    empty                          shift and go to state 121

state 289

    (97) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY . llenaCuadF
    (98) llenaCuadF -> .

    IF              reduce using rule 98 (llenaCuadF -> .)
    CIRCLE          reduce using rule 98 (llenaCuadF -> .)
    SQUARE          reduce using rule 98 (llenaCuadF -> .)
    TRIANGLE        reduce using rule 98 (llenaCuadF -> .)
    LINE            reduce using rule 98 (llenaCuadF -> .)
    DECLARE         reduce using rule 98 (llenaCuadF -> .)
    READ            reduce using rule 98 (llenaCuadF -> .)
    WRITE           reduce using rule 98 (llenaCuadF -> .)
    ID              reduce using rule 98 (llenaCuadF -> .)
    WHILE           reduce using rule 98 (llenaCuadF -> .)
    DO              reduce using rule 98 (llenaCuadF -> .)
    RIGHTKEY        reduce using rule 98 (llenaCuadF -> .)
    RETURN          reduce using rule 98 (llenaCuadF -> .)

    llenaCuadF                     shift and go to state 301

state 290

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA . INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 302


state 291

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA . INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 303


state 292

    (83) conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est . RIGHTKEY conditionalElse

    RIGHTKEY        shift and go to state 304


state 293

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA . INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 305


state 294

    (111) arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .

    LESS            reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    GRTR            reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    EQ              reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    NOTEQ           reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    AND             reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    OR              reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    SUM             reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    MINUS           reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    MULTP           reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    DIVIDE          reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    COMMA           reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    SEMICOLON       reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    LEFTBRACK       reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    RIGHTBRACK      reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)
    RIGHTPAR        reduce using rule 111 (arreglo2 -> LEFTBRACK exp cuadVer2 RIGHTBRACK .)


state 295

    (19) functReturn -> RETURN NUMBER generaRet SEMICOLON .

    RIGHTKEY        reduce using rule 19 (functReturn -> RETURN NUMBER generaRet SEMICOLON .)


state 296

    (20) functReturn -> RETURN ID generaRet SEMICOLON .

    RIGHTKEY        reduce using rule 20 (functReturn -> RETURN ID generaRet SEMICOLON .)


state 297

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID . COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 306


state 298

    (94) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR . gotoVCuad
    (95) gotoVCuad -> .

    IF              reduce using rule 95 (gotoVCuad -> .)
    CIRCLE          reduce using rule 95 (gotoVCuad -> .)
    SQUARE          reduce using rule 95 (gotoVCuad -> .)
    TRIANGLE        reduce using rule 95 (gotoVCuad -> .)
    LINE            reduce using rule 95 (gotoVCuad -> .)
    DECLARE         reduce using rule 95 (gotoVCuad -> .)
    READ            reduce using rule 95 (gotoVCuad -> .)
    WRITE           reduce using rule 95 (gotoVCuad -> .)
    ID              reduce using rule 95 (gotoVCuad -> .)
    WHILE           reduce using rule 95 (gotoVCuad -> .)
    DO              reduce using rule 95 (gotoVCuad -> .)
    RIGHTKEY        reduce using rule 95 (gotoVCuad -> .)
    RETURN          reduce using rule 95 (gotoVCuad -> .)

    gotoVCuad                      shift and go to state 307

state 299

    (72) declare3Local -> COMMA ID altaVarLocal . assignmentDecl declare2Local declare3Local
    (65) assignmentDecl -> . ASSGN meteAssign exp generaCuad
    (70) assignmentDecl -> . empty
    (138) empty -> .

    ASSGN           shift and go to state 36
    COMMA           reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)

    assignmentDecl                 shift and go to state 308
    empty                          shift and go to state 38

state 300

    (64) declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .

    IF              reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    CIRCLE          reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    SQUARE          reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    TRIANGLE        reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    LINE            reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    DECLARE         reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    READ            reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    WRITE           reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    ID              reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    WHILE           reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    DO              reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    RIGHTKEY        reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)
    RETURN          reduce using rule 64 (declareRecursivoLocal -> type ID altaVarLocal assignmentDecl declare2Local declare3Local SEMICOLON declareRecursivoLocal .)


state 301

    (97) while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .

    IF              reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    CIRCLE          reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    SQUARE          reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    TRIANGLE        reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    LINE            reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    DECLARE         reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    READ            reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    WRITE           reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    ID              reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    WHILE           reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    DO              reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    RIGHTKEY        reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)
    RETURN          reduce using rule 97 (while -> WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF .)


state 302

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER . COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    COMMA           shift and go to state 309


state 303

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER . COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 310


state 304

    (83) conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY . conditionalElse
    (86) conditionalElse -> . gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto
    (88) conditionalElse -> . empty
    (85) gotoCuad -> .
    (138) empty -> .

    ELSE            reduce using rule 85 (gotoCuad -> .)
    IF              reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    LINE            reduce using rule 138 (empty -> .)
    DECLARE         reduce using rule 138 (empty -> .)
    READ            reduce using rule 138 (empty -> .)
    WRITE           reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    DO              reduce using rule 138 (empty -> .)
    RIGHTKEY        reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)

    conditionalElse                shift and go to state 311
    gotoCuad                       shift and go to state 312
    empty                          shift and go to state 313

state 305

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER . COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 314


state 306

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA . BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    BOOL            shift and go to state 315


state 307

    (94) do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .

    IF              reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    CIRCLE          reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    SQUARE          reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    TRIANGLE        reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    LINE            reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    DECLARE         reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    READ            reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    WRITE           reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    ID              reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    WHILE           reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    DO              reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    RIGHTKEY        reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)
    RETURN          reduce using rule 94 (do-while -> DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad .)


state 308

    (72) declare3Local -> COMMA ID altaVarLocal assignmentDecl . declare2Local declare3Local
    (71) declare2Local -> . array
    (75) declare2Local -> . empty
    (11) array -> . dim1 LEFTBRACK exp getTam RIGHTBRACK array
    (32) array -> . empty
    (138) empty -> .
    (10) dim1 -> .

    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    LEFTBRACK       reduce using rule 10 (dim1 -> .)

    declare2Local                  shift and go to state 316
    dim1                           shift and go to state 42
    array                          shift and go to state 247
    empty                          shift and go to state 248

state 309

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA . INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 317


state 310

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA . INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 318


state 311

    (83) conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .

    IF              reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    CIRCLE          reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    SQUARE          reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    TRIANGLE        reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    LINE            reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    DECLARE         reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    READ            reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    WRITE           reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    ID              reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    WHILE           reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    DO              reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    RIGHTKEY        reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)
    RETURN          reduce using rule 83 (conditional -> IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse .)


state 312

    (86) conditionalElse -> gotoCuad . ELSE LEFTKEY est RIGHTKEY llenaGoto

    ELSE            shift and go to state 319


state 313

    (88) conditionalElse -> empty .

    IF              reduce using rule 88 (conditionalElse -> empty .)
    CIRCLE          reduce using rule 88 (conditionalElse -> empty .)
    SQUARE          reduce using rule 88 (conditionalElse -> empty .)
    TRIANGLE        reduce using rule 88 (conditionalElse -> empty .)
    LINE            reduce using rule 88 (conditionalElse -> empty .)
    DECLARE         reduce using rule 88 (conditionalElse -> empty .)
    READ            reduce using rule 88 (conditionalElse -> empty .)
    WRITE           reduce using rule 88 (conditionalElse -> empty .)
    ID              reduce using rule 88 (conditionalElse -> empty .)
    WHILE           reduce using rule 88 (conditionalElse -> empty .)
    DO              reduce using rule 88 (conditionalElse -> empty .)
    RIGHTKEY        reduce using rule 88 (conditionalElse -> empty .)
    RETURN          reduce using rule 88 (conditionalElse -> empty .)


state 314

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA . INTEGER generaCirculoCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 320


state 315

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL . COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 321


state 316

    (72) declare3Local -> COMMA ID altaVarLocal assignmentDecl declare2Local . declare3Local
    (72) declare3Local -> . COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local
    (76) declare3Local -> . empty
    (138) empty -> .

    COMMA           shift and go to state 270
    SEMICOLON       reduce using rule 138 (empty -> .)

    empty                          shift and go to state 271
    declare3Local                  shift and go to state 322

state 317

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER . COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    COMMA           shift and go to state 323


state 318

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER . generaCuadradoCuad RIGHTPAR SEMICOLON
    (144) generaCuadradoCuad -> .

    RIGHTPAR        reduce using rule 144 (generaCuadradoCuad -> .)

    generaCuadradoCuad             shift and go to state 324

state 319

    (86) conditionalElse -> gotoCuad ELSE . LEFTKEY est RIGHTKEY llenaGoto

    LEFTKEY         shift and go to state 325


state 320

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER . generaCirculoCuad RIGHTPAR SEMICOLON
    (141) generaCirculoCuad -> .

    RIGHTPAR        reduce using rule 141 (generaCirculoCuad -> .)

    generaCirculoCuad              shift and go to state 326

state 321

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA . INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 327


state 322

    (72) declare3Local -> COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local .

    SEMICOLON       reduce using rule 72 (declare3Local -> COMMA ID altaVarLocal assignmentDecl declare2Local declare3Local .)


state 323

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA . INTEGER generaCuadLinea RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 328


state 324

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 329


state 325

    (86) conditionalElse -> gotoCuad ELSE LEFTKEY . est RIGHTKEY llenaGoto
    (42) est -> . conditional est
    (43) est -> . circulo est
    (44) est -> . cuadro est
    (45) est -> . triangulo est
    (46) est -> . linea est
    (47) est -> . declareLocal est
    (48) est -> . cycles est
    (49) est -> . input est
    (50) est -> . output est
    (51) est -> . assignment est
    (52) est -> . llamadaAFunct est
    (53) est -> . empty
    (83) conditional -> . IF LEFTPAR exp generaCuad RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY conditionalElse
    (139) circulo -> . CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON
    (140) circulo -> . empty
    (142) cuadro -> . SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON
    (143) cuadro -> . empty
    (145) triangulo -> . TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON
    (146) triangulo -> . empty
    (148) linea -> . LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON
    (149) linea -> . empty
    (63) declareLocal -> . DECLARE declareRecursivoLocal
    (74) declareLocal -> . empty
    (91) cycles -> . while
    (92) cycles -> . empty
    (93) cycles -> . do-while
    (136) input -> . READ LEFTPAR ID meteID generaReadCuad RIGHTPAR SEMICOLON
    (130) output -> . WRITE LEFTPAR output2 RIGHTPAR SEMICOLON
    (78) assignment -> . ID ASSGN meteVar exp generaCuad SEMICOLON
    (79) assignment -> . ID ASSGN meteVar llamadaAFunct SEMICOLON
    (82) assignment -> . empty
    (54) llamadaAFunct -> . ID cuadERA LEFTPAR llamadaAFunct2 gosubCuad generaCuadFunct RIGHTPAR
    (58) llamadaAFunct -> . empty
    (138) empty -> .
    (97) while -> . WHILE LEFTPAR while2 RIGHTPAR gotoFCuad LEFTKEY est RIGHTKEY llenaCuadF
    (94) do-while -> . DO meteSalto LEFTKEY est RIGHTKEY WHILE LEFTPAR while2 RIGHTPAR gotoVCuad

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CIRCLE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for TRIANGLE resolved as shift
  ! shift/reduce conflict for LINE resolved as shift
  ! shift/reduce conflict for DECLARE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    IF              shift and go to state 83
    CIRCLE          shift and go to state 87
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 64
    LINE            shift and go to state 71
    DECLARE         shift and go to state 68
    READ            shift and go to state 66
    WRITE           shift and go to state 80
    ID              shift and go to state 81
    RIGHTKEY        reduce using rule 138 (empty -> .)
    WHILE           shift and go to state 69
    DO              shift and go to state 65

  ! IF              [ reduce using rule 138 (empty -> .) ]
  ! CIRCLE          [ reduce using rule 138 (empty -> .) ]
  ! SQUARE          [ reduce using rule 138 (empty -> .) ]
  ! TRIANGLE        [ reduce using rule 138 (empty -> .) ]
  ! LINE            [ reduce using rule 138 (empty -> .) ]
  ! DECLARE         [ reduce using rule 138 (empty -> .) ]
  ! READ            [ reduce using rule 138 (empty -> .) ]
  ! WRITE           [ reduce using rule 138 (empty -> .) ]
  ! ID              [ reduce using rule 138 (empty -> .) ]
  ! WHILE           [ reduce using rule 138 (empty -> .) ]
  ! DO              [ reduce using rule 138 (empty -> .) ]

    conditional                    shift and go to state 67
    cuadro                         shift and go to state 70
    est                            shift and go to state 330
    llamadaAFunct                  shift and go to state 73
    input                          shift and go to state 75
    empty                          shift and go to state 76
    triangulo                      shift and go to state 77
    assignment                     shift and go to state 79
    circulo                        shift and go to state 82
    declareLocal                   shift and go to state 88
    while                          shift and go to state 85
    do-while                       shift and go to state 74
    output                         shift and go to state 86
    cycles                         shift and go to state 84
    linea                          shift and go to state 89

state 326

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 331


state 327

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER . COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 332


state 328

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER . generaCuadLinea RIGHTPAR SEMICOLON
    (150) generaCuadLinea -> .

    RIGHTPAR        reduce using rule 150 (generaCuadLinea -> .)

    generaCuadLinea                shift and go to state 333

state 329

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 334


state 330

    (86) conditionalElse -> gotoCuad ELSE LEFTKEY est . RIGHTKEY llenaGoto

    RIGHTKEY        shift and go to state 335


state 331

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 336


state 332

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA . INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 337


state 333

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 338


state 334

    (142) cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .

    IF              reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    CIRCLE          reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    SQUARE          reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    TRIANGLE        reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    LINE            reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    READ            reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    ID              reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    DO              reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 142 (cuadro -> SQUARE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCuadradoCuad RIGHTPAR SEMICOLON .)


state 335

    (86) conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY . llenaGoto
    (87) llenaGoto -> .

    IF              reduce using rule 87 (llenaGoto -> .)
    CIRCLE          reduce using rule 87 (llenaGoto -> .)
    SQUARE          reduce using rule 87 (llenaGoto -> .)
    TRIANGLE        reduce using rule 87 (llenaGoto -> .)
    LINE            reduce using rule 87 (llenaGoto -> .)
    DECLARE         reduce using rule 87 (llenaGoto -> .)
    READ            reduce using rule 87 (llenaGoto -> .)
    WRITE           reduce using rule 87 (llenaGoto -> .)
    ID              reduce using rule 87 (llenaGoto -> .)
    WHILE           reduce using rule 87 (llenaGoto -> .)
    DO              reduce using rule 87 (llenaGoto -> .)
    RIGHTKEY        reduce using rule 87 (llenaGoto -> .)
    RETURN          reduce using rule 87 (llenaGoto -> .)

    llenaGoto                      shift and go to state 339

state 336

    (139) circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .

    IF              reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    CIRCLE          reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    SQUARE          reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    TRIANGLE        reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    LINE            reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    READ            reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    ID              reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    DO              reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 139 (circulo -> CIRCLE LEFTPAR INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER generaCirculoCuad RIGHTPAR SEMICOLON .)


state 337

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER . COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    COMMA           shift and go to state 340


state 338

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 341


state 339

    (86) conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .

    IF              reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    CIRCLE          reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    SQUARE          reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    TRIANGLE        reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    LINE            reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    DECLARE         reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    READ            reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    WRITE           reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    ID              reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    WHILE           reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    DO              reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    RIGHTKEY        reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)
    RETURN          reduce using rule 86 (conditionalElse -> gotoCuad ELSE LEFTKEY est RIGHTKEY llenaGoto .)


state 340

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA . INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON

    INTEGER         shift and go to state 342


state 341

    (148) linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .

    IF              reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    CIRCLE          reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    SQUARE          reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    TRIANGLE        reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    LINE            reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    READ            reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    ID              reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    DO              reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 148 (linea -> LINE LEFTPAR INTEGER COMMA ID COMMA INTEGER COMMA INTEGER COMMA INTEGER COMMA INTEGER generaCuadLinea RIGHTPAR SEMICOLON .)


state 342

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER . generaTrianguloCuad RIGHTPAR SEMICOLON
    (147) generaTrianguloCuad -> .

    RIGHTPAR        reduce using rule 147 (generaTrianguloCuad -> .)

    generaTrianguloCuad            shift and go to state 343

state 343

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 344


state 344

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 345


state 345

    (145) triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .

    IF              reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    CIRCLE          reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    SQUARE          reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    TRIANGLE        reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    LINE            reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    DECLARE         reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    READ            reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    ID              reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    DO              reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    RIGHTKEY        reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 145 (triangulo -> TRIANGLE LEFTPAR INTEGER COMMA INTEGER COMMA INTEGER COMMA ID COMMA BOOL COMMA INTEGER COMMA INTEGER COMMA INTEGER generaTrianguloCuad RIGHTPAR SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 47 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 47 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 47 resolved as shift
WARNING: shift/reduce conflict for LINE in state 47 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 47 resolved as shift
WARNING: shift/reduce conflict for READ in state 47 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 47 resolved as shift
WARNING: shift/reduce conflict for ID in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for DO in state 47 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACK in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 67 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 67 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 67 resolved as shift
WARNING: shift/reduce conflict for LINE in state 67 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 67 resolved as shift
WARNING: shift/reduce conflict for READ in state 67 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 70 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 70 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 70 resolved as shift
WARNING: shift/reduce conflict for LINE in state 70 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 70 resolved as shift
WARNING: shift/reduce conflict for READ in state 70 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 73 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 73 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 73 resolved as shift
WARNING: shift/reduce conflict for LINE in state 73 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 73 resolved as shift
WARNING: shift/reduce conflict for READ in state 73 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 75 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 75 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 75 resolved as shift
WARNING: shift/reduce conflict for LINE in state 75 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 75 resolved as shift
WARNING: shift/reduce conflict for READ in state 75 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 77 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 77 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 77 resolved as shift
WARNING: shift/reduce conflict for LINE in state 77 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 77 resolved as shift
WARNING: shift/reduce conflict for READ in state 77 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 79 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 79 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 79 resolved as shift
WARNING: shift/reduce conflict for LINE in state 79 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 79 resolved as shift
WARNING: shift/reduce conflict for READ in state 79 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 79 resolved as shift
WARNING: shift/reduce conflict for ID in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 82 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 82 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 82 resolved as shift
WARNING: shift/reduce conflict for LINE in state 82 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 82 resolved as shift
WARNING: shift/reduce conflict for READ in state 82 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 84 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 84 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 84 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 84 resolved as shift
WARNING: shift/reduce conflict for LINE in state 84 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 84 resolved as shift
WARNING: shift/reduce conflict for READ in state 84 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 84 resolved as shift
WARNING: shift/reduce conflict for DO in state 84 resolved as shift
WARNING: shift/reduce conflict for IF in state 86 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 86 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 86 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 86 resolved as shift
WARNING: shift/reduce conflict for LINE in state 86 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 86 resolved as shift
WARNING: shift/reduce conflict for READ in state 86 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 86 resolved as shift
WARNING: shift/reduce conflict for DO in state 86 resolved as shift
WARNING: shift/reduce conflict for IF in state 88 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 88 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 88 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 88 resolved as shift
WARNING: shift/reduce conflict for LINE in state 88 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 88 resolved as shift
WARNING: shift/reduce conflict for READ in state 88 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 88 resolved as shift
WARNING: shift/reduce conflict for DO in state 88 resolved as shift
WARNING: shift/reduce conflict for IF in state 89 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 89 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 89 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 89 resolved as shift
WARNING: shift/reduce conflict for LINE in state 89 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 89 resolved as shift
WARNING: shift/reduce conflict for READ in state 89 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 89 resolved as shift
WARNING: shift/reduce conflict for DO in state 89 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 160 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 160 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 160 resolved as shift
WARNING: shift/reduce conflict for LINE in state 160 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 160 resolved as shift
WARNING: shift/reduce conflict for READ in state 160 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 160 resolved as shift
WARNING: shift/reduce conflict for DO in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 191 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 191 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 191 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 191 resolved as shift
WARNING: shift/reduce conflict for LINE in state 191 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 191 resolved as shift
WARNING: shift/reduce conflict for READ in state 191 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 191 resolved as shift
WARNING: shift/reduce conflict for DO in state 191 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACK in state 214 resolved as shift
WARNING: shift/reduce conflict for IF in state 249 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 249 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 249 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 249 resolved as shift
WARNING: shift/reduce conflict for LINE in state 249 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 249 resolved as shift
WARNING: shift/reduce conflict for READ in state 249 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 249 resolved as shift
WARNING: shift/reduce conflict for ID in state 249 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 249 resolved as shift
WARNING: shift/reduce conflict for DO in state 249 resolved as shift
WARNING: shift/reduce conflict for IF in state 278 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 278 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 278 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 278 resolved as shift
WARNING: shift/reduce conflict for LINE in state 278 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 278 resolved as shift
WARNING: shift/reduce conflict for READ in state 278 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 278 resolved as shift
WARNING: shift/reduce conflict for ID in state 278 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 278 resolved as shift
WARNING: shift/reduce conflict for DO in state 278 resolved as shift
WARNING: shift/reduce conflict for IF in state 325 resolved as shift
WARNING: shift/reduce conflict for CIRCLE in state 325 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 325 resolved as shift
WARNING: shift/reduce conflict for TRIANGLE in state 325 resolved as shift
WARNING: shift/reduce conflict for LINE in state 325 resolved as shift
WARNING: shift/reduce conflict for DECLARE in state 325 resolved as shift
WARNING: shift/reduce conflict for READ in state 325 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 325 resolved as shift
WARNING: shift/reduce conflict for ID in state 325 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 325 resolved as shift
WARNING: shift/reduce conflict for DO in state 325 resolved as shift
WARNING: reduce/reduce conflict in state 10 resolved using rule (program2 -> empty)
WARNING: rejected rule (declare -> empty) in state 10
WARNING: reduce/reduce conflict in state 51 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 51
WARNING: reduce/reduce conflict in state 51 resolved using rule (number -> empty)
WARNING: rejected rule (arreglo -> empty) in state 51
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (circulo -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (circulo -> empty)
WARNING: rejected rule (cuadro -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (cuadro -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (circulo -> empty)
WARNING: rejected rule (triangulo -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (triangulo -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (circulo -> empty)
WARNING: rejected rule (linea -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (linea -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (declareLocal -> empty)
WARNING: rejected rule (circulo -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (declareLocal -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (declareLocal -> empty)
WARNING: rejected rule (cycles -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (cycles -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (declareLocal -> empty)
WARNING: rejected rule (assignment -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (assignment -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (declareLocal -> empty) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (est -> empty)
WARNING: rejected rule (llamadaAFunct -> empty) in state 76
WARNING: reduce/reduce conflict in state 163 resolved using rule (while2 -> empty)
WARNING: rejected rule (exp -> empty) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (number -> empty)
WARNING: rejected rule (while2 -> empty) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (number -> empty)
WARNING: rejected rule (arreglo -> empty) in state 163
WARNING: reduce/reduce conflict in state 206 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (exp -> empty) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (number -> empty) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (number -> empty)
WARNING: rejected rule (arreglo -> empty) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (llamadaAFunct -> empty)
WARNING: rejected rule (arreglo -> empty) in state 206
WARNING: reduce/reduce conflict in state 210 resolved using rule (llamadaAFunct2 -> empty)
WARNING: rejected rule (exp -> empty) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (number -> empty)
WARNING: rejected rule (exp -> empty) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (llamadaAFunct2 -> empty)
WARNING: rejected rule (number -> empty) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (number -> empty)
WARNING: rejected rule (arreglo -> empty) in state 210
WARNING: reduce/reduce conflict in state 210 resolved using rule (llamadaAFunct2 -> empty)
WARNING: rejected rule (arreglo -> empty) in state 210
WARNING: reduce/reduce conflict in state 248 resolved using rule (array -> empty)
WARNING: rejected rule (declare2Local -> empty) in state 248
WARNING: Rule (exp -> empty) is never reduced
WARNING: Rule (arreglo -> empty) is never reduced
WARNING: Rule (circulo -> empty) is never reduced
WARNING: Rule (cuadro -> empty) is never reduced
WARNING: Rule (triangulo -> empty) is never reduced
WARNING: Rule (linea -> empty) is never reduced
WARNING: Rule (declareLocal -> empty) is never reduced
WARNING: Rule (cycles -> empty) is never reduced
WARNING: Rule (assignment -> empty) is never reduced
WARNING: Rule (while2 -> empty) is never reduced
WARNING: Rule (declare2Local -> empty) is never reduced
